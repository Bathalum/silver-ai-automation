
> silver-ai-automation-app@0.1.0 test C:\Users\alant\OneDrive\Desktop\Projects\silver-ai-automation
> jest

FAIL tests/unit/domain/services/model-version-change-detection.test.ts
  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_SingleNewNode_IdentifiesAddition

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  ["00000004-0000-4000-8000-000000040000", "00000005-0000-4000-8000-000000050000"]

    [0m [90m 145 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 146 |[39m       [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 147 |[39m       expect(changes[33m.[39maddedNodes)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 148 |[39m       expect(changes[33m.[39mremovedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 149 |[39m       expect(changes[33m.[39mmodifiedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 150 |[39m     })[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/model-version-change-detection.test.ts:147:34)

  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_MultipleNewNodes_IdentifiesAllAdditions

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 4
    Received array:  ["00000009-0000-4000-8000-000000090000", "0000000a-0000-4000-8000-0000000a0000", "0000000b-0000-4000-8000-0000000b0000", "0000000c-0000-4000-8000-0000000c0000"]

    [0m [90m 170 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 171 |[39m       [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 172 |[39m       expect(changes[33m.[39maddedNodes)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 173 |[39m       expect(changes[33m.[39mremovedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 174 |[39m     })[33m;[39m
     [90m 175 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/model-version-change-detection.test.ts:172:34)

  ‚óè Model Version Change Detection ‚Ä∫ Node Removal Detection ‚Ä∫ detectNodeRemovals_SingleRemovedNode_IdentifiesRemoval

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 3
    Received array:  ["00000015-0000-4000-8000-000000150000", "00000016-0000-4000-8000-000000160000", "00000017-0000-4000-8000-000000170000"]

    [0m [90m 223 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 224 |[39m       [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 225 |[39m       expect(changes[33m.[39mremovedNodes)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 226 |[39m       expect(changes[33m.[39maddedNodes)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m [90m// Different model IDs cause detection issues[39m
     [90m 227 |[39m     })[33m;[39m
     [90m 228 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/model-version-change-detection.test.ts:225:36)

  ‚óè Model Version Change Detection ‚Ä∫ Business Rule Validation ‚Ä∫ validateChanges_BackwardCompatibleAddition_RecommendsMinorVersion

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 3

    [0m [90m 643 |[39m       [90m// Should detect additions that are backward compatible[39m
     [90m 644 |[39m       expect(changes[33m.[39maddedNodes[33m.[39mlength)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 645 |[39m       expect(changes[33m.[39mremovedNodes[33m.[39mlength)[33m.[39mtoBe([35m0[39m)[33m;[39m [90m// No removals[39m
     [90m     |[39m                                           [31m[1m^[22m[39m
     [90m 646 |[39m     })[33m;[39m
     [90m 647 |[39m   })[33m;[39m
     [90m 648 |[39m })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/model-version-change-detection.test.ts:645:43)

FAIL tests/unit/domain/use-cases/archive-function-model-use-case.test.ts
  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Dependency Validation and Risk Assessment ‚Ä∫ should assess high risk and block when enforceRiskAssessment is true

    expect(received).toContain(expected) // indexOf

    Expected substring: "High-risk archival blocked by policy"
    Received string:    "Failed to archive function model: Cannot read properties of undefined (reading 'isFailure')"

    [0m [90m 393 |[39m       [90m// Assert[39m
     [90m 394 |[39m       expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 395 |[39m       expect(result[33m.[39merror)[33m.[39mtoContain([32m'High-risk archival blocked by policy'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 396 |[39m     })[33m;[39m
     [90m 397 |[39m
     [90m 398 |[39m     it([32m'should allow high risk archival when enforceRiskAssessment is false'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:395:28)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Event Publishing and Audit Trail ‚Ä∫ should publish ModelArchived event with complete audit data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 517 |[39m
     [90m 518 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 519 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 520 |[39m       expect(mockEventBus[33m.[39mpublish)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
     [90m 521 |[39m       
     [90m 522 |[39m       [36mconst[39m eventCall [33m=[39m mockEventBus[33m.[39mpublish[33m.[39mmock[33m.[39mcalls[[35m0[39m][[35m0[39m][33m;[39m[0m

      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:519:32)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Complex Integration Scenarios ‚Ä∫ should handle model with complex node structure and dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: 85
    Received: 87

    [0m [90m 596 |[39m       [90m// Assert[39m
     [90m 597 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 598 |[39m       expect(result[33m.[39mvalue[33m.[39mdependencyImpact[33m.[39minternalNodesAffected)[33m.[39mtoBe([35m85[39m)[33m;[39m [90m// 25 + 60[39m
     [90m     |[39m                                                                   [31m[1m^[22m[39m
     [90m 599 |[39m       expect(result[33m.[39mvalue[33m.[39mdependencyImpact[33m.[39mriskLevel)[33m.[39mtoBe([32m'high'[39m)[33m;[39m
     [90m 600 |[39m     })[33m;[39m
     [90m 601 |[39m[0m

      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:598:67)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Complex Integration Scenarios ‚Ä∫ should provide comprehensive dependency impact assessment

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

      Object {
        "externalLinksAffected": 3,
    -   "internalNodesAffected": 0,
    +   "internalNodesAffected": 2,
        "riskLevel": "low",
      }

    [0m [90m 626 |[39m       [90m// Assert[39m
     [90m 627 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 628 |[39m       expect(result[33m.[39mvalue[33m.[39mdependencyImpact)[33m.[39mtoEqual({
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 629 |[39m         internalNodesAffected[33m:[39m [35m0[39m[33m,[39m [90m// Empty test model[39m
     [90m 630 |[39m         externalLinksAffected[33m:[39m [35m3[39m[33m,[39m
     [90m 631 |[39m         riskLevel[33m:[39m [32m'low'[39m[0m

      at Object.toEqual (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:628:45)

FAIL tests/unit/domain/entities/function-model-archive.test.ts
  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should set status to ARCHIVED when soft deleting

    expect(received).toBe(expected) // Object.is equality

    Expected: "archived"
    Received: "draft"

    [0m [90m 262 |[39m       [90m// Assert[39m
     [90m 263 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 264 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mARCHIVED[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 265 |[39m       expect(model[33m.[39misDeleted())[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 266 |[39m       expect(model[33m.[39mdeletedAt)[33m.[39mtoBeDefined()[33m;[39m
     [90m 267 |[39m       expect(model[33m.[39mdeletedBy)[33m.[39mtoBe([32m'test-user'[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:264:28)

  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should handle soft delete without deletedBy parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: "archived"
    Received: "draft"

    [0m [90m 274 |[39m       [90m// Assert[39m
     [90m 275 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 276 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mARCHIVED[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 277 |[39m       expect(model[33m.[39misDeleted())[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 278 |[39m       expect(model[33m.[39mdeletedAt)[33m.[39mtoBeDefined()[33m;[39m
     [90m 279 |[39m       expect(model[33m.[39mdeletedBy)[33m.[39mtoBeUndefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:276:28)

FAIL tests/unit/domain/services/node-context-access-service.test.ts
  ‚óè NodeContextAccessService ‚Ä∫ context building and management ‚Ä∫ updateNodeContext ‚Ä∫ should update existing context successfully

    Expected [object Object] to be a successful Result

    [0m [90m 130 |[39m
     [90m 131 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 132 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                        [31m[1m^[22m[39m
     [90m 133 |[39m         
     [90m 134 |[39m         [90m// Verify update was applied[39m
     [90m 135 |[39m         [36mconst[39m getResult [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:132:24)

  ‚óè NodeContextAccessService ‚Ä∫ context building and management ‚Ä∫ updateNodeContext ‚Ä∫ should merge updates with existing context data

    Expected [object Object] to be a successful Result

    [0m [90m 151 |[39m
     [90m 152 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 153 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                        [31m[1m^[22m[39m
     [90m 154 |[39m         
     [90m 155 |[39m         [36mconst[39m getResult [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m
     [90m 156 |[39m         expect(getResult)[33m.[39mtoBeValidResult()[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:153:24)

  ‚óè NodeContextAccessService ‚Ä∫ context building and management ‚Ä∫ updateNodeContext ‚Ä∫ should reject updates to non-existent context

    expect(received).toContain(expected) // indexOf

    Expected substring: "Context not found"
    Received string:    "Access denied: Target node not found"

    [0m [90m 166 |[39m         [90m// Assert[39m
     [90m 167 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 168 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Context not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 169 |[39m       })[33m;[39m
     [90m 170 |[39m
     [90m 171 |[39m       it([32m'should handle concurrent updates gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:168:30)

  ‚óè NodeContextAccessService ‚Ä∫ context building and management ‚Ä∫ updateNodeContext ‚Ä∫ should handle concurrent updates gracefully

    Expected [object Object] to be a successful Result

    [0m [90m 181 |[39m
     [90m 182 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 183 |[39m         expect(result1)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                         [31m[1m^[22m[39m
     [90m 184 |[39m         expect(result2)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 185 |[39m         
     [90m 186 |[39m         [36mconst[39m getResult [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:183:25)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle override rules in context propagation

    TypeError: Cannot read properties of undefined (reading 'constant')

    [0m [90m 326 |[39m         expect(updatedChild)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 327 |[39m         expect(updatedChild[33m.[39mvalue[33m.[39mdata[33m.[39msetting)[33m.[39mtoBe([32m'child-value'[39m)[33m;[39m [90m// Override allowed[39m
    [31m[1m>[22m[39m[90m 328 |[39m         expect(updatedChild[33m.[39mvalue[33m.[39minheritedData[33m.[39mconstant)[33m.[39mtoBe([32m'unchangeable'[39m)[33m;[39m [90m// No override[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 329 |[39m       })[33m;[39m
     [90m 330 |[39m
     [90m 331 |[39m       it([32m'should handle deep context propagation chains'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.constant (tests/unit/domain/services/node-context-access-service.test.ts:328:49)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle deep context propagation chains

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 371 |[39m         [36mconst[39m hierarchicalResult [33m=[39m contextService[33m.[39mgetHierarchicalContext(childNodeId)[33m;[39m
     [90m 372 |[39m         expect(hierarchicalResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 373 |[39m         expect(hierarchicalResult[33m.[39mvalue[33m.[39mlevels)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 374 |[39m       })[33m;[39m
     [90m 375 |[39m
     [90m 376 |[39m       it([32m'should reject propagation from non-existent context'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:373:49)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return complete hierarchical context

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 421 |[39m         [36mconst[39m hierarchical [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 422 |[39m         expect(hierarchical[33m.[39mnodeId)[33m.[39mtoEqual(childNodeId)[33m;[39m
    [31m[1m>[22m[39m[90m 423 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 424 |[39m         
     [90m 425 |[39m         [90m// Verify level order (child -> parent -> grandparent)[39m
     [90m 426 |[39m         expect(hierarchical[33m.[39mlevels[[35m0[39m][33m.[39mscope)[33m.[39mtoBe([32m'execution'[39m)[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:423:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return single level for nodes without parents

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 447 |[39m         expect(hierarchicalResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 448 |[39m         [36mconst[39m hierarchical [33m=[39m hierarchicalResult[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 449 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 450 |[39m         expect(hierarchical[33m.[39mlevels[[35m0[39m][33m.[39mdata[33m.[39mstandalone)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 451 |[39m       })[33m;[39m
     [90m 452 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:449:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should handle deep hierarchies efficiently

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 477 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 478 |[39m         [36mconst[39m hierarchical [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 479 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 480 |[39m         expect(hierarchical[33m.[39mtotalLevels)[33m.[39mtoBe([35m5[39m)[33m;[39m
     [90m 481 |[39m         expect(hierarchical[33m.[39mmaxDepthReached)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 482 |[39m       })[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:479:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should reject hierarchical request for non-existent node

    expect(received).toContain(expected) // indexOf

    Expected substring: "Context not found"
    Received string:    "Node context not found"

    [0m [90m 488 |[39m         [90m// Assert[39m
     [90m 489 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 490 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Context not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 491 |[39m       })[33m;[39m
     [90m 492 |[39m     })[33m;[39m
     [90m 493 |[39m   })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:490:30)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate read access successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 515 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 516 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 517 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 518 |[39m         expect(access[33m.[39mlevel)[33m.[39mtoBe([32m'read'[39m)[33m;[39m
     [90m 519 |[39m         expect(access[33m.[39maccessibleProperties)[33m.[39mtoContain([32m'public'[39m)[33m;[39m
     [90m 520 |[39m         expect(access[33m.[39mrestrictedProperties)[33m.[39mnot[33m.[39mtoContain([32m'public'[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:517:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate write access with proper permissions

    TypeError: Cannot set properties of undefined (setting 'accessLevel')

    [0m [90m 531 |[39m
     [90m 532 |[39m         [90m// Update context to have write access level[39m
    [31m[1m>[22m[39m[90m 533 |[39m         (contextService [36mas[39m any)[33m.[39mcontexts[33m.[39m[36mget[39m(parentNodeId[33m.[39mtoString())[33m.[39maccessLevel [33m=[39m [32m'read-write'[39m[33m;[39m
     [90m     |[39m                                                                                  [31m[1m^[22m[39m
     [90m 534 |[39m
     [90m 535 |[39m         [90m// Act[39m
     [90m 536 |[39m         [36mconst[39m validation [33m=[39m contextService[33m.[39mvalidateContextAccess([0m

      at Object.<anonymous> (tests/unit/domain/services/node-context-access-service.test.ts:533:82)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should deny access for insufficient permissions

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

    [0m [90m 569 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
     [90m 570 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 571 |[39m         expect(access[33m.[39mdenialReason)[33m.[39mtoContain([32m'Insufficient permissions'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 572 |[39m       })[33m;[39m
     [90m 573 |[39m
     [90m 574 |[39m       it([32m'should handle cross-node access validation'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:571:37)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should handle cross-node access validation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 600 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 601 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 602 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// Child should have read access to parent[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 603 |[39m         expect(access[33m.[39minheritanceAllowed)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 604 |[39m       })[33m;[39m
     [90m 605 |[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:602:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate property-level access controls

    expect(received).toContain(expected) // indexOf

    Expected value: "public"
    Received array: []

    [0m [90m 628 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 629 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 630 |[39m         expect(access[33m.[39maccessibleProperties)[33m.[39mtoContain([32m'public'[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 631 |[39m         [90m// protected and private access depends on relationship and permissions[39m
     [90m 632 |[39m       })[33m;[39m
     [90m 633 |[39m     })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:630:45)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should clone context scope successfully

    Expected [object Object] to be a successful Result

    [0m [90m 667 |[39m           nested[33m:[39m { value[33m:[39m [35m99[39m } 
     [90m 668 |[39m         })[33m;[39m
    [31m[1m>[22m[39m[90m 669 |[39m         expect(updateResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 670 |[39m         
     [90m 671 |[39m         [36mconst[39m originalContext [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m
     [90m 672 |[39m         expect(originalContext)[33m.[39mtoBeValidResult()[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:669:30)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should handle cloning with transformation rules

    TypeError: transformationRules is not iterable

    [0m [90m 865 |[39m     [90m// Apply transformation rules if provided[39m
     [90m 866 |[39m     [36mif[39m (transformationRules) {
    [31m[1m>[22m[39m[90m 867 |[39m       [36mfor[39m ([36mconst[39m rule [36mof[39m transformationRules) {
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 868 |[39m         [36mif[39m (rule[33m.[39minheritanceType [33m===[39m [32m'override'[39m [33m&&[39m rule[33m.[39mdefaultValue [33m!==[39m undefined) {
     [90m 869 |[39m           clonedData[rule[33m.[39mpropertyName] [33m=[39m rule[33m.[39mdefaultValue[33m;[39m
     [90m 870 |[39m         }[0m

      at NodeContextAccessService.transformationRules [as cloneContextScope] (lib/domain/services/node-context-access-service.ts:867:26)
      at Object.cloneContextScope (tests/unit/domain/services/node-context-access-service.test.ts:690:44)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merge conflicts with precedence rules

    TypeError: precedenceRules.map is not a function

    [0m [90m 900 |[39m     
     [90m 901 |[39m     [36mif[39m (precedenceRules) {
    [31m[1m>[22m[39m[90m 902 |[39m       [36mconst[39m priorityMap [33m=[39m [36mnew[39m [33mMap[39m(precedenceRules[33m.[39mmap(rule [33m=>[39m [rule[33m.[39mcontextId[33m,[39m rule[33m.[39mpriority]))[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 903 |[39m       [36mconst[39m sortedContexts [33m=[39m sourceContexts[33m.[39msort((a[33m,[39m b) [33m=>[39m {
     [90m 904 |[39m         [36mconst[39m priorityA [33m=[39m priorityMap[33m.[39m[36mget[39m(a[33m.[39mcontextId) [33m?[39m[33m?[39m [35m0[39m[33m;[39m
     [90m 905 |[39m         [36mconst[39m priorityB [33m=[39m priorityMap[33m.[39m[36mget[39m(b[33m.[39mcontextId) [33m?[39m[33m?[39m [35m0[39m[33m;[39m[0m

      at NodeContextAccessService.map [as mergeContextScopes] (lib/domain/services/node-context-access-service.ts:902:51)
      at Object.mergeContextScopes (tests/unit/domain/services/node-context-access-service.test.ts:784:44)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merging with non-existent contexts

    expect(received).toContain(expected) // indexOf

    Expected substring: "One or more source contexts not found"
    Received string:    "No valid source contexts found"

    [0m [90m 828 |[39m         [90m// Assert[39m
     [90m 829 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 830 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'One or more source contexts not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 831 |[39m       })[33m;[39m
     [90m 832 |[39m     })[33m;[39m
     [90m 833 |[39m   })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:830:30)

  ‚óè NodeContextAccessService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle circular reference prevention

    Expected [object Object] to be a failed Result

    [0m [90m 881 |[39m
     [90m 882 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 883 |[39m       expect(circularResult)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 884 |[39m       expect(circularResult[33m.[39merror)[33m.[39mtoContain([32m'Circular reference detected'[39m)[33m;[39m
     [90m 885 |[39m     })[33m;[39m
     [90m 886 |[39m[0m

      at Object.toBeFailureResult (tests/unit/domain/services/node-context-access-service.test.ts:883:30)

FAIL tests/unit/domain/services/model-recovery-service.test.ts
  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_ValidEligibleModel_ShouldExecuteRecovery ‚Ä∫ should coordinate complete model recovery process

    expect(received).toEqual(expected) // deep equality

    - Expected  - 16
    + Received  + 35

    - ObjectContaining {
    -   "auditData": ObjectContaining {
    -     "recoveryMetadata": ObjectContaining {
    + Object {
    +   "auditData": Object {
    +     "recoveryMetadata": Object {
            "reason": "Project reactivation - business requirement",
            "recoveredBy": "admin-456",
            "recoveryComplexity": "LOW",
            "stakeholdersNotified": true,
          },
        },
    -   "dependencyActions": ObjectContaining {
    +   "dependencyActions": Object {
          "dependenciesReconciled": true,
          "integrityValidated": true,
          "referencesRestored": true,
        },
    -   "domainEvents": ArrayContaining [
    -     Any<ModelUndeletedEvent>,
    -     Any<ModelRestoredEvent>,
    +   "domainEvents": Array [
    +     Object {
    +       "aggregateId": "recoverable-model-123",
    +       "eventId": "00000001-0000-4000-8000-000000010000",
    +       "eventType": "ModelUndeleted",
    +       "eventVersion": 1,
    +       "occurredAt": "2025-08-29T12:52:17.557Z",
    +       "reason": "Project reactivation - business requirement",
    +       "restoredAt": "2025-08-29T12:52:17.557Z",
    +       "restoredBy": "admin-456",
    +     },
    +     Object {
    +       "aggregateId": "recoverable-model-123",
    +       "eventId": "00000002-0000-4000-8000-000000020000",
    +       "eventType": "ModelRestored",
    +       "eventVersion": 1,
    +       "occurredAt": "2025-08-29T12:52:17.557Z",
    +       "reason": "Project reactivation - business requirement",
    +       "restoredAt": "2025-08-29T12:52:17.557Z",
    +       "restoredBy": "admin-456",
    +       "targetStatus": "published",
    +     },
        ],
    -   "recoveryDetails": ObjectContaining {
    -     "originalDeletionData": ObjectContaining {
    -       "deletedAt": Any<Date>,
    +   "recoveryDetails": Object {
    +     "originalDeletionData": Object {
    +       "deletedAt": 2025-08-29T12:52:17.556Z,
            "deletedBy": "temp-deleter",
          },
          "recoveredBy": "admin-456",
    -     "recoveryTimestamp": Any<Date>,
    -     "restoredState": ObjectContaining {
    +     "recoveryTimestamp": 2025-08-29T12:52:17.557Z,
    +     "restoredState": Object {
            "isDeleted": false,
            "modelId": "recoverable-model-123",
            "name": "Recoverable Model",
            "status": "published",
          },
        },
        "recoveryExecuted": true,
    -   "versioningActions": ObjectContaining {
    -     "newVersionCreated": true,
    -     "version": "2.3.2",
    -     "versionReason": "Model recovery restoration",
    +   "versioningActions": Object {
    +     "newVersionCreated": false,
    +     "version": "2.3.1",
    +     "versionReason": "No version changes required",
        },
      }

    [0m [90m 305 |[39m         [90m// Assert[39m
     [90m 306 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 307 |[39m         expect(result[33m.[39mvalue)[33m.[39mtoEqual(
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 308 |[39m           expect[33m.[39mobjectContaining({
     [90m 309 |[39m             recoveryExecuted[33m:[39m [36mtrue[39m[33m,[39m
     [90m 310 |[39m             recoveryDetails[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:307:30)

  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_WithVersionConflicts_ShouldResolveAndRestore ‚Ä∫ should resolve version conflicts during recovery process

    expect(received).toEqual(expected) // deep equality

    - Expected  - 5
    + Received  + 8

    - ObjectContaining {
    -   "compatibilityLayerCreated": true,
    -   "conflictResolution": ObjectContaining {
    + Object {
    +   "compatibilityLayerCreated": undefined,
    +   "conflictResolution": Object {
          "conflictsResolved": true,
    -     "resolutionActions": ArrayContaining [
    +     "resolutionActions": Array [
            "Updated schema to version 2.4.0",
            "Upgraded shared-library to version 1.3.0",
            "Created compatibility layer for legacy components",
          ],
        },
    -   "finalVersionValidation": ObjectContaining {
    +   "finalVersionValidation": Object {
          "compatible": true,
          "validationPassed": true,
        },
    +   "newVersionCreated": false,
    +   "version": "2.3.1",
        "versionConflictsDetected": true,
    +   "versionReason": "Version conflict resolution",
      }

    [0m [90m 478 |[39m         [90m// Assert[39m
     [90m 479 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 480 |[39m         expect(result[33m.[39mvalue[33m.[39mversioningActions)[33m.[39mtoEqual(
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 481 |[39m           expect[33m.[39mobjectContaining({
     [90m 482 |[39m             versionConflictsDetected[33m:[39m [36mtrue[39m[33m,[39m
     [90m 483 |[39m             conflictResolution[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:480:48)

  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_PostRecovery_ShouldEnsureModelIntegrity ‚Ä∫ should validate complete model integrity after recovery

    expect(received).toEqual(expected) // deep equality

    - Expected  - 8
    + Received  + 8

    - ObjectContaining {
    + Object {
        "integrityValidationPassed": true,
    -   "qualityMetrics": ObjectContaining {
    +   "qualityMetrics": Object {
          "dataPreservationRate": 100,
          "integrityScore": 100,
          "performanceImpact": "MINIMAL",
          "recoverySuccessRate": 100,
        },
    -   "validationResults": ObjectContaining {
    -     "businessRuleValidation": ObjectContaining {
    +   "validationResults": Object {
    +     "businessRuleValidation": Object {
            "allRulesSatisfied": true,
            "noViolationsDetected": true,
          },
    -     "dataConsistencyValidation": ObjectContaining {
    +     "dataConsistencyValidation": Object {
            "auditTrailComplete": true,
            "dataConsistent": true,
            "noCorruptionDetected": true,
          },
    -     "dependencyValidation": ObjectContaining {
    +     "dependencyValidation": Object {
            "dependenciesResolved": true,
            "integrityMaintained": true,
            "referencesValid": true,
          },
    -     "modelStateValidation": ObjectContaining {
    +     "modelStateValidation": Object {
            "isValid": true,
            "metadataIntact": true,
    -       "modelNotDeleted": true,
    +       "modelNotDeleted": false,
            "requiredPropertiesPresent": true,
          },
        },
      }

    [0m [90m 657 |[39m         [90m// Assert[39m
     [90m 658 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 659 |[39m         expect(result[33m.[39mvalue)[33m.[39mtoEqual(
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 660 |[39m           expect[33m.[39mobjectContaining({
     [90m 661 |[39m             integrityValidationPassed[33m:[39m [36mtrue[39m[33m,[39m
     [90m 662 |[39m             validationResults[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:659:30)

  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_WithIssues_ShouldIdentifyProblems ‚Ä∫ should identify and report integrity issues post-recovery

    expect(received).toEqual(expected) // deep equality

    - Expected  - 7
    + Received  + 2

    - ObjectContaining {
    -   "dataConsistencyIssues": ObjectContaining {
    -     "inconsistentFields": Array [
    -       "metadata-mismatch-field",
    -     ],
    -   },
    -   "dependencyIssues": ObjectContaining {
    + Object {
    +   "dependencyIssues": Object {
          "brokenReferences": Array [
            "ref-issue-1",
          ],
        },
      }

    [0m [90m 719 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 720 |[39m         expect(result[33m.[39mvalue[33m.[39mintegrityValidationPassed)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 721 |[39m         expect(result[33m.[39mvalue[33m.[39mdetectedIssues)[33m.[39mtoEqual(
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 722 |[39m           expect[33m.[39mobjectContaining({
     [90m 723 |[39m             dependencyIssues[33m:[39m expect[33m.[39mobjectContaining({
     [90m 724 |[39m               brokenReferences[33m:[39m [[32m'ref-issue-1'[39m][33m,[39m[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:721:45)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ RecoveryServiceCoordination_ShouldUseOnlyDomainDependencies ‚Ä∫ should coordinate recovery using only domain services and entities

    expect(received).toBe(expected) // Object.is equality

    Expected: "function"
    Received: "undefined"

    [0m [90m 768 |[39m           expect(dep)[33m.[39mtoBeDefined()[33m;[39m
     [90m 769 |[39m           [90m// Verify these are domain services, not infrastructure implementations[39m
    [31m[1m>[22m[39m[90m 770 |[39m           expect([36mtypeof[39m dep[33m.[39mvalidateDependencyIntegrity)[33m.[39mtoBe([32m'function'[39m)[33m;[39m
     [90m     |[39m                                                          [31m[1m^[22m[39m
     [90m 771 |[39m         })[33m;[39m
     [90m 772 |[39m
     [90m 773 |[39m         [90m// Verify versioning service methods[39m[0m

      at toBe (tests/unit/domain/services/model-recovery-service.test.ts:770:58)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/model-recovery-service.test.ts:767:22)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ DomainEventGeneration_ForRecovery_ShouldFollowEventSourcingPatterns ‚Ä∫ should generate appropriate domain events for recovery operations

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 4

    - ObjectContaining {
    -   "modelId": "recoverable-model-123",
    -   "restoredAt": Any<Date>,
    + Object {
    +   "aggregateId": "recoverable-model-123",
    +   "reason": "Domain event testing",
    +   "restoredAt": "2025-08-29T12:52:17.623Z",
        "restoredBy": "event-tester",
      }

    [0m [90m 805 |[39m         expect(undeletedEvent)[33m.[39mtoBeDefined()[33m;[39m
     [90m 806 |[39m         expect(undeletedEvent[33m.[39maggregateId)[33m.[39mtoBe([32m'recoverable-model-123'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 807 |[39m         expect(undeletedEvent[33m.[39mgetEventData())[33m.[39mtoEqual(
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 808 |[39m           expect[33m.[39mobjectContaining({
     [90m 809 |[39m             modelId[33m:[39m [32m'recoverable-model-123'[39m[33m,[39m
     [90m 810 |[39m             restoredBy[33m:[39m [32m'event-tester'[39m[33m,[39m[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:807:47)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ ErrorHandling_ShouldUseResultPattern ‚Ä∫ should use Result pattern for error handling throughout recovery coordination

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 836 |[39m
     [90m 837 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 838 |[39m         expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 839 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Dependency validation service unavailable'[39m)[33m;[39m
     [90m 840 |[39m         
     [90m 841 |[39m         [90m// Verify no partial state changes occurred[39m[0m

      at Object.toBe (tests/unit/domain/services/model-recovery-service.test.ts:838:34)

FAIL tests/e2e/focused-user-workflows.e2e.test.ts
  ‚óè Console

    console.log
      ‚ö†Ô∏è Container node creation failed: Failed to add container node: model.addNode is not a function

      at Object.log (tests/e2e/focused-user-workflows.e2e.test.ts:447:19)

    console.log
      ‚ö†Ô∏è Model versioning not fully implemented: Author ID is required

      at Object.log (tests/e2e/focused-user-workflows.e2e.test.ts:530:19)

    console.log
      ‚ö†Ô∏è Workflow validation not fully implemented: Failed to validate workflow structure: Cannot read properties of undefined (reading 'validateStructuralIntegrity')

      at Object.log (tests/e2e/focused-user-workflows.e2e.test.ts:569:19)

    console.log
      ‚úÖ Clean Architecture boundaries maintained

      at Object.log (tests/e2e/focused-user-workflows.e2e.test.ts:608:17)

  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyEnforcement_E2E ‚Ä∫ should_PreventInvalidOperations_WithProperErrorMessages

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Valid position coordinates are required"

    [0m [90m 467 |[39m
     [90m 468 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 469 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 470 |[39m
     [90m 471 |[39m         [90m// Test adding action to non-existent container[39m
     [90m 472 |[39m         [36mconst[39m createResult [33m=[39m [36mawait[39m createModelUseCase[33m.[39mexecute({[0m

      at Object.toContain (tests/e2e/focused-user-workflows.e2e.test.ts:469:42)

FAIL tests/e2e/complete-user-workflow-scenarios.e2e.test.ts
  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteModelLifecycleWorkflow_E2E ‚Ä∫ should_ExecuteCompleteModelLifecycle_FromCreationToArchival

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 687 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockModelRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 688 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 689 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe([32m'Complete Lifecycle Model'[39m)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 690 |[39m
     [90m 691 |[39m         [90m// PHASE 2: UC-002 - Add Container Node (IO Input)[39m
     [90m 692 |[39m         [36mconst[39m inputNodeResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:689:40)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyViolationHandling_E2E ‚Ä∫ should_PreventDependencyViolations_AndMaintainSystemIntegrity

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Valid position coordinates are required"

    [0m [90m 881 |[39m
     [90m 882 |[39m         expect(addNodeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 883 |[39m         expect(addNodeResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 884 |[39m
     [90m 885 |[39m         [90m// Test UC-003 dependency violation (add action to non-existent container)[39m
     [90m 886 |[39m         [36mconst[39m createResult [33m=[39m [36mawait[39m createModelUseCase[33m.[39mexecute({[0m

      at Object.toContain (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:883:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ComplexOrchestrationWorkflow_E2E ‚Ä∫ should_CoordinateAllOrchestrationServices_InComplexExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:954:49)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ErrorRecoveryInComplexPipeline_E2E ‚Ä∫ should_RecoverFromFailures_AcrossComplexOrchestrationLayers

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1168:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ CompleteAgentWorkflow_E2E ‚Ä∫ should_ExecuteCompleteAgentWorkflow_FromRegistrationToExecution

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1263 |[39m         })[33m;[39m
     [90m 1264 |[39m
    [31m[1m>[22m[39m[90m 1265 |[39m         expect(agent1Registration[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                              [31m[1m^[22m[39m
     [90m 1266 |[39m         expect(agent1Registration[33m.[39mvalue[33m.[39magentId)[33m.[39mtoBe([32m'test-agent-processing'[39m)[33m;[39m
     [90m 1267 |[39m
     [90m 1268 |[39m         [36mconst[39m agent2Registration [33m=[39m [36mawait[39m registerAgentUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1265:46)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AgentIntegrationWithModels_E2E ‚Ä∫ should_IntegrateAgents_WithCompleteModelWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1421:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ CROSS-FEATURE INTEGRATION: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CompleteCrossFeatureWorkflow_E2E ‚Ä∫ should_ExecuteCompleteCrossFeatureIntegration_WithLinkingAndExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1495:55)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ APPLICATION SERVICES COORDINATION ‚Ä∫ CompleteServiceOrchestration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InCompleteWorkflow

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1742 |[39m         })[33m;[39m
     [90m 1743 |[39m
    [31m[1m>[22m[39m[90m 1744 |[39m         expect(modelManagementResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                                 [31m[1m^[22m[39m
     [90m 1745 |[39m         [36mconst[39m orchestrationModelId [33m=[39m modelManagementResult[33m.[39mvalue[33m.[39mmodelId[33m;[39m
     [90m 1746 |[39m
     [90m 1747 |[39m         [90m// PHASE 2: AI Agent Management Service coordination[39m[0m

      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1744:49)

FAIL tests/e2e/primary-workflow-chain.e2e.test.ts
  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 336 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 337 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 338 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe(workflowName)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 339 |[39m
     [90m 340 |[39m         [90m// UC-002: Add Container Node (must create model before adding nodes)[39m
     [90m 341 |[39m         [36mconst[39m addContainerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/primary-workflow-chain.e2e.test.ts:338:40)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Invalid node type specified"

    [0m [90m 428 |[39m         [90m// Assert: Dependency violation should be caught[39m
     [90m 429 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 430 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 431 |[39m
     [90m 432 |[39m         [90m// Verify no side effects occurred[39m
     [90m 433 |[39m         [36mconst[39m auditLogs [33m=[39m [36mawait[39m mockAuditRepository[33m.[39mfindByModelId(nonExistentModelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:430:42)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution

    expect(received).toContain(expected) // indexOf

    Expected substring: "must be published"
    Received string:    "Valid environment is required (development, staging, production)"

    [0m [90m 457 |[39m         [90m// Assert: Execution should fail due to publication prerequisite[39m
     [90m 458 |[39m         expect(executeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 459 |[39m         expect(executeResult[33m.[39merror)[33m.[39mtoContain([32m'must be published'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 460 |[39m
     [90m 461 |[39m         [90m// Verify model status is still DRAFT[39m
     [90m 462 |[39m         [36mconst[39m model [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:459:37)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ValidateWorkflowStructure_BeforePublishing

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 485 |[39m
     [90m 486 |[39m         [90m// Assert: Validation should fail for empty workflow[39m
    [31m[1m>[22m[39m[90m 487 |[39m         expect(validateResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// The operation succeeds[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 488 |[39m         expect(validateResult[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m [90m// But validation reports invalid[39m
     [90m 489 |[39m
     [90m 490 |[39m         [90m// Try to publish with validation enforcement[39m[0m

      at Object.toBe (tests/e2e/primary-workflow-chain.e2e.test.ts:487:42)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_HandleComplexWorkflow_WithMultipleNodesAndActions

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:549:47)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ ErrorRecovery_E2E ‚Ä∫ should_RecoverFromTransientFailures_DuringExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:640:37)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Architectural Compliance Validation ‚Ä∫ CleanArchitectureCompliance_E2E ‚Ä∫ should_MaintainLayerSeparation_ThroughoutWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:702:41)

FAIL tests/e2e/comprehensive-user-workflows.e2e.test.ts
  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 522 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 523 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 524 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe(workflowName)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 525 |[39m
     [90m 526 |[39m         [90m// UC-002: Add Container Node (must create model before adding nodes)[39m
     [90m 527 |[39m         [36mconst[39m addContainerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/comprehensive-user-workflows.e2e.test.ts:524:40)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Node name is required"

    [0m [90m 619 |[39m         [90m// Assert: Dependency violation should be caught[39m
     [90m 620 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 621 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 622 |[39m
     [90m 623 |[39m         [90m// Verify no side effects occurred[39m
     [90m 624 |[39m         [36mconst[39m auditLogs [33m=[39m [36mawait[39m mockAuditRepository[33m.[39mfindByModelId(nonExistentModelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:621:42)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution

    expect(received).toContain(expected) // indexOf

    Expected substring: "must be published"
    Received string:    "Valid environment is required (development, staging, production)"

    [0m [90m 648 |[39m         [90m// Assert: Execution should fail due to publication prerequisite[39m
     [90m 649 |[39m         expect(executeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 650 |[39m         expect(executeResult[33m.[39merror)[33m.[39mtoContain([32m'must be published'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 651 |[39m
     [90m 652 |[39m         [90m// Verify model status is still DRAFT[39m
     [90m 653 |[39m         [36mconst[39m model [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:650:37)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ WorkflowVersioning_E2E ‚Ä∫ should_CreateNewVersion_AfterSuccessfulExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:679:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_CoordinateComplexExecution_WithMultipleOrchestrationServices

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:743:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_HandleCascadingFailures_InComplexPipeline

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:890:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_ExecuteCompleteAIAgentWorkflow_WithRegistrationDiscoveryExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:966:45)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_HandleAgentFailures_WithGracefulDegradation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1144 |[39m         })[33m;[39m
     [90m 1145 |[39m
    [31m[1m>[22m[39m[90m 1146 |[39m         expect(errorHandlingResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                               [31m[1m^[22m[39m
     [90m 1147 |[39m
     [90m 1148 |[39m         [90m// Act: Execute with agent failure simulation[39m
     [90m 1149 |[39m         [36mconst[39m containerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1146:47)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_IntegrateAcrossFeaturesWithLinkStrengthCalculation

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1209:55)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_PropagateErrorsAcrossCrossFeatureLinks

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1353:49)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Error Recovery Across Dependency Boundaries ‚Ä∫ SystemWideRecovery_E2E ‚Ä∫ should_RecoverFromComplexFailureScenarios_AcrossMultipleLayers

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1490:51)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ All Application Services Integration ‚Ä∫ CompleteSystemIntegration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InComplexWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1654:61)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Real User Scenarios with Actual Data Flows ‚Ä∫ ProductionLikeWorkflows_E2E ‚Ä∫ should_ExecuteRealisticBusinessWorkflow_WithActualDataTransformations

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:2077:52)

FAIL tests/unit/domain/entities/function-model-publication.test.ts
  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ publish() - State Transition Rules ‚Ä∫ should transition from DRAFT to PUBLISHED when valid

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:56:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ publish() - State Transition Rules ‚Ä∫ should fail when model is already PUBLISHED

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:68:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ validateWorkflow() - Publication Validation Rules ‚Ä∫ should validate successfully with input and output nodes

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:176:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ validateWorkflow() - Publication Validation Rules ‚Ä∫ should include warnings for isolated nodes

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:190:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Business Rule Enforcement During Publication ‚Ä∫ should prevent modification of published models

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:254:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Business Rule Enforcement During Publication ‚Ä∫ should prevent removal from published models

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:276:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Business Rule Enforcement During Publication ‚Ä∫ should maintain model integrity during publication process

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:292:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Publication Prerequisites ‚Ä∫ should allow publication with valid minimum structure

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:325:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Publication Prerequisites ‚Ä∫ should update timestamp on successful publication

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:337:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Publication Idempotency Rules ‚Ä∫ should not change state on repeated publish attempts

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:355:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Publication Idempotency Rules ‚Ä∫ should maintain consistent error messages for invalid state

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:371:7)

FAIL tests/unit/domain/rules/execution-rules.test.ts
  ‚óè ExecutionRules ‚Ä∫ model validation ‚Ä∫ should warn about nodes without actions

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 168 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 169 |[39m       [90m// Should be able to execute but with warnings[39m
    [31m[1m>[22m[39m[90m 170 |[39m       expect(result[33m.[39mvalue[33m.[39mcanExecute)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 171 |[39m       expect(result[33m.[39mvalue[33m.[39mwarnings[33m.[39msome(w [33m=>[39m w[33m.[39mincludes([32m'has no actions'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 172 |[39m     })[33m;[39m
     [90m 173 |[39m[0m

      at Object.toBe (tests/unit/domain/rules/execution-rules.test.ts:170:39)

  ‚óè ExecutionRules ‚Ä∫ node execution order validation ‚Ä∫ should detect gaps in execution order

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

    [0m [90m 372 |[39m       [90m// Assert[39m
     [90m 373 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 374 |[39m       expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 375 |[39m       expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Execution order gap detected: missing order 2'[39m)[33m;[39m
     [90m 376 |[39m     })[33m;[39m
     [90m 377 |[39m[0m

      at Object.toBe (tests/unit/domain/rules/execution-rules.test.ts:374:36)

  ‚óè ExecutionRules ‚Ä∫ resource requirements validation ‚Ä∫ should calculate total resource requirements

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 3

      Object {
    -   "cpu": 6,
    -   "executionTime": 900,
    -   "memory": 3072,
    +   "cpu": 2,
    +   "executionTime": 300,
    +   "memory": 1024,
      }

    [0m [90m 526 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 527 |[39m       expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 528 |[39m       expect(result[33m.[39mvalue[33m.[39mtotalRequirements)[33m.[39mtoEqual({
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 529 |[39m         cpu[33m:[39m [35m6[39m[33m,[39m
     [90m 530 |[39m         memory[33m:[39m [35m3072[39m[33m,[39m
     [90m 531 |[39m         executionTime[33m:[39m [35m900[39m[0m

      at Object.toEqual (tests/unit/domain/rules/execution-rules.test.ts:528:46)

FAIL tests/unit/domain/services/hierarchical-context-access.test.ts
  ‚óè Console

    console.log
      DEBUG: Setting context for level1Container.actionId: d8cc77ae-85da-4ed9-8d16-19775ea6e687

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:715:15)

    console.log
      DEBUG: level2Model.modelId: 78093dc6-2d48-4b92-8541-7654a5518958

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:716:15)

    console.log
      DEBUG: level1Context.nestedModelOutputs keys: [ '78093dc6-2d48-4b92-8541-7654a5518958' ]

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:717:15)

    console.log
      DEBUG: Service state after setting context:

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:723:15)

    console.log
      DEBUG: Node count: 3

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:724:15)

    console.log
      DEBUG: Node d8cc77ae-85da-4ed9-8d16-19775ea6e687 (FunctionModelContainer) - hasContext: true, contextKeys: []

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:726:17)
          at Array.forEach (<anonymous>)

    console.log
      DEBUG: Target node context data: {}

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:728:19)
          at Array.forEach (<anonymous>)

    console.log
      DEBUG: Target node context data type: object

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:729:19)
          at Array.forEach (<anonymous>)

    console.log
      DEBUG: Node 9f3bde0a-20a8-4871-8406-c9985bfe4967 (FunctionModelContainer) - hasContext: true, contextKeys: []

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:726:17)
          at Array.forEach (<anonymous>)

    console.log
      DEBUG: Node 9d06ff00-7882-4ffb-81a7-b3f0515893ef (TetherNode) - hasContext: true, contextKeys: []

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:726:17)
          at Array.forEach (<anonymous>)

  ‚óè Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance ‚Ä∫ Uncle/Aunt Lateral Access Rules ‚Ä∫ NephewNiece_ShouldHaveReadOnlyAccessToUncleAuntContexts

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 595 |[39m
     [90m 596 |[39m       [90m// DOMAIN RULE: Uncle/aunt contexts accessible for root cause analysis[39m
    [31m[1m>[22m[39m[90m 597 |[39m       expect(uncleContextFound)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                 [31m[1m^[22m[39m
     [90m 598 |[39m       expect((uncleContextFound [36mas[39m any)[33m.[39moperationalData[33m.[39mvalidatedItems)[33m.[39mtoBe([35m50[39m)[33m;[39m
     [90m 599 |[39m       expect((uncleContextFound [36mas[39m any)[33m.[39mdebugInfo)[33m.[39mtoContain([32m'Uncle stage processing'[39m)[33m;[39m
     [90m 600 |[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/hierarchical-context-access.test.ts:597:33)

FAIL tests/unit/domain/entities/function-model-comprehensive.test.ts
  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Business Rules and Domain Logic Enforcement ‚Ä∫ Publish_ValidDraftModel_ShouldTransitionStateAndEnforceRules

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 181 |[39m
     [90m 182 |[39m       [90m// Assert - Business rule: only valid workflows can be published[39m
    [31m[1m>[22m[39m[90m 183 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 184 |[39m       expect(validModel[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mPUBLISHED[39m)[33m;[39m
     [90m 185 |[39m       
     [90m 186 |[39m       [90m// Domain invariant: version count remains unchanged (publish doesn't increment it)[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:183:32)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Business Rules and Domain Logic Enforcement ‚Ä∫ Publish_AlreadyPublishedModel_ShouldEnforceBusinessRule

    expect(received).toBe(expected) // Object.is equality

    Expected: "Model is already published"
    Received: "Cannot publish invalid workflow"

    [0m [90m 201 |[39m       [90m// Assert - Business rule: cannot republish[39m
     [90m 202 |[39m       expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 203 |[39m       expect(result[33m.[39merror)[33m.[39mtoBe([32m'Model is already published'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 204 |[39m     })[33m;[39m
     [90m 205 |[39m
     [90m 206 |[39m     it([32m'Archive_PublishedModel_ShouldTransitionToArchivedState'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:203:28)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Workflow Validation and Domain Complexity ‚Ä∫ ValidateWorkflow_CompleteWorkflow_ShouldPassValidation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 384 |[39m       
     [90m 385 |[39m       [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 386 |[39m       expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 387 |[39m       expect(validation[33m.[39merrors)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 388 |[39m       expect(validation[33m.[39mwarnings)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 389 |[39m     })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:386:34)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Workflow Validation and Domain Complexity ‚Ä∫ ValidateWorkflow_WithIONode_ShouldPassValidation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 431 |[39m       
     [90m 432 |[39m       [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 433 |[39m       expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 434 |[39m       expect(validation[33m.[39merrors)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 435 |[39m     })[33m;[39m
     [90m 436 |[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:433:34)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Workflow Validation and Domain Complexity ‚Ä∫ ValidateWorkflow_WithStageNodes_ShouldNotGenerateWarnings

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 465 |[39m       
     [90m 466 |[39m       [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 467 |[39m       expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 468 |[39m       expect(validation[33m.[39mwarnings)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m [90m// Connected workflow with actions[39m
     [90m 469 |[39m     })[33m;[39m
     [90m 470 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:467:34)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Entity Identity and Equality ‚Ä∫ Equals_DifferentModelId_ShouldNotBeEqual

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

    [0m [90m 565 |[39m
     [90m 566 |[39m       [90m// Act & Assert - Different entities despite same properties[39m
    [31m[1m>[22m[39m[90m 567 |[39m       expect(model1[33m.[39mequals(model2))[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 568 |[39m     })[33m;[39m
     [90m 569 |[39m   })[33m;[39m
     [90m 570 |[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:567:37)

FAIL tests/unit/domain/events/domain-event-integration.test.ts
  ‚óè Domain Event Behavior and Integration - Clean Architecture Compliance ‚Ä∫ Function Model Lifecycle Events ‚Ä∫ ModelPublication_ShouldRaiseModelPublishedEvent

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 154 |[39m       [90m// Act - Publish model and raise event[39m
     [90m 155 |[39m       [36mconst[39m publishResult [33m=[39m model[33m.[39mpublish()[33m;[39m
    [31m[1m>[22m[39m[90m 156 |[39m       expect(publishResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 157 |[39m
     [90m 158 |[39m       [36mconst[39m event [33m=[39m [36mnew[39m [33mModelPublished[39m({
     [90m 159 |[39m         modelId[33m:[39m model[33m.[39mmodelId[33m,[39m[0m

      at Object.toBe (tests/unit/domain/events/domain-event-integration.test.ts:156:39)

  ‚óè Domain Event Behavior and Integration - Clean Architecture Compliance ‚Ä∫ Cross-Feature Relationship Events ‚Ä∫ NodeLinkCreation_ShouldRaiseNodeLinkCreatedEvent

    TypeError: props.sourceNodeId?.equals is not a function

    [0m [90m 145 |[39m     [36mif[39m (props[33m.[39msourceFeature [33m===[39m props[33m.[39mtargetFeature [33m&&[39m
     [90m 146 |[39m         props[33m.[39msourceEntityId [33m===[39m props[33m.[39mtargetEntityId [33m&&[39m
    [31m[1m>[22m[39m[90m 147 |[39m         props[33m.[39msourceNodeId[33m?[39m[33m.[39mequals(props[33m.[39mtargetNodeId [33m||[39m props[33m.[39msourceNodeId)) {
     [90m     |[39m                             [31m[1m^[22m[39m
     [90m 148 |[39m       [36mreturn[39m [33mResult[39m[33m.[39mfail[33m<[39m[36mvoid[39m[33m>[39m([32m'Self-links are prohibited'[39m)[33m;[39m
     [90m 149 |[39m     }
     [90m 150 |[39m[0m

      at Function.equals [as validate] (lib/domain/entities/node-link.ts:147:29)
      at Function.validate [as create] (lib/domain/entities/node-link.ts:36:39)
      at Object.create (tests/unit/domain/events/domain-event-integration.test.ts:526:35)

FAIL tests/integration/domain/services/business-rule-validation-service.integration.test.ts
  ‚óè Console

    console.log
      Hierarchical validation warnings: [ 'Consider enabling audit logging for compliance' ]

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:339:19)

    console.log
      Feature data-processing validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node',
          'Consider enabling audit logging for compliance'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Feature ai-ml validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node',
          'Consider enabling audit logging for compliance'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Feature integration validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node',
          'Consider enabling audit logging for compliance'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Feature analytics validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node',
          'Consider enabling audit logging for compliance'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Feature security validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node',
          'Consider enabling audit logging for compliance'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Context validation results: [
        {
          environment: 'development',
          isValid: false,
          errorCount: 1,
          warningCount: 2
        },
        {
          environment: 'staging',
          isValid: false,
          errorCount: 1,
          warningCount: 2
        },
        {
          environment: 'production',
          isValid: false,
          errorCount: 1,
          warningCount: 2
        },
        {
          environment: 'testing',
          isValid: false,
          errorCount: 1,
          warningCount: 2
        }
      ]

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:980:17)

    console.log
      Architectural compliance validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node',
          'Consider enabling audit logging for compliance'
        ]
      }

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1115:17)

    console.log
      Null Model handled gracefully: Model cannot be null or undefined

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1186:23)

    console.log
      Undefined Actions validation result: {
        isValid: true,
        errors: [],
        warnings: [ 'Consider enabling audit logging for compliance' ]
      }

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1190:23)

    console.log
      Empty Name Model validation result: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node',
          'Model name does not follow organizational naming conventions',
          'Consider enabling audit logging for compliance'
        ]
      }

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1190:23)

    console.log
      Edge case validation errors: [ 'Required input boundary node is missing' ]

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1250:19)

    console.log
      Edge case validation warnings: [
        'Workflow has no output boundaries - consider adding an output IO node',
        'Consider enabling audit logging for compliance'
      ]

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1253:19)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Integration with All 24 Use Cases ‚Ä∫ UC-001_through_UC-009_FunctionModelManagement_Integration ‚Ä∫ should_ValidateBusinessRules_ForAllFunctionModelUseCases

    expect(received).toContain(expected) // indexOf

    Expected value: "Action node API Call Without Endpoint missing required configuration: apiEndpoint"
    Received array: ["Required input boundary node is missing"]

    [0m [90m 131 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 132 |[39m         expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 133 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Action node API Call Without Endpoint missing required configuration: apiEndpoint'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 134 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Action node Transform Without Rules missing transformation configuration'[39m)[33m;[39m
     [90m 135 |[39m
     [90m 136 |[39m         [90m// Verify validation covers all function model management scenarios[39m[0m

      at Object.toContain (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:133:37)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Integration with All 24 Use Cases ‚Ä∫ UC-010_through_UC-017_NodeManagement_Integration ‚Ä∫ should_ValidateNodeDependencyRules_AcrossAllNodeTypes

    expect(received).toContain(expected) // indexOf

    Expected value: "Action node High Memory Action requires high memory allocation"
    Received array: ["Workflow has no output boundaries - consider adding an output IO node", "Consider enabling audit logging for compliance"]

    [0m [90m 271 |[39m         
     [90m 272 |[39m         [90m// Verify resource allocation validation[39m
    [31m[1m>[22m[39m[90m 273 |[39m         expect(result[33m.[39mvalue[33m.[39mwarnings)[33m.[39mtoContain([32m'Action node High Memory Action requires high memory allocation'[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 274 |[39m         
     [90m 275 |[39m         [90m// Verify data security validation[39m
     [90m 276 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Workflow violates data retention policy: sensitive data processing without encryption'[39m)[33m;[39m[0m

      at Object.toContain (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:273:39)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Integration with All 24 Use Cases ‚Ä∫ UC-023_UC-024_ValidationAndCompliance_Integration ‚Ä∫ should_ValidateCompliance_WithOrganizationalPolicies

    expect(received).toContain(expected) // indexOf

    Expected value: "External data sharing requires organizational approval"
    Received array: ["Required input boundary node is missing"]

    [0m [90m 461 |[39m
     [90m 462 |[39m         [90m// Verify data sharing compliance[39m
    [31m[1m>[22m[39m[90m 463 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'External data sharing requires organizational approval'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 464 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Workflow violates data retention policy: sensitive data processing without encryption'[39m)[33m;[39m
     [90m 465 |[39m
     [90m 466 |[39m         [90m// Verify resource allocation limits[39m[0m

      at Object.toContain (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:463:37)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Integration with All 24 Use Cases ‚Ä∫ UC-023_UC-024_ValidationAndCompliance_Integration ‚Ä∫ should_ValidateSecurityRequirements_AcrossAllOperations

    expect(received).toContain(expected) // indexOf

    Expected value: "Security scan required for external API integrations"
    Received array: ["Required input boundary node is missing"]

    [0m [90m 515 |[39m
     [90m 516 |[39m         [90m// Verify external API security requirements[39m
    [31m[1m>[22m[39m[90m 517 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Security scan required for external API integrations'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 518 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Authentication-required nodes must specify authentication method'[39m)[33m;[39m
     [90m 519 |[39m         expect(result[33m.[39mvalue[33m.[39mwarnings)[33m.[39mtoContain([32m'Action node External API Integration handles sensitive data - ensure secure processing'[39m)[33m;[39m
     [90m 520 |[39m[0m

      at Object.toContain (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:517:37)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Performance Under High-Load Operations ‚Ä∫ highLoadPerformance_Integration ‚Ä∫ should_MaintainPerformance_WithLargeScaleValidation

    Invalid action creation parameters: ActionId: Node ID must be a valid UUID

    [0m [90m 496 |[39m       [36mif[39m (actionIdResult[33m.[39misFailure) errors[33m.[39mpush([32m`ActionId: ${actionIdResult.error}`[39m)[33m;[39m
     [90m 497 |[39m       [36mif[39m (parentNodeIdResult[33m.[39misFailure) errors[33m.[39mpush([32m`ParentNodeId: ${parentNodeIdResult.error}`[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 498 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid action creation parameters: ${errors.join(', ')}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 499 |[39m     }
     [90m 500 |[39m
     [90m 501 |[39m     [36mconst[39m tetherNodeProps [33m=[39m {[0m

      at TetherNodeBuilder.build (tests/utils/test-fixtures.ts:498:13)
      at Object.build (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:854:16)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Rule Configuration and Management ‚Ä∫ ruleConfiguration_Integration ‚Ä∫ should_ValidateRuleConsistency_AcrossConfigurationChanges

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1032:42)

FAIL tests/unit/domain/services/fractal-orchestration-service.test.ts
  ‚óè FractalOrchestrationService ‚Ä∫ hierarchical orchestration patterns ‚Ä∫ handleVerticalNesting ‚Ä∫ should handle vertical nesting successfully

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  ["fda161a7-3e5a-4868-83c0-416313bfbea0"]

    [0m [90m 345 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 346 |[39m         [36mconst[39m nestedResults [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 347 |[39m         expect([33mObject[39m[33m.[39mkeys(nestedResults))[33m.[39mtoHaveLength([35m2[39m)[33m;[39m
     [90m     |[39m                                            [31m[1m^[22m[39m
     [90m 348 |[39m         
     [90m 349 |[39m         [90m// Verify each nested model has results[39m
     [90m 350 |[39m         [36mfor[39m ([36mconst[39m modelId [36mof[39m [33mObject[39m[33m.[39mkeys(nestedResults)) {[0m

      at Object.toHaveLength (tests/unit/domain/services/fractal-orchestration-service.test.ts:347:44)

  ‚óè FractalOrchestrationService ‚Ä∫ hierarchical orchestration patterns ‚Ä∫ handleHorizontalScaling ‚Ä∫ should handle horizontal scaling successfully

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 1
    Received array:  ["cabe549c-b341-4603-89ff-a29f7e004a9f"]

    [0m [90m 393 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 394 |[39m         [36mconst[39m horizontalResults [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 395 |[39m         expect([33mObject[39m[33m.[39mkeys(horizontalResults))[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 396 |[39m         
     [90m 397 |[39m         [90m// Verify all models executed[39m
     [90m 398 |[39m         [36mfor[39m ([36mconst[39m modelId [36mof[39m [33mObject[39m[33m.[39mkeys(horizontalResults)) {[0m

      at Object.toHaveLength (tests/unit/domain/services/fractal-orchestration-service.test.ts:395:48)

  ‚óè FractalOrchestrationService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle concurrent fractal executions

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "fractal_397d236d-b955-47f7-87fd-7ab66f2d29b6_1756471938301"

    [0m [90m 591 |[39m       expect(result1)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 592 |[39m       expect(result2)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 593 |[39m       expect(result1[33m.[39mvalue[33m.[39mexecutionId)[33m.[39mnot[33m.[39mtoBe(result2[33m.[39mvalue[33m.[39mexecutionId)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 594 |[39m     })[33m;[39m
     [90m 595 |[39m
     [90m 596 |[39m     it([32m'should handle resource cleanup after execution'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/services/fractal-orchestration-service.test.ts:593:45)

FAIL tests/unit/domain/services/clean-architecture-compliance.test.ts
  ‚óè Console

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ result pattern compliance ‚Ä∫ error propagation through Result pattern ‚Ä∫ should propagate errors through Result chains without exceptions

    Expected [object Object] to be a failed Result

    [0m [90m 236 |[39m         [36mawait[39m expect([36masync[39m () [33m=>[39m {
     [90m 237 |[39m           [36mconst[39m result [33m=[39m [36mawait[39m actionOrchestrationService[33m.[39moptimizeActionOrder(invalidData [36mas[39m any)[33m;[39m
    [31m[1m>[22m[39m[90m 238 |[39m           expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 239 |[39m         })[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
     [90m 240 |[39m       })[33m;[39m
     [90m 241 |[39m[0m

      at toBeFailureResult (tests/unit/domain/services/clean-architecture-compliance.test.ts:238:26)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ interface segregation compliance ‚Ä∫ focused service interfaces ‚Ä∫ should have cohesive method groupings

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 483 |[39m               [36mbreak[39m[33m;[39m
     [90m 484 |[39m             [36mcase[39m [32m'ActionNodeExecutionService'[39m[33m:[39m
    [31m[1m>[22m[39m[90m 485 |[39m               expect(methods[33m.[39msome(m [33m=>[39m m[33m.[39mincludes([32m'execution'[39m) [33m||[39m m[33m.[39mincludes([32m'action'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                                                                          [31m[1m^[22m[39m
     [90m 486 |[39m               [36mbreak[39m[33m;[39m
     [90m 487 |[39m             [36mcase[39m [32m'NodeContextAccessService'[39m[33m:[39m
     [90m 488 |[39m               expect(methods[33m.[39msome(m [33m=>[39m m[33m.[39mincludes([32m'context'[39m) [33m||[39m m[33m.[39mincludes([32m'build'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m[0m

      at toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:485:90)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/clean-architecture-compliance.test.ts:473:18)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ WorkflowOrchestrationService should only handle workflow execution

    expect(received).toBe(expected) // Object.is equality

    Expected: 15
    Received: 10

    [0m [90m 560 |[39m         )[33m;[39m
     [90m 561 |[39m         
    [31m[1m>[22m[39m[90m 562 |[39m         expect(workflowRelatedMethods[33m.[39mlength)[33m.[39mtoBe(methods[33m.[39mlength)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 563 |[39m       })[33m;[39m
     [90m 564 |[39m
     [90m 565 |[39m       it([32m'ActionNodeExecutionService should only handle individual action execution'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:562:47)

FAIL tests/unit/domain/entities/nodes/function-model-container-node.test.ts
  ‚óè FunctionModelContainerNode ‚Ä∫ creation and initialization ‚Ä∫ should reject creation with invalid orchestration mode

    Expected [object Object] to be a failed Result

    [0m [90m 144 |[39m       
     [90m 145 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 146 |[39m       expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                      [31m[1m^[22m[39m
     [90m 147 |[39m       expect(result)[33m.[39mtoHaveErrorMessage([32m'Invalid orchestration mode'[39m)[33m;[39m
     [90m 148 |[39m     })[33m;[39m
     [90m 149 |[39m[0m

      at Object.toBeFailureResult (tests/unit/domain/entities/nodes/function-model-container-node.test.ts:146:22)

  ‚óè FunctionModelContainerNode ‚Ä∫ orchestration mode management ‚Ä∫ should update orchestration mode successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "parallel"
    Received: {"communicationPattern": "direct", "errorPropagation": "bubble", "executionIsolation": "sandboxed", "integrationStyle": "parallel", "resourceSharing": "inherited", "stateManagement": "isolated"}

    [0m [90m 761 |[39m       [90m// Assert[39m
     [90m 762 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 763 |[39m       expect(containerNode[33m.[39mcontainerData[33m.[39morchestrationMode)[33m.[39mtoBe([32m'parallel'[39m)[33m;[39m
     [90m     |[39m                                                             [31m[1m^[22m[39m
     [90m 764 |[39m     })[33m;[39m
     [90m 765 |[39m
     [90m 766 |[39m     it([32m'should accept all valid orchestration modes'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/entities/nodes/function-model-container-node.test.ts:763:61)

  ‚óè FunctionModelContainerNode ‚Ä∫ orchestration mode management ‚Ä∫ should accept all valid orchestration modes

    expect(received).toBe(expected) // Object.is equality

    Expected: "embedded"
    Received: {"communicationPattern": "direct", "errorPropagation": "bubble", "executionIsolation": "sandboxed", "integrationStyle": "embedded", "resourceSharing": "inherited", "stateManagement": "isolated"}

    [0m [90m 770 |[39m         [36mconst[39m result [33m=[39m containerNode[33m.[39mupdateOrchestrationMode(mode)[33m;[39m
     [90m 771 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 772 |[39m         expect(containerNode[33m.[39mcontainerData[33m.[39morchestrationMode)[33m.[39mtoBe(mode)[33m;[39m
     [90m     |[39m                                                               [31m[1m^[22m[39m
     [90m 773 |[39m       })[33m;[39m
     [90m 774 |[39m     })[33m;[39m
     [90m 775 |[39m[0m

      at toBe (tests/unit/domain/entities/nodes/function-model-container-node.test.ts:772:63)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/entities/nodes/function-model-container-node.test.ts:769:18)

FAIL tests/unit/domain/services/action-node-orchestration-service.test.ts
  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should coordinate parallel actions successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "parallel-group-1"
    Received: undefined

    [0m [90m 250 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 251 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 252 |[39m         expect(parallelResult[33m.[39mgroupId)[33m.[39mtoBe([32m'parallel-group-1'[39m)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 253 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 254 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 255 |[39m         expect(parallelResult[33m.[39mtotalExecutionTime)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:252:40)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should respect max concurrency limits

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 287 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 288 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m5[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 289 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 290 |[39m         expect(parallelResult[33m.[39mconcurrencyRespected)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 291 |[39m       })[33m;[39m
     [90m 292 |[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:289:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle parallel execution failures with different strategies

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 327 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 328 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m [90m// Both attempted[39m
    [31m[1m>[22m[39m[90m 329 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// One failed[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 330 |[39m         
     [90m 331 |[39m         [90m// Cleanup[39m
     [90m 332 |[39m         (badAction [36mas[39m any)[33m.[39mexecute [33m=[39m originalExecute[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:329:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle empty parallel group

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 349 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 350 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 351 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 352 |[39m       })[33m;[39m
     [90m 353 |[39m     })[33m;[39m
     [90m 354 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:351:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should execute actions sequentially in order

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 385 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 386 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 387 |[39m         expect(sequentialResult[33m.[39mtotalActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 388 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 389 |[39m         expect(sequentialResult[33m.[39mfailurePoint)[33m.[39mtoBeUndefined()[33m;[39m
     [90m 390 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([[32m'First Sequential'[39m[33m,[39m [32m'Second Sequential'[39m])[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:387:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should stop on first failure in sequential execution

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

    [0m [90m 432 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 433 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 434 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 435 |[39m         expect(sequentialResult[33m.[39mfailurePoint)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// Failed at second action (index 1)[39m
     [90m 436 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([[32m'Good Action'[39m[33m,[39m [32m'Bad Action'[39m])[33m;[39m
     [90m 437 |[39m         [0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:434:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should pass context between sequential actions

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 467 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 468 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 469 |[39m         expect(sequentialResult[33m.[39mcontextChain)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 470 |[39m         expect(sequentialResult[33m.[39mcontextChain)[33m.[39mtoHaveLength([35m2[39m)[33m;[39m
     [90m 471 |[39m       })[33m;[39m
     [90m 472 |[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:469:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should handle empty sequential actions

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 478 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 479 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 480 |[39m         expect(sequentialResult[33m.[39mtotalActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 481 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 482 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([])[33m;[39m
     [90m 483 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:480:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should evaluate and execute conditional actions based on criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 513 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 514 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 515 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 516 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 517 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 518 |[39m         expect(conditionalResult[33m.[39mevaluationResults)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:515:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should skip conditional actions when conditions not met

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 545 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 546 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 547 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 548 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 549 |[39m         expect(conditionalResult[33m.[39mevaluationResults[[35m0[39m][33m.[39mexecuted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 550 |[39m         expect(conditionalResult[33m.[39mevaluationResults[[35m0[39m][33m.[39mskipReason)[33m.[39mtoBeDefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:547:51)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle complex conditional logic

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: undefined

    [0m [90m 591 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 592 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 593 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m3[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 594 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 595 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 596 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:593:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle empty conditional evaluations

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 603 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 604 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 605 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 606 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 607 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 608 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:605:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle action failures with retry strategy

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 636 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 637 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 638 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 639 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 640 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 641 |[39m         expect(failureResult[33m.[39mrecoveryActions)[33m.[39mtoBeDefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:638:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should escalate failures after max retries exceeded

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 664 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 665 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 666 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 667 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 668 |[39m         expect(failureResult[33m.[39mescalatedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 669 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:666:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle multiple failure types simultaneously

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 695 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 696 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 697 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 698 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 699 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 700 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:697:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle empty failures array

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 707 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 708 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 709 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 710 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 711 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 712 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:709:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should validate action dependencies successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 741 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 742 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 743 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 744 |[39m         expect(validation[33m.[39mcircularDependencies)[33m.[39mtoEqual([])[33m;[39m
     [90m 745 |[39m         expect(validation[33m.[39munresolvedDependencies)[33m.[39mtoEqual([])[33m;[39m
     [90m 746 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:743:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect circular dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 772 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 773 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 774 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 775 |[39m         expect(validation[33m.[39mcircularDependencies)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m 776 |[39m         expect(validation[33m.[39mcircularDependencies[[35m0[39m])[33m.[39mtoContain(action1[33m.[39mactionId[33m.[39mtoString())[33m;[39m
     [90m 777 |[39m         expect(validation[33m.[39mcircularDependencies[[35m0[39m])[33m.[39mtoContain(action2[33m.[39mactionId[33m.[39mtoString())[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:774:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect unresolved dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 797 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 798 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 799 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 800 |[39m         expect(validation[33m.[39munresolvedDependencies)[33m.[39mtoContain(nonExistentActionId[33m.[39mtoString())[33m;[39m
     [90m 801 |[39m       })[33m;[39m
     [90m 802 |[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:799:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should handle empty dependencies gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 813 |[39m         [90m// Assert[39m
     [90m 814 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 815 |[39m         expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 816 |[39m       })[33m;[39m
     [90m 817 |[39m     })[33m;[39m
     [90m 818 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:815:38)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should monitor action progress successfully

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 841 |[39m         expect(progressResult[33m.[39mcompletedActions)[33m.[39mtoBeDefined()[33m;[39m
     [90m 842 |[39m         expect(progressResult[33m.[39minProgressActions)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 843 |[39m         expect(progressResult[33m.[39mfailedActions)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 844 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeGreaterThanOrEqual([35m0[39m)[33m;[39m
     [90m 845 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeLessThanOrEqual([35m100[39m)[33m;[39m
     [90m 846 |[39m       })[33m;[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:843:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should calculate accurate progress percentages

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

    [0m [90m 880 |[39m         [36mconst[39m progressResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 881 |[39m         expect(progressResult[33m.[39mtotalActions)[33m.[39mtoBe([35m3[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 882 |[39m         expect(progressResult[33m.[39mcompletedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 883 |[39m         expect(progressResult[33m.[39minProgressActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 884 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeCloseTo([35m33.33[39m[33m,[39m [35m1[39m)[33m;[39m [90m// 1/3 completed[39m
     [90m 885 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:882:49)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle malformed actions gracefully

    TypeError: Cannot set property actionId of #<ActionNode> which has only a getter

    [0m [90m 907 |[39m       
     [90m 908 |[39m       [90m// Corrupt the action by clearing critical properties[39m
    [31m[1m>[22m[39m[90m 909 |[39m       (malformedAction [36mas[39m any)[33m.[39mactionId [33m=[39m [36mnull[39m[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 910 |[39m       
     [90m 911 |[39m       [90m// Act[39m
     [90m 912 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m orchestrationService[33m.[39morchestrateNodeActions([malformedAction][33m,[39m {})[33m;[39m[0m

      at Object.<anonymous> (tests/unit/domain/services/action-node-orchestration-service.test.ts:909:40)

FAIL tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts
  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Aggregate Root Access Control ‚Ä∫ FunctionModelAggregate_CrossAggregateReferences_ShouldUseIdentityOnly

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 117 |[39m
     [90m 118 |[39m       [90m// Assert - Cross-Aggregate Reference Validation[39m
    [31m[1m>[22m[39m[90m 119 |[39m       expect(crossLinkResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                         [31m[1m^[22m[39m
     [90m 120 |[39m       [36mconst[39m crossLink [33m=[39m crossLinkResult[33m.[39mvalue[33m;[39m
     [90m 121 |[39m       
     [90m 122 |[39m       [90m// BOUNDARY FILTER: Cross-aggregate references use identities, not direct references[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:119:41)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Aggregate Consistency Boundaries ‚Ä∫ FunctionModelAggregate_StateTransitions_ShouldMaintainInternalConsistency

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 207 |[39m
     [90m 208 |[39m       [90m// Assert - Aggregate Consistency Maintenance[39m
    [31m[1m>[22m[39m[90m 209 |[39m       expect(publishResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 210 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mPUBLISHED[39m)[33m;[39m
     [90m 211 |[39m       
     [90m 212 |[39m       [90m// CONSISTENCY BOUNDARY: Published models cannot be modified[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:209:39)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Aggregate Consistency Boundaries ‚Ä∫ FunctionModelAggregate_BusinessRuleEnforcement_ShouldValidateAcrossEntities

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 257 |[39m       expect(validation[33m.[39merrors[33m.[39msome(error [33m=>[39m 
     [90m 258 |[39m         error[33m.[39mincludes([32m'duplicate execution orders'[39m)
    [31m[1m>[22m[39m[90m 259 |[39m       ))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m          [31m[1m^[22m[39m
     [90m 260 |[39m     })[33m;[39m
     [90m 261 |[39m   })[33m;[39m
     [90m 262 |[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:259:10)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Transaction Boundary Patterns ‚Ä∫ FunctionModelAggregate_AtomicOperations_ShouldSucceedOrFailAsUnit

    expect(received).toContain(expected) // indexOf

    Expected substring: "Node belongs to different model"
    Received string:    "Node with this ID already exists"

    [0m [90m 333 |[39m       [36mconst[39m invalidAddResult [33m=[39m model[33m.[39maddNode(invalidNode)[33m;[39m
     [90m 334 |[39m       expect(invalidAddResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 335 |[39m       expect(invalidAddResult[33m.[39merror)[33m.[39mtoContain([32m'Node belongs to different model'[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 336 |[39m       
     [90m 337 |[39m       [90m// TRANSACTION BOUNDARY: Failed operation doesn't affect aggregate state[39m
     [90m 338 |[39m       expect(model[33m.[39mnodes[33m.[39msize)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// Only valid node remains[39m[0m

      at Object.toContain (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:335:38)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Transaction Boundary Patterns ‚Ä∫ FunctionModelAggregate_ComplexWorkflowTransaction_ShouldMaintainConsistency

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 367 |[39m       [90m// Assert - Transaction Consistency[39m
     [90m 368 |[39m       [36mconst[39m allSuccessful [33m=[39m [[33m...[39mresults[33m.[39mnodeResults[33m,[39m [33m...[39mresults[33m.[39mactionResults][33m.[39mevery(r [33m=>[39m r[33m.[39misSuccess)[33m;[39m
    [31m[1m>[22m[39m[90m 369 |[39m       expect(allSuccessful)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                             [31m[1m^[22m[39m
     [90m 370 |[39m       
     [90m 371 |[39m       [90m// Verify final state consistency[39m
     [90m 372 |[39m       expect(model[33m.[39mnodes[33m.[39msize)[33m.[39mtoBe([35m4[39m)[33m;[39m [90m// All container nodes added[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:369:29)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Boundary Violation Detection ‚Ä∫ CrossAggregateDependencies_ShouldPreventDirectObjectReferences

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 408 |[39m       [90m// Assert - Cross-Aggregate Boundary Enforcement[39m
     [90m 409 |[39m       [90m// The dependency is allowed at the node level, but aggregates should validate this[39m
    [31m[1m>[22m[39m[90m 410 |[39m       expect(crossDependencyResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// Node level allows it[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 411 |[39m       
     [90m 412 |[39m       [90m// But aggregate validation should catch this boundary violation[39m
     [90m 413 |[39m       [36mconst[39m sourceValidation [33m=[39m sourceModel[33m.[39mvalidateWorkflow()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:410:47)

FAIL tests/unit/domain/entities/audit-log-soft-deletion.test.ts
  ‚óè AuditLog - Soft Deletion Audit Trail ‚Ä∫ Audit Log Creation for Soft Deletion ‚Ä∫ CreateDeletionAuditLog_WithCompleteContext_ShouldCaptureAllDetails ‚Ä∫ should create comprehensive audit log for soft deletion with full context preservation

    expect(received).toEqual(expected) // deep equality

    Expected: 2024-06-15T14:30:00.000Z
    Received: 2025-08-29T12:52:18.436Z

    [0m [90m 147 |[39m         expect(deletionAuditLog[33m.[39maction)[33m.[39mtoBe([32m'SOFT_DELETE'[39m)[33m;[39m
     [90m 148 |[39m         expect(deletionAuditLog[33m.[39muserId)[33m.[39mtoBe([32m'compliance-officer-456'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 149 |[39m         expect(deletionAuditLog[33m.[39mtimestamp)[33m.[39mtoEqual(deletionTimestamp)[33m;[39m
     [90m     |[39m                                            [31m[1m^[22m[39m
     [90m 150 |[39m
     [90m 151 |[39m         [90m// Verify complete state preservation[39m
     [90m 152 |[39m         [36mconst[39m preDeleteState [33m=[39m deletionAuditLog[33m.[39mdetails[33m.[39mpreDeleteState[33m;[39m[0m

      at Object.toEqual (tests/unit/domain/entities/audit-log-soft-deletion.test.ts:149:44)

  ‚óè AuditLog - Soft Deletion Audit Trail ‚Ä∫ Audit Trail Completeness and Integrity ‚Ä∫ ValidateAuditChain_AcrossModelLifecycle_ShouldMaintainContinuity ‚Ä∫ should maintain complete audit chain from creation through soft deletion

    expect(received).toBeGreaterThan(expected)

    Expected: > 1756471938459
    Received:   1756471938459

    [0m [90m 273 |[39m         [90m// Verify chronological order[39m
     [90m 274 |[39m         [36mfor[39m ([36mlet[39m i [33m=[39m [35m1[39m[33m;[39m i [33m<[39m auditLogs[33m.[39mlength[33m;[39m i[33m++[39m) {
    [31m[1m>[22m[39m[90m 275 |[39m           expect(auditLogs[i][33m.[39mtimestamp[33m.[39mgetTime())[33m.[39mtoBeGreaterThan(
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 276 |[39m             auditLogs[i [33m-[39m [35m1[39m][33m.[39mtimestamp[33m.[39mgetTime()
     [90m 277 |[39m           )[33m;[39m
     [90m 278 |[39m         }[0m

      at Object.toBeGreaterThan (tests/unit/domain/entities/audit-log-soft-deletion.test.ts:275:52)

FAIL tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts
  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Configuration object typing ‚Ä∫ should handle executionPolicy configuration correctly

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:17:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Configuration object typing ‚Ä∫ should handle orchestrationMode as object not string

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:62:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Configuration object typing ‚Ä∫ should handle contextInheritance with proper array initialization

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:103:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Property update methods ‚Ä∫ should update orchestration mode correctly

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:146:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Property update methods ‚Ä∫ should update execution policy without compilation errors

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:174:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Context inheritance operations ‚Ä∫ should handle inherited context operations safely

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:207:36)

FAIL tests/unit/domain/services/error-handling-recovery-patterns.test.ts
  ‚óè Console

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution start failures

    Expected [object Object] to be a failed Result

    [0m [90m 303 |[39m
     [90m 304 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 305 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                        [31m[1m^[22m[39m
     [90m 306 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Failed to start execution'[39m)[33m;[39m
     [90m 307 |[39m         expect(actionExecutionService[33m.[39misExecuting(testActionId))[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 308 |[39m         [0m

      at Object.toBeFailureResult (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:305:24)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution timeout scenarios

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle resource exhaustion gracefully

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry exhaustion

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry policy evaluation failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle exponential backoff calculation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle metrics corruption recovery

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle invalid resource usage data

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle invalid model structure

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle extremely deep nesting

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle context initialization failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle level coordination failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle vertical nesting failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle horizontal scaling failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle context transformation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle consistency validation failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle invalid node ID formats

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle memory constraints

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle concurrent context operations conflicts

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle permission validation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle circular reference detection failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ scope management failures ‚Ä∫ should handle scope isolation violations

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should handle workflow -> action -> context failure cascade

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should maintain system stability under high error rates

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should clean up resources after workflow failure

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should prevent memory leaks in long-running error scenarios

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ service coordination error handling ‚Ä∫ should handle inter-service communication failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

FAIL tests/unit/domain/architecture/action-node-structural-compliance.test.ts
  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should have nodeId property for service compatibility

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should have id property for outer layer compatibility

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should have type property for action identification

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should maintain backward compatibility with actionId

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should have consistent id, nodeId, and actionId values

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should expose all required properties for domain services

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

FAIL tests/unit/domain/enums/domain-enums.test.ts
  ‚óè Domain Enumerations ‚Ä∫ NodeStatus ‚Ä∫ should have exactly 5 node statuses

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 6
    Received array:  ["ACTIVE", "INACTIVE", "DRAFT", "CONFIGURED", "ARCHIVED", "ERROR"]

    [0m [90m 140 |[39m
     [90m 141 |[39m     it([32m'should have exactly 5 node statuses'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 142 |[39m       expect([33mObject[39m[33m.[39mkeys([33mNodeStatus[39m))[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 143 |[39m     })[33m;[39m
     [90m 144 |[39m
     [90m 145 |[39m     it([32m'should be consistent with domain model specification'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toHaveLength (tests/unit/domain/enums/domain-enums.test.ts:142:39)

  ‚óè Domain Enumerations ‚Ä∫ NodeStatus ‚Ä∫ should be consistent with domain model specification

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

      Array [
        "active",
        "archived",
    +   "configured",
        "draft",
        "error",
        "inactive",
      ]

    [0m [90m 146 |[39m       [36mconst[39m expectedStatuses [33m=[39m [[32m'active'[39m[33m,[39m [32m'inactive'[39m[33m,[39m [32m'draft'[39m[33m,[39m [32m'archived'[39m[33m,[39m [32m'error'[39m][33m;[39m
     [90m 147 |[39m       [36mconst[39m actualStatuses [33m=[39m [33mObject[39m[33m.[39mvalues([33mNodeStatus[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 148 |[39m       expect(actualStatuses[33m.[39msort())[33m.[39mtoEqual(expectedStatuses[33m.[39msort())[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 149 |[39m     })[33m;[39m
     [90m 150 |[39m   })[33m;[39m
     [90m 151 |[39m[0m

      at Object.toEqual (tests/unit/domain/enums/domain-enums.test.ts:148:37)

FAIL tests/unit/domain/rules/execution-rules-compilation-fix.test.ts
  ‚óè Execution Rules - Compilation Fix ‚Ä∫ Resource validation type consistency ‚Ä∫ should return consistent totalRequirements type structure

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/rules/execution-rules-compilation-fix.test.ts:18:37)

  ‚óè Execution Rules - Compilation Fix ‚Ä∫ Execution precondition type consistency ‚Ä∫ should handle ExecutionPrecondition objects correctly

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/rules/execution-rules-compilation-fix.test.ts:53:37)

  ‚óè Execution Rules - Compilation Fix ‚Ä∫ Execution context type consistency ‚Ä∫ should access userId property on ExecutionContext without errors

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.contextData (tests/unit/domain/rules/execution-rules-compilation-fix.test.ts:92:56)

FAIL tests/unit/domain/entities/function-model.test.ts
  ‚óè FunctionModel ‚Ä∫ model statistics ‚Ä∫ should calculate model statistics correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

    [0m [90m 583 |[39m       expect(stats[33m.[39mtotalNodes)[33m.[39mtoBe([35m3[39m)[33m;[39m [90m// 2 IO + 1 Stage[39m
     [90m 584 |[39m       expect(stats[33m.[39mcontainerNodeCount)[33m.[39mtoBe([35m3[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 585 |[39m       expect(stats[33m.[39mactionNodeCount)[33m.[39mtoBe([35m2[39m)[33m;[39m [90m// 1 from createCompleteWorkflow + 1 added in test[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 586 |[39m       expect(stats[33m.[39mnodeTypeBreakdown)[33m.[39mtoHaveProperty([32m'ioNode'[39m[33m,[39m [35m2[39m)[33m;[39m
     [90m 587 |[39m       expect(stats[33m.[39mnodeTypeBreakdown)[33m.[39mtoHaveProperty([32m'stageNode'[39m[33m,[39m [35m1[39m)[33m;[39m
     [90m 588 |[39m       expect(stats[33m.[39mactionTypeBreakdown)[33m.[39mtoHaveProperty([32m'tetherNode'[39m[33m,[39m [35m2[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model.test.ts:585:37)

PASS tests/unit/use-cases/function-model/validate-workflow-structure-use-case.test.ts
PASS tests/unit/domain/entities/node-metadata.test.ts
PASS tests/integration/application/function-model-management-service.integration.test.ts
PASS tests/integration/use-cases/workflow-execution-service.integration.test.ts
FAIL tests/unit/domain/entities/action-node-type-specific-rules.test.ts
  ‚óè Action Node Type-Specific Business Rules - Domain Compliance Validation ‚Ä∫ FunctionModelContainer Business Rules Validation ‚Ä∫ FunctionModelContainerCreation_WithValidNestedModel_ShouldSucceed

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 499 |[39m
     [90m 500 |[39m       [90m// Act & Assert - Container Creation Success[39m
    [31m[1m>[22m[39m[90m 501 |[39m       expect(containerResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                         [31m[1m^[22m[39m
     [90m 502 |[39m       [36mconst[39m container [33m=[39m containerResult[33m.[39mvalue[33m;[39m
     [90m 503 |[39m
     [90m 504 |[39m       [90m// BUSINESS RULE VALIDATION: Container-specific properties[39m[0m

      at Object.toBe (tests/unit/domain/entities/action-node-type-specific-rules.test.ts:501:41)

PASS tests/unit/domain/value-objects/retry-policy.test.ts
PASS tests/unit/domain/services/node-dependency-service.test.ts
  ‚óè Console

    console.log
      Actual node UUIDs:

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:107:15)

    console.log
      stageA -> 20906767-7712-4620-8878-2114797a2dd8

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:108:15)

    console.log
      stageB -> 33f2ef67-bcea-4d3a-8870-e78da3f0dd8c

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:109:15)

    console.log
      merge -> 3995d69c-d8f8-4ad7-881e-9283b5128e81

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:110:15)

    console.log
      Adding dependencies...

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:112:15)

    console.log
      stageA.addDependency result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:114:15)

    console.log
      stageB.addDependency result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:116:15)

    console.log
      mergeStage.addDependency(stageA) result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:118:15)

    console.log
      mergeStage.addDependency(stageB) result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:120:15)

    console.log
      outputNode.addDependency result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:122:15)

    console.log
      All node keys in graph: [
        '123e4567-e89b-42d3-a456-426614174001',
        '20906767-7712-4620-8878-2114797a2dd8',
        '33f2ef67-bcea-4d3a-8870-e78da3f0dd8c',
        '3995d69c-d8f8-4ad7-881e-9283b5128e81',
        '123e4567-e89b-42d3-a456-426614174003'
      ]

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:134:15)

    console.log
      All reverse dependency keys: [
        '123e4567-e89b-42d3-a456-426614174001',
        '20906767-7712-4620-8878-2114797a2dd8',
        '33f2ef67-bcea-4d3a-8870-e78da3f0dd8c',
        '3995d69c-d8f8-4ad7-881e-9283b5128e81',
        '123e4567-e89b-42d3-a456-426614174003'
      ]

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:135:15)

    console.log
      stageAUUID: 20906767-7712-4620-8878-2114797a2dd8

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:136:15)

    console.log
      Reverse deps for stageA: [ '123e4567-e89b-42d3-a456-426614174001' ]

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:137:15)

PASS tests/unit/use-cases/manage-node-dependencies.test.ts
PASS tests/unit/use-cases/execute-function-model-use-case.test.ts
  ‚óè Console

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

PASS tests/unit/domain/shared/result.test.ts
PASS tests/unit/use-cases/function-model/add-action-node-to-container-use-case.test.ts
PASS tests/unit/domain/entities/ai-agent.test.ts
PASS tests/integration/application/cross-feature-integration-service.integration.test.ts
  ‚óè Console

    console.log
      Performance Test Results:
              - Network Size: 19 links
              - Creation Time: 3ms
              - Analysis Time: 0ms
              - Cycles Detected: 0
              - Network Density: 3.167

      at Object.log (tests/integration/application/cross-feature-integration-service.integration.test.ts:752:15)

FAIL tests/unit/domain/services/workflow-orchestration-service.test.ts
  ‚óè Console

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Test Tether Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

    console.log
      Executing Tether Node: Process Action

      at WorkflowOrchestrationService.log [as executeTetherNode] (lib/domain/services/workflow-orchestration-service.ts:411:13)

  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should execute tether nodes with mock implementation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "Executing Tether Node: Test Tether"
    Received: "Executing Tether Node: Process Action"

    Number of calls: 1

    [0m [90m 482 |[39m       [90m// Assert[39m
     [90m 483 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 484 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 485 |[39m         expect[33m.[39mstringContaining([32m'Executing Tether Node: Test Tether'[39m)
     [90m 486 |[39m       )[33m;[39m
     [90m 487 |[39m       [0m

      at Object.toHaveBeenCalledWith (tests/unit/domain/services/workflow-orchestration-service.test.ts:484:26)

  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should handle action execution in different modes

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 1

    [0m [90m 575 |[39m       [90m// Assert[39m
     [90m 576 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 577 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m [90m// All 3 actions executed (original + 2 new ones)[39m
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 578 |[39m       
     [90m 579 |[39m       [90m// Cleanup[39m
     [90m 580 |[39m       consoleSpy[33m.[39mmockRestore()[33m;[39m[0m

      at Object.toHaveBeenCalledTimes (tests/unit/domain/services/workflow-orchestration-service.test.ts:577:26)

PASS tests/unit/domain/entities/node-link.test.ts
PASS tests/unit/domain/services/correct-mock-implementations.test.ts
PASS tests/unit/domain/value-objects/version-robustness.test.ts
PASS tests/unit/domain/aggregates/function-model-aggregate.test.ts
PASS tests/unit/domain/events/domain-events.test.ts
PASS tests/unit/use-cases/function-model/manage-cross-feature-integration-use-case.test.ts
PASS tests/unit/domain/services/model-versioning-service.test.ts
PASS tests/unit/domain/events/comprehensive-domain-events.test.ts
PASS tests/unit/domain/value-objects/position.test.ts
PASS tests/unit/domain/entities/nodes/kb-node.test.ts
PASS tests/unit/domain/use-cases/uc-007-create-model-version-simplified.test.ts
PASS tests/unit/domain/entities/function-model-version.test.ts
PASS tests/unit/domain/value-objects/raci.test.ts
PASS tests/unit/domain/value-objects/model-name.test.ts
PASS tests/unit/domain/services/model-archive-dependency-validation.test.ts
PASS tests/unit/domain/entities/audit-log.test.ts
PASS tests/unit/domain/events/domain-events-fixed.test.ts
PASS tests/unit/domain/services/node-dependency-service-uc010.test.ts
PASS tests/unit/use-cases/function-model/publish-function-model-use-case.test.ts
PASS tests/unit/domain/entities/cross-feature-link.test.ts
PASS tests/unit/use-cases/function-model/manage-ai-agent-orchestration-use-case.test.ts
PASS tests/unit/domain/entities/nodes/tether-node.test.ts
PASS tests/unit/domain/value-objects/version-equality-compliance.test.ts
PASS tests/unit/domain/value-objects/execution-context.test.ts
PASS tests/unit/domain/events/model-archive-events.test.ts
PASS tests/unit/domain/services/function-model-versioning-service.test.ts
PASS tests/unit/use-cases/function-model/create-function-model-use-case.test.ts
PASS tests/unit/domain/entities/node.test.ts
PASS tests/unit/domain/services/action-node-execution-service.test.ts
PASS tests/unit/domain/architecture/service-interface-architecture-compliance.test.ts
PASS tests/unit/domain/entities/nodes/stage-node.test.ts
PASS tests/unit/use-cases/__tests__/base-use-case.test.ts
PASS tests/unit/domain/rules/business-rules-validation.test.ts
PASS tests/unit/use-cases/function-model/manage-action-node-orchestration-use-case.test.ts
PASS tests/unit/domain/services/soft-deletion-coordination-service.test.ts
PASS tests/unit/domain/entities/action-node.test.ts
PASS tests/unit/domain/entities/function-model-soft-deletion-state.test.ts
PASS tests/unit/use-cases/function-model/add-container-node-use-case.test.ts
PASS tests/unit/use-cases/function-model/soft-delete-function-model-use-case.test.ts
PASS tests/unit/domain/entities/action-node-configurations.test.ts
PASS tests/unit/domain/architecture/clean-architecture-soft-deletion-compliance.test.ts
PASS tests/unit/domain/architecture/structural-integrity-compliance.test.ts
PASS tests/unit/domain/value-objects/node-id.test.ts
PASS tests/unit/domain/entities/nodes/io-node.test.ts
PASS tests/unit/domain/services/cross-feature-linking-service.test.ts
PASS tests/unit/domain/interfaces/repository-interface-contracts.test.ts
PASS tests/unit/domain/interfaces/repository-interfaces-comprehensive.test.ts
PASS tests/unit/use-cases/function-model/manage-fractal-orchestration-use-case.test.ts
PASS tests/unit/domain/repositories/repository-contracts.test.ts
PASS tests/unit/domain/value-objects/version.test.ts
PASS tests/unit/use-cases/manage-hierarchical-context-access-use-case.test.ts
PASS tests/integration/application/ai-agent-management-service.integration.test.ts
PASS tests/unit/domain/services/context-service-interface-definition.test.ts
PASS tests/unit/domain/entities/audit-log-compilation-fix.test.ts
PASS tests/unit/domain/events/domain-event-compilation-fix.test.ts
PASS tests/unit/domain/services/service-method-signature-compliance.test.ts
PASS tests/unit/use-cases/function-model/manage-error-handling-and-recovery-use-case.test.ts (5.733 s)
PASS tests/unit/domain/services/ai-agent-orchestration-service.test.ts (20.941 s)

Summary of all failing tests
FAIL tests/unit/domain/services/model-version-change-detection.test.ts
  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_SingleNewNode_IdentifiesAddition

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  ["00000004-0000-4000-8000-000000040000", "00000005-0000-4000-8000-000000050000"]

    [0m [90m 145 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 146 |[39m       [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 147 |[39m       expect(changes[33m.[39maddedNodes)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 148 |[39m       expect(changes[33m.[39mremovedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 149 |[39m       expect(changes[33m.[39mmodifiedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 150 |[39m     })[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/model-version-change-detection.test.ts:147:34)

  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_MultipleNewNodes_IdentifiesAllAdditions

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 4
    Received array:  ["00000009-0000-4000-8000-000000090000", "0000000a-0000-4000-8000-0000000a0000", "0000000b-0000-4000-8000-0000000b0000", "0000000c-0000-4000-8000-0000000c0000"]

    [0m [90m 170 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 171 |[39m       [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 172 |[39m       expect(changes[33m.[39maddedNodes)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 173 |[39m       expect(changes[33m.[39mremovedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 174 |[39m     })[33m;[39m
     [90m 175 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/model-version-change-detection.test.ts:172:34)

  ‚óè Model Version Change Detection ‚Ä∫ Node Removal Detection ‚Ä∫ detectNodeRemovals_SingleRemovedNode_IdentifiesRemoval

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 3
    Received array:  ["00000015-0000-4000-8000-000000150000", "00000016-0000-4000-8000-000000160000", "00000017-0000-4000-8000-000000170000"]

    [0m [90m 223 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 224 |[39m       [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 225 |[39m       expect(changes[33m.[39mremovedNodes)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 226 |[39m       expect(changes[33m.[39maddedNodes)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m [90m// Different model IDs cause detection issues[39m
     [90m 227 |[39m     })[33m;[39m
     [90m 228 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/model-version-change-detection.test.ts:225:36)

  ‚óè Model Version Change Detection ‚Ä∫ Business Rule Validation ‚Ä∫ validateChanges_BackwardCompatibleAddition_RecommendsMinorVersion

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 3

    [0m [90m 643 |[39m       [90m// Should detect additions that are backward compatible[39m
     [90m 644 |[39m       expect(changes[33m.[39maddedNodes[33m.[39mlength)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 645 |[39m       expect(changes[33m.[39mremovedNodes[33m.[39mlength)[33m.[39mtoBe([35m0[39m)[33m;[39m [90m// No removals[39m
     [90m     |[39m                                           [31m[1m^[22m[39m
     [90m 646 |[39m     })[33m;[39m
     [90m 647 |[39m   })[33m;[39m
     [90m 648 |[39m })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/model-version-change-detection.test.ts:645:43)

FAIL tests/unit/domain/use-cases/archive-function-model-use-case.test.ts
  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Dependency Validation and Risk Assessment ‚Ä∫ should assess high risk and block when enforceRiskAssessment is true

    expect(received).toContain(expected) // indexOf

    Expected substring: "High-risk archival blocked by policy"
    Received string:    "Failed to archive function model: Cannot read properties of undefined (reading 'isFailure')"

    [0m [90m 393 |[39m       [90m// Assert[39m
     [90m 394 |[39m       expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 395 |[39m       expect(result[33m.[39merror)[33m.[39mtoContain([32m'High-risk archival blocked by policy'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 396 |[39m     })[33m;[39m
     [90m 397 |[39m
     [90m 398 |[39m     it([32m'should allow high risk archival when enforceRiskAssessment is false'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:395:28)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Event Publishing and Audit Trail ‚Ä∫ should publish ModelArchived event with complete audit data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 517 |[39m
     [90m 518 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 519 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 520 |[39m       expect(mockEventBus[33m.[39mpublish)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
     [90m 521 |[39m       
     [90m 522 |[39m       [36mconst[39m eventCall [33m=[39m mockEventBus[33m.[39mpublish[33m.[39mmock[33m.[39mcalls[[35m0[39m][[35m0[39m][33m;[39m[0m

      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:519:32)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Complex Integration Scenarios ‚Ä∫ should handle model with complex node structure and dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: 85
    Received: 87

    [0m [90m 596 |[39m       [90m// Assert[39m
     [90m 597 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 598 |[39m       expect(result[33m.[39mvalue[33m.[39mdependencyImpact[33m.[39minternalNodesAffected)[33m.[39mtoBe([35m85[39m)[33m;[39m [90m// 25 + 60[39m
     [90m     |[39m                                                                   [31m[1m^[22m[39m
     [90m 599 |[39m       expect(result[33m.[39mvalue[33m.[39mdependencyImpact[33m.[39mriskLevel)[33m.[39mtoBe([32m'high'[39m)[33m;[39m
     [90m 600 |[39m     })[33m;[39m
     [90m 601 |[39m[0m

      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:598:67)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Complex Integration Scenarios ‚Ä∫ should provide comprehensive dependency impact assessment

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

      Object {
        "externalLinksAffected": 3,
    -   "internalNodesAffected": 0,
    +   "internalNodesAffected": 2,
        "riskLevel": "low",
      }

    [0m [90m 626 |[39m       [90m// Assert[39m
     [90m 627 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 628 |[39m       expect(result[33m.[39mvalue[33m.[39mdependencyImpact)[33m.[39mtoEqual({
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 629 |[39m         internalNodesAffected[33m:[39m [35m0[39m[33m,[39m [90m// Empty test model[39m
     [90m 630 |[39m         externalLinksAffected[33m:[39m [35m3[39m[33m,[39m
     [90m 631 |[39m         riskLevel[33m:[39m [32m'low'[39m[0m

      at Object.toEqual (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:628:45)

FAIL tests/unit/domain/entities/function-model-archive.test.ts
  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should set status to ARCHIVED when soft deleting

    expect(received).toBe(expected) // Object.is equality

    Expected: "archived"
    Received: "draft"

    [0m [90m 262 |[39m       [90m// Assert[39m
     [90m 263 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 264 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mARCHIVED[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 265 |[39m       expect(model[33m.[39misDeleted())[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 266 |[39m       expect(model[33m.[39mdeletedAt)[33m.[39mtoBeDefined()[33m;[39m
     [90m 267 |[39m       expect(model[33m.[39mdeletedBy)[33m.[39mtoBe([32m'test-user'[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:264:28)

  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should handle soft delete without deletedBy parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: "archived"
    Received: "draft"

    [0m [90m 274 |[39m       [90m// Assert[39m
     [90m 275 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 276 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mARCHIVED[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 277 |[39m       expect(model[33m.[39misDeleted())[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 278 |[39m       expect(model[33m.[39mdeletedAt)[33m.[39mtoBeDefined()[33m;[39m
     [90m 279 |[39m       expect(model[33m.[39mdeletedBy)[33m.[39mtoBeUndefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:276:28)

FAIL tests/unit/domain/services/node-context-access-service.test.ts
  ‚óè NodeContextAccessService ‚Ä∫ context building and management ‚Ä∫ updateNodeContext ‚Ä∫ should update existing context successfully

    Expected [object Object] to be a successful Result

    [0m [90m 130 |[39m
     [90m 131 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 132 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                        [31m[1m^[22m[39m
     [90m 133 |[39m         
     [90m 134 |[39m         [90m// Verify update was applied[39m
     [90m 135 |[39m         [36mconst[39m getResult [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:132:24)

  ‚óè NodeContextAccessService ‚Ä∫ context building and management ‚Ä∫ updateNodeContext ‚Ä∫ should merge updates with existing context data

    Expected [object Object] to be a successful Result

    [0m [90m 151 |[39m
     [90m 152 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 153 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                        [31m[1m^[22m[39m
     [90m 154 |[39m         
     [90m 155 |[39m         [36mconst[39m getResult [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m
     [90m 156 |[39m         expect(getResult)[33m.[39mtoBeValidResult()[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:153:24)

  ‚óè NodeContextAccessService ‚Ä∫ context building and management ‚Ä∫ updateNodeContext ‚Ä∫ should reject updates to non-existent context

    expect(received).toContain(expected) // indexOf

    Expected substring: "Context not found"
    Received string:    "Access denied: Target node not found"

    [0m [90m 166 |[39m         [90m// Assert[39m
     [90m 167 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 168 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Context not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 169 |[39m       })[33m;[39m
     [90m 170 |[39m
     [90m 171 |[39m       it([32m'should handle concurrent updates gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:168:30)

  ‚óè NodeContextAccessService ‚Ä∫ context building and management ‚Ä∫ updateNodeContext ‚Ä∫ should handle concurrent updates gracefully

    Expected [object Object] to be a successful Result

    [0m [90m 181 |[39m
     [90m 182 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 183 |[39m         expect(result1)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                         [31m[1m^[22m[39m
     [90m 184 |[39m         expect(result2)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 185 |[39m         
     [90m 186 |[39m         [36mconst[39m getResult [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:183:25)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle override rules in context propagation

    TypeError: Cannot read properties of undefined (reading 'constant')

    [0m [90m 326 |[39m         expect(updatedChild)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 327 |[39m         expect(updatedChild[33m.[39mvalue[33m.[39mdata[33m.[39msetting)[33m.[39mtoBe([32m'child-value'[39m)[33m;[39m [90m// Override allowed[39m
    [31m[1m>[22m[39m[90m 328 |[39m         expect(updatedChild[33m.[39mvalue[33m.[39minheritedData[33m.[39mconstant)[33m.[39mtoBe([32m'unchangeable'[39m)[33m;[39m [90m// No override[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 329 |[39m       })[33m;[39m
     [90m 330 |[39m
     [90m 331 |[39m       it([32m'should handle deep context propagation chains'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.constant (tests/unit/domain/services/node-context-access-service.test.ts:328:49)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle deep context propagation chains

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 371 |[39m         [36mconst[39m hierarchicalResult [33m=[39m contextService[33m.[39mgetHierarchicalContext(childNodeId)[33m;[39m
     [90m 372 |[39m         expect(hierarchicalResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 373 |[39m         expect(hierarchicalResult[33m.[39mvalue[33m.[39mlevels)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 374 |[39m       })[33m;[39m
     [90m 375 |[39m
     [90m 376 |[39m       it([32m'should reject propagation from non-existent context'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:373:49)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return complete hierarchical context

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 421 |[39m         [36mconst[39m hierarchical [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 422 |[39m         expect(hierarchical[33m.[39mnodeId)[33m.[39mtoEqual(childNodeId)[33m;[39m
    [31m[1m>[22m[39m[90m 423 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 424 |[39m         
     [90m 425 |[39m         [90m// Verify level order (child -> parent -> grandparent)[39m
     [90m 426 |[39m         expect(hierarchical[33m.[39mlevels[[35m0[39m][33m.[39mscope)[33m.[39mtoBe([32m'execution'[39m)[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:423:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return single level for nodes without parents

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 447 |[39m         expect(hierarchicalResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 448 |[39m         [36mconst[39m hierarchical [33m=[39m hierarchicalResult[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 449 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 450 |[39m         expect(hierarchical[33m.[39mlevels[[35m0[39m][33m.[39mdata[33m.[39mstandalone)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 451 |[39m       })[33m;[39m
     [90m 452 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:449:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should handle deep hierarchies efficiently

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 477 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 478 |[39m         [36mconst[39m hierarchical [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 479 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 480 |[39m         expect(hierarchical[33m.[39mtotalLevels)[33m.[39mtoBe([35m5[39m)[33m;[39m
     [90m 481 |[39m         expect(hierarchical[33m.[39mmaxDepthReached)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 482 |[39m       })[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:479:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should reject hierarchical request for non-existent node

    expect(received).toContain(expected) // indexOf

    Expected substring: "Context not found"
    Received string:    "Node context not found"

    [0m [90m 488 |[39m         [90m// Assert[39m
     [90m 489 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 490 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Context not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 491 |[39m       })[33m;[39m
     [90m 492 |[39m     })[33m;[39m
     [90m 493 |[39m   })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:490:30)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate read access successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 515 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 516 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 517 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 518 |[39m         expect(access[33m.[39mlevel)[33m.[39mtoBe([32m'read'[39m)[33m;[39m
     [90m 519 |[39m         expect(access[33m.[39maccessibleProperties)[33m.[39mtoContain([32m'public'[39m)[33m;[39m
     [90m 520 |[39m         expect(access[33m.[39mrestrictedProperties)[33m.[39mnot[33m.[39mtoContain([32m'public'[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:517:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate write access with proper permissions

    TypeError: Cannot set properties of undefined (setting 'accessLevel')

    [0m [90m 531 |[39m
     [90m 532 |[39m         [90m// Update context to have write access level[39m
    [31m[1m>[22m[39m[90m 533 |[39m         (contextService [36mas[39m any)[33m.[39mcontexts[33m.[39m[36mget[39m(parentNodeId[33m.[39mtoString())[33m.[39maccessLevel [33m=[39m [32m'read-write'[39m[33m;[39m
     [90m     |[39m                                                                                  [31m[1m^[22m[39m
     [90m 534 |[39m
     [90m 535 |[39m         [90m// Act[39m
     [90m 536 |[39m         [36mconst[39m validation [33m=[39m contextService[33m.[39mvalidateContextAccess([0m

      at Object.<anonymous> (tests/unit/domain/services/node-context-access-service.test.ts:533:82)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should deny access for insufficient permissions

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

    [0m [90m 569 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
     [90m 570 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 571 |[39m         expect(access[33m.[39mdenialReason)[33m.[39mtoContain([32m'Insufficient permissions'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 572 |[39m       })[33m;[39m
     [90m 573 |[39m
     [90m 574 |[39m       it([32m'should handle cross-node access validation'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:571:37)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should handle cross-node access validation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 600 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 601 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 602 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// Child should have read access to parent[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 603 |[39m         expect(access[33m.[39minheritanceAllowed)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 604 |[39m       })[33m;[39m
     [90m 605 |[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:602:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate property-level access controls

    expect(received).toContain(expected) // indexOf

    Expected value: "public"
    Received array: []

    [0m [90m 628 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 629 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 630 |[39m         expect(access[33m.[39maccessibleProperties)[33m.[39mtoContain([32m'public'[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 631 |[39m         [90m// protected and private access depends on relationship and permissions[39m
     [90m 632 |[39m       })[33m;[39m
     [90m 633 |[39m     })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:630:45)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should clone context scope successfully

    Expected [object Object] to be a successful Result

    [0m [90m 667 |[39m           nested[33m:[39m { value[33m:[39m [35m99[39m } 
     [90m 668 |[39m         })[33m;[39m
    [31m[1m>[22m[39m[90m 669 |[39m         expect(updateResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 670 |[39m         
     [90m 671 |[39m         [36mconst[39m originalContext [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m
     [90m 672 |[39m         expect(originalContext)[33m.[39mtoBeValidResult()[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:669:30)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should handle cloning with transformation rules

    TypeError: transformationRules is not iterable

    [0m [90m 865 |[39m     [90m// Apply transformation rules if provided[39m
     [90m 866 |[39m     [36mif[39m (transformationRules) {
    [31m[1m>[22m[39m[90m 867 |[39m       [36mfor[39m ([36mconst[39m rule [36mof[39m transformationRules) {
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 868 |[39m         [36mif[39m (rule[33m.[39minheritanceType [33m===[39m [32m'override'[39m [33m&&[39m rule[33m.[39mdefaultValue [33m!==[39m undefined) {
     [90m 869 |[39m           clonedData[rule[33m.[39mpropertyName] [33m=[39m rule[33m.[39mdefaultValue[33m;[39m
     [90m 870 |[39m         }[0m

      at NodeContextAccessService.transformationRules [as cloneContextScope] (lib/domain/services/node-context-access-service.ts:867:26)
      at Object.cloneContextScope (tests/unit/domain/services/node-context-access-service.test.ts:690:44)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merge conflicts with precedence rules

    TypeError: precedenceRules.map is not a function

    [0m [90m 900 |[39m     
     [90m 901 |[39m     [36mif[39m (precedenceRules) {
    [31m[1m>[22m[39m[90m 902 |[39m       [36mconst[39m priorityMap [33m=[39m [36mnew[39m [33mMap[39m(precedenceRules[33m.[39mmap(rule [33m=>[39m [rule[33m.[39mcontextId[33m,[39m rule[33m.[39mpriority]))[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 903 |[39m       [36mconst[39m sortedContexts [33m=[39m sourceContexts[33m.[39msort((a[33m,[39m b) [33m=>[39m {
     [90m 904 |[39m         [36mconst[39m priorityA [33m=[39m priorityMap[33m.[39m[36mget[39m(a[33m.[39mcontextId) [33m?[39m[33m?[39m [35m0[39m[33m;[39m
     [90m 905 |[39m         [36mconst[39m priorityB [33m=[39m priorityMap[33m.[39m[36mget[39m(b[33m.[39mcontextId) [33m?[39m[33m?[39m [35m0[39m[33m;[39m[0m

      at NodeContextAccessService.map [as mergeContextScopes] (lib/domain/services/node-context-access-service.ts:902:51)
      at Object.mergeContextScopes (tests/unit/domain/services/node-context-access-service.test.ts:784:44)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merging with non-existent contexts

    expect(received).toContain(expected) // indexOf

    Expected substring: "One or more source contexts not found"
    Received string:    "No valid source contexts found"

    [0m [90m 828 |[39m         [90m// Assert[39m
     [90m 829 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 830 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'One or more source contexts not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 831 |[39m       })[33m;[39m
     [90m 832 |[39m     })[33m;[39m
     [90m 833 |[39m   })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:830:30)

  ‚óè NodeContextAccessService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle circular reference prevention

    Expected [object Object] to be a failed Result

    [0m [90m 881 |[39m
     [90m 882 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 883 |[39m       expect(circularResult)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 884 |[39m       expect(circularResult[33m.[39merror)[33m.[39mtoContain([32m'Circular reference detected'[39m)[33m;[39m
     [90m 885 |[39m     })[33m;[39m
     [90m 886 |[39m[0m

      at Object.toBeFailureResult (tests/unit/domain/services/node-context-access-service.test.ts:883:30)

FAIL tests/unit/domain/services/model-recovery-service.test.ts
  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_ValidEligibleModel_ShouldExecuteRecovery ‚Ä∫ should coordinate complete model recovery process

    expect(received).toEqual(expected) // deep equality

    - Expected  - 16
    + Received  + 35

    - ObjectContaining {
    -   "auditData": ObjectContaining {
    -     "recoveryMetadata": ObjectContaining {
    + Object {
    +   "auditData": Object {
    +     "recoveryMetadata": Object {
            "reason": "Project reactivation - business requirement",
            "recoveredBy": "admin-456",
            "recoveryComplexity": "LOW",
            "stakeholdersNotified": true,
          },
        },
    -   "dependencyActions": ObjectContaining {
    +   "dependencyActions": Object {
          "dependenciesReconciled": true,
          "integrityValidated": true,
          "referencesRestored": true,
        },
    -   "domainEvents": ArrayContaining [
    -     Any<ModelUndeletedEvent>,
    -     Any<ModelRestoredEvent>,
    +   "domainEvents": Array [
    +     Object {
    +       "aggregateId": "recoverable-model-123",
    +       "eventId": "00000001-0000-4000-8000-000000010000",
    +       "eventType": "ModelUndeleted",
    +       "eventVersion": 1,
    +       "occurredAt": "2025-08-29T12:52:17.557Z",
    +       "reason": "Project reactivation - business requirement",
    +       "restoredAt": "2025-08-29T12:52:17.557Z",
    +       "restoredBy": "admin-456",
    +     },
    +     Object {
    +       "aggregateId": "recoverable-model-123",
    +       "eventId": "00000002-0000-4000-8000-000000020000",
    +       "eventType": "ModelRestored",
    +       "eventVersion": 1,
    +       "occurredAt": "2025-08-29T12:52:17.557Z",
    +       "reason": "Project reactivation - business requirement",
    +       "restoredAt": "2025-08-29T12:52:17.557Z",
    +       "restoredBy": "admin-456",
    +       "targetStatus": "published",
    +     },
        ],
    -   "recoveryDetails": ObjectContaining {
    -     "originalDeletionData": ObjectContaining {
    -       "deletedAt": Any<Date>,
    +   "recoveryDetails": Object {
    +     "originalDeletionData": Object {
    +       "deletedAt": 2025-08-29T12:52:17.556Z,
            "deletedBy": "temp-deleter",
          },
          "recoveredBy": "admin-456",
    -     "recoveryTimestamp": Any<Date>,
    -     "restoredState": ObjectContaining {
    +     "recoveryTimestamp": 2025-08-29T12:52:17.557Z,
    +     "restoredState": Object {
            "isDeleted": false,
            "modelId": "recoverable-model-123",
            "name": "Recoverable Model",
            "status": "published",
          },
        },
        "recoveryExecuted": true,
    -   "versioningActions": ObjectContaining {
    -     "newVersionCreated": true,
    -     "version": "2.3.2",
    -     "versionReason": "Model recovery restoration",
    +   "versioningActions": Object {
    +     "newVersionCreated": false,
    +     "version": "2.3.1",
    +     "versionReason": "No version changes required",
        },
      }

    [0m [90m 305 |[39m         [90m// Assert[39m
     [90m 306 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 307 |[39m         expect(result[33m.[39mvalue)[33m.[39mtoEqual(
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 308 |[39m           expect[33m.[39mobjectContaining({
     [90m 309 |[39m             recoveryExecuted[33m:[39m [36mtrue[39m[33m,[39m
     [90m 310 |[39m             recoveryDetails[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:307:30)

  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_WithVersionConflicts_ShouldResolveAndRestore ‚Ä∫ should resolve version conflicts during recovery process

    expect(received).toEqual(expected) // deep equality

    - Expected  - 5
    + Received  + 8

    - ObjectContaining {
    -   "compatibilityLayerCreated": true,
    -   "conflictResolution": ObjectContaining {
    + Object {
    +   "compatibilityLayerCreated": undefined,
    +   "conflictResolution": Object {
          "conflictsResolved": true,
    -     "resolutionActions": ArrayContaining [
    +     "resolutionActions": Array [
            "Updated schema to version 2.4.0",
            "Upgraded shared-library to version 1.3.0",
            "Created compatibility layer for legacy components",
          ],
        },
    -   "finalVersionValidation": ObjectContaining {
    +   "finalVersionValidation": Object {
          "compatible": true,
          "validationPassed": true,
        },
    +   "newVersionCreated": false,
    +   "version": "2.3.1",
        "versionConflictsDetected": true,
    +   "versionReason": "Version conflict resolution",
      }

    [0m [90m 478 |[39m         [90m// Assert[39m
     [90m 479 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 480 |[39m         expect(result[33m.[39mvalue[33m.[39mversioningActions)[33m.[39mtoEqual(
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 481 |[39m           expect[33m.[39mobjectContaining({
     [90m 482 |[39m             versionConflictsDetected[33m:[39m [36mtrue[39m[33m,[39m
     [90m 483 |[39m             conflictResolution[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:480:48)

  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_PostRecovery_ShouldEnsureModelIntegrity ‚Ä∫ should validate complete model integrity after recovery

    expect(received).toEqual(expected) // deep equality

    - Expected  - 8
    + Received  + 8

    - ObjectContaining {
    + Object {
        "integrityValidationPassed": true,
    -   "qualityMetrics": ObjectContaining {
    +   "qualityMetrics": Object {
          "dataPreservationRate": 100,
          "integrityScore": 100,
          "performanceImpact": "MINIMAL",
          "recoverySuccessRate": 100,
        },
    -   "validationResults": ObjectContaining {
    -     "businessRuleValidation": ObjectContaining {
    +   "validationResults": Object {
    +     "businessRuleValidation": Object {
            "allRulesSatisfied": true,
            "noViolationsDetected": true,
          },
    -     "dataConsistencyValidation": ObjectContaining {
    +     "dataConsistencyValidation": Object {
            "auditTrailComplete": true,
            "dataConsistent": true,
            "noCorruptionDetected": true,
          },
    -     "dependencyValidation": ObjectContaining {
    +     "dependencyValidation": Object {
            "dependenciesResolved": true,
            "integrityMaintained": true,
            "referencesValid": true,
          },
    -     "modelStateValidation": ObjectContaining {
    +     "modelStateValidation": Object {
            "isValid": true,
            "metadataIntact": true,
    -       "modelNotDeleted": true,
    +       "modelNotDeleted": false,
            "requiredPropertiesPresent": true,
          },
        },
      }

    [0m [90m 657 |[39m         [90m// Assert[39m
     [90m 658 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 659 |[39m         expect(result[33m.[39mvalue)[33m.[39mtoEqual(
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 660 |[39m           expect[33m.[39mobjectContaining({
     [90m 661 |[39m             integrityValidationPassed[33m:[39m [36mtrue[39m[33m,[39m
     [90m 662 |[39m             validationResults[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:659:30)

  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_WithIssues_ShouldIdentifyProblems ‚Ä∫ should identify and report integrity issues post-recovery

    expect(received).toEqual(expected) // deep equality

    - Expected  - 7
    + Received  + 2

    - ObjectContaining {
    -   "dataConsistencyIssues": ObjectContaining {
    -     "inconsistentFields": Array [
    -       "metadata-mismatch-field",
    -     ],
    -   },
    -   "dependencyIssues": ObjectContaining {
    + Object {
    +   "dependencyIssues": Object {
          "brokenReferences": Array [
            "ref-issue-1",
          ],
        },
      }

    [0m [90m 719 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 720 |[39m         expect(result[33m.[39mvalue[33m.[39mintegrityValidationPassed)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 721 |[39m         expect(result[33m.[39mvalue[33m.[39mdetectedIssues)[33m.[39mtoEqual(
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 722 |[39m           expect[33m.[39mobjectContaining({
     [90m 723 |[39m             dependencyIssues[33m:[39m expect[33m.[39mobjectContaining({
     [90m 724 |[39m               brokenReferences[33m:[39m [[32m'ref-issue-1'[39m][33m,[39m[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:721:45)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ RecoveryServiceCoordination_ShouldUseOnlyDomainDependencies ‚Ä∫ should coordinate recovery using only domain services and entities

    expect(received).toBe(expected) // Object.is equality

    Expected: "function"
    Received: "undefined"

    [0m [90m 768 |[39m           expect(dep)[33m.[39mtoBeDefined()[33m;[39m
     [90m 769 |[39m           [90m// Verify these are domain services, not infrastructure implementations[39m
    [31m[1m>[22m[39m[90m 770 |[39m           expect([36mtypeof[39m dep[33m.[39mvalidateDependencyIntegrity)[33m.[39mtoBe([32m'function'[39m)[33m;[39m
     [90m     |[39m                                                          [31m[1m^[22m[39m
     [90m 771 |[39m         })[33m;[39m
     [90m 772 |[39m
     [90m 773 |[39m         [90m// Verify versioning service methods[39m[0m

      at toBe (tests/unit/domain/services/model-recovery-service.test.ts:770:58)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/model-recovery-service.test.ts:767:22)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ DomainEventGeneration_ForRecovery_ShouldFollowEventSourcingPatterns ‚Ä∫ should generate appropriate domain events for recovery operations

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 4

    - ObjectContaining {
    -   "modelId": "recoverable-model-123",
    -   "restoredAt": Any<Date>,
    + Object {
    +   "aggregateId": "recoverable-model-123",
    +   "reason": "Domain event testing",
    +   "restoredAt": "2025-08-29T12:52:17.623Z",
        "restoredBy": "event-tester",
      }

    [0m [90m 805 |[39m         expect(undeletedEvent)[33m.[39mtoBeDefined()[33m;[39m
     [90m 806 |[39m         expect(undeletedEvent[33m.[39maggregateId)[33m.[39mtoBe([32m'recoverable-model-123'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 807 |[39m         expect(undeletedEvent[33m.[39mgetEventData())[33m.[39mtoEqual(
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 808 |[39m           expect[33m.[39mobjectContaining({
     [90m 809 |[39m             modelId[33m:[39m [32m'recoverable-model-123'[39m[33m,[39m
     [90m 810 |[39m             restoredBy[33m:[39m [32m'event-tester'[39m[33m,[39m[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:807:47)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ ErrorHandling_ShouldUseResultPattern ‚Ä∫ should use Result pattern for error handling throughout recovery coordination

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 836 |[39m
     [90m 837 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 838 |[39m         expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 839 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Dependency validation service unavailable'[39m)[33m;[39m
     [90m 840 |[39m         
     [90m 841 |[39m         [90m// Verify no partial state changes occurred[39m[0m

      at Object.toBe (tests/unit/domain/services/model-recovery-service.test.ts:838:34)

FAIL tests/e2e/focused-user-workflows.e2e.test.ts
  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyEnforcement_E2E ‚Ä∫ should_PreventInvalidOperations_WithProperErrorMessages

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Valid position coordinates are required"

    [0m [90m 467 |[39m
     [90m 468 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 469 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 470 |[39m
     [90m 471 |[39m         [90m// Test adding action to non-existent container[39m
     [90m 472 |[39m         [36mconst[39m createResult [33m=[39m [36mawait[39m createModelUseCase[33m.[39mexecute({[0m

      at Object.toContain (tests/e2e/focused-user-workflows.e2e.test.ts:469:42)

FAIL tests/e2e/complete-user-workflow-scenarios.e2e.test.ts
  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteModelLifecycleWorkflow_E2E ‚Ä∫ should_ExecuteCompleteModelLifecycle_FromCreationToArchival

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 687 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockModelRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 688 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 689 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe([32m'Complete Lifecycle Model'[39m)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 690 |[39m
     [90m 691 |[39m         [90m// PHASE 2: UC-002 - Add Container Node (IO Input)[39m
     [90m 692 |[39m         [36mconst[39m inputNodeResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:689:40)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyViolationHandling_E2E ‚Ä∫ should_PreventDependencyViolations_AndMaintainSystemIntegrity

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Valid position coordinates are required"

    [0m [90m 881 |[39m
     [90m 882 |[39m         expect(addNodeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 883 |[39m         expect(addNodeResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 884 |[39m
     [90m 885 |[39m         [90m// Test UC-003 dependency violation (add action to non-existent container)[39m
     [90m 886 |[39m         [36mconst[39m createResult [33m=[39m [36mawait[39m createModelUseCase[33m.[39mexecute({[0m

      at Object.toContain (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:883:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ComplexOrchestrationWorkflow_E2E ‚Ä∫ should_CoordinateAllOrchestrationServices_InComplexExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:954:49)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ErrorRecoveryInComplexPipeline_E2E ‚Ä∫ should_RecoverFromFailures_AcrossComplexOrchestrationLayers

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1168:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ CompleteAgentWorkflow_E2E ‚Ä∫ should_ExecuteCompleteAgentWorkflow_FromRegistrationToExecution

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1263 |[39m         })[33m;[39m
     [90m 1264 |[39m
    [31m[1m>[22m[39m[90m 1265 |[39m         expect(agent1Registration[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                              [31m[1m^[22m[39m
     [90m 1266 |[39m         expect(agent1Registration[33m.[39mvalue[33m.[39magentId)[33m.[39mtoBe([32m'test-agent-processing'[39m)[33m;[39m
     [90m 1267 |[39m
     [90m 1268 |[39m         [36mconst[39m agent2Registration [33m=[39m [36mawait[39m registerAgentUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1265:46)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AgentIntegrationWithModels_E2E ‚Ä∫ should_IntegrateAgents_WithCompleteModelWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1421:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ CROSS-FEATURE INTEGRATION: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CompleteCrossFeatureWorkflow_E2E ‚Ä∫ should_ExecuteCompleteCrossFeatureIntegration_WithLinkingAndExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1495:55)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ APPLICATION SERVICES COORDINATION ‚Ä∫ CompleteServiceOrchestration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InCompleteWorkflow

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1742 |[39m         })[33m;[39m
     [90m 1743 |[39m
    [31m[1m>[22m[39m[90m 1744 |[39m         expect(modelManagementResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                                 [31m[1m^[22m[39m
     [90m 1745 |[39m         [36mconst[39m orchestrationModelId [33m=[39m modelManagementResult[33m.[39mvalue[33m.[39mmodelId[33m;[39m
     [90m 1746 |[39m
     [90m 1747 |[39m         [90m// PHASE 2: AI Agent Management Service coordination[39m[0m

      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1744:49)

FAIL tests/e2e/primary-workflow-chain.e2e.test.ts
  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 336 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 337 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 338 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe(workflowName)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 339 |[39m
     [90m 340 |[39m         [90m// UC-002: Add Container Node (must create model before adding nodes)[39m
     [90m 341 |[39m         [36mconst[39m addContainerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/primary-workflow-chain.e2e.test.ts:338:40)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Invalid node type specified"

    [0m [90m 428 |[39m         [90m// Assert: Dependency violation should be caught[39m
     [90m 429 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 430 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 431 |[39m
     [90m 432 |[39m         [90m// Verify no side effects occurred[39m
     [90m 433 |[39m         [36mconst[39m auditLogs [33m=[39m [36mawait[39m mockAuditRepository[33m.[39mfindByModelId(nonExistentModelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:430:42)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution

    expect(received).toContain(expected) // indexOf

    Expected substring: "must be published"
    Received string:    "Valid environment is required (development, staging, production)"

    [0m [90m 457 |[39m         [90m// Assert: Execution should fail due to publication prerequisite[39m
     [90m 458 |[39m         expect(executeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 459 |[39m         expect(executeResult[33m.[39merror)[33m.[39mtoContain([32m'must be published'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 460 |[39m
     [90m 461 |[39m         [90m// Verify model status is still DRAFT[39m
     [90m 462 |[39m         [36mconst[39m model [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:459:37)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ValidateWorkflowStructure_BeforePublishing

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 485 |[39m
     [90m 486 |[39m         [90m// Assert: Validation should fail for empty workflow[39m
    [31m[1m>[22m[39m[90m 487 |[39m         expect(validateResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// The operation succeeds[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 488 |[39m         expect(validateResult[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m [90m// But validation reports invalid[39m
     [90m 489 |[39m
     [90m 490 |[39m         [90m// Try to publish with validation enforcement[39m[0m

      at Object.toBe (tests/e2e/primary-workflow-chain.e2e.test.ts:487:42)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_HandleComplexWorkflow_WithMultipleNodesAndActions

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:549:47)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ ErrorRecovery_E2E ‚Ä∫ should_RecoverFromTransientFailures_DuringExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:640:37)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Architectural Compliance Validation ‚Ä∫ CleanArchitectureCompliance_E2E ‚Ä∫ should_MaintainLayerSeparation_ThroughoutWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:702:41)

FAIL tests/e2e/comprehensive-user-workflows.e2e.test.ts
  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 522 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 523 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 524 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe(workflowName)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 525 |[39m
     [90m 526 |[39m         [90m// UC-002: Add Container Node (must create model before adding nodes)[39m
     [90m 527 |[39m         [36mconst[39m addContainerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/comprehensive-user-workflows.e2e.test.ts:524:40)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Node name is required"

    [0m [90m 619 |[39m         [90m// Assert: Dependency violation should be caught[39m
     [90m 620 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 621 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 622 |[39m
     [90m 623 |[39m         [90m// Verify no side effects occurred[39m
     [90m 624 |[39m         [36mconst[39m auditLogs [33m=[39m [36mawait[39m mockAuditRepository[33m.[39mfindByModelId(nonExistentModelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:621:42)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution

    expect(received).toContain(expected) // indexOf

    Expected substring: "must be published"
    Received string:    "Valid environment is required (development, staging, production)"

    [0m [90m 648 |[39m         [90m// Assert: Execution should fail due to publication prerequisite[39m
     [90m 649 |[39m         expect(executeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 650 |[39m         expect(executeResult[33m.[39merror)[33m.[39mtoContain([32m'must be published'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 651 |[39m
     [90m 652 |[39m         [90m// Verify model status is still DRAFT[39m
     [90m 653 |[39m         [36mconst[39m model [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:650:37)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ WorkflowVersioning_E2E ‚Ä∫ should_CreateNewVersion_AfterSuccessfulExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:679:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_CoordinateComplexExecution_WithMultipleOrchestrationServices

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:743:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_HandleCascadingFailures_InComplexPipeline

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:890:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_ExecuteCompleteAIAgentWorkflow_WithRegistrationDiscoveryExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:966:45)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_HandleAgentFailures_WithGracefulDegradation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1144 |[39m         })[33m;[39m
     [90m 1145 |[39m
    [31m[1m>[22m[39m[90m 1146 |[39m         expect(errorHandlingResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                               [31m[1m^[22m[39m
     [90m 1147 |[39m
     [90m 1148 |[39m         [90m// Act: Execute with agent failure simulation[39m
     [90m 1149 |[39m         [36mconst[39m containerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1146:47)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_IntegrateAcrossFeaturesWithLinkStrengthCalculation

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1209:55)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_PropagateErrorsAcrossCrossFeatureLinks

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1353:49)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Error Recovery Across Dependency Boundaries ‚Ä∫ SystemWideRecovery_E2E ‚Ä∫ should_RecoverFromComplexFailureScenarios_AcrossMultipleLayers

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1490:51)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ All Application Services Integration ‚Ä∫ CompleteSystemIntegration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InComplexWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1654:61)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Real User Scenarios with Actual Data Flows ‚Ä∫ ProductionLikeWorkflows_E2E ‚Ä∫ should_ExecuteRealisticBusinessWorkflow_WithActualDataTransformations

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:2077:52)

FAIL tests/unit/domain/entities/function-model-publication.test.ts
  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ publish() - State Transition Rules ‚Ä∫ should transition from DRAFT to PUBLISHED when valid

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:56:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ publish() - State Transition Rules ‚Ä∫ should fail when model is already PUBLISHED

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:68:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ validateWorkflow() - Publication Validation Rules ‚Ä∫ should validate successfully with input and output nodes

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:176:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ validateWorkflow() - Publication Validation Rules ‚Ä∫ should include warnings for isolated nodes

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:190:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Business Rule Enforcement During Publication ‚Ä∫ should prevent modification of published models

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:254:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Business Rule Enforcement During Publication ‚Ä∫ should prevent removal from published models

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:276:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Business Rule Enforcement During Publication ‚Ä∫ should maintain model integrity during publication process

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:292:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Publication Prerequisites ‚Ä∫ should allow publication with valid minimum structure

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:325:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Publication Prerequisites ‚Ä∫ should update timestamp on successful publication

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:337:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Publication Idempotency Rules ‚Ä∫ should not change state on repeated publish attempts

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:355:7)

  ‚óè FunctionModel - Publication Domain Rules ‚Ä∫ Publication Idempotency Rules ‚Ä∫ should maintain consistent error messages for invalid state

    Failed to add output node to model

    [0m [90m 406 |[39m
     [90m 407 |[39m     [36mconst[39m addOutputResult [33m=[39m model[33m.[39maddNode(outputNode)[33m;[39m
    [31m[1m>[22m[39m[90m 408 |[39m     [36mif[39m (addOutputResult[33m.[39misFailure) [36mthrow[39m [36mnew[39m [33mError[39m([32m'Failed to add output node to model'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 409 |[39m   }
     [90m 410 |[39m })[33m;[39m[0m

      at addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:408:42)
      at Object.addValidWorkflowNodes (tests/unit/domain/entities/function-model-publication.test.ts:371:7)

FAIL tests/unit/domain/rules/execution-rules.test.ts
  ‚óè ExecutionRules ‚Ä∫ model validation ‚Ä∫ should warn about nodes without actions

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 168 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 169 |[39m       [90m// Should be able to execute but with warnings[39m
    [31m[1m>[22m[39m[90m 170 |[39m       expect(result[33m.[39mvalue[33m.[39mcanExecute)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 171 |[39m       expect(result[33m.[39mvalue[33m.[39mwarnings[33m.[39msome(w [33m=>[39m w[33m.[39mincludes([32m'has no actions'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 172 |[39m     })[33m;[39m
     [90m 173 |[39m[0m

      at Object.toBe (tests/unit/domain/rules/execution-rules.test.ts:170:39)

  ‚óè ExecutionRules ‚Ä∫ node execution order validation ‚Ä∫ should detect gaps in execution order

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

    [0m [90m 372 |[39m       [90m// Assert[39m
     [90m 373 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 374 |[39m       expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 375 |[39m       expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Execution order gap detected: missing order 2'[39m)[33m;[39m
     [90m 376 |[39m     })[33m;[39m
     [90m 377 |[39m[0m

      at Object.toBe (tests/unit/domain/rules/execution-rules.test.ts:374:36)

  ‚óè ExecutionRules ‚Ä∫ resource requirements validation ‚Ä∫ should calculate total resource requirements

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 3

      Object {
    -   "cpu": 6,
    -   "executionTime": 900,
    -   "memory": 3072,
    +   "cpu": 2,
    +   "executionTime": 300,
    +   "memory": 1024,
      }

    [0m [90m 526 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 527 |[39m       expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 528 |[39m       expect(result[33m.[39mvalue[33m.[39mtotalRequirements)[33m.[39mtoEqual({
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 529 |[39m         cpu[33m:[39m [35m6[39m[33m,[39m
     [90m 530 |[39m         memory[33m:[39m [35m3072[39m[33m,[39m
     [90m 531 |[39m         executionTime[33m:[39m [35m900[39m[0m

      at Object.toEqual (tests/unit/domain/rules/execution-rules.test.ts:528:46)

FAIL tests/unit/domain/services/hierarchical-context-access.test.ts
  ‚óè Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance ‚Ä∫ Uncle/Aunt Lateral Access Rules ‚Ä∫ NephewNiece_ShouldHaveReadOnlyAccessToUncleAuntContexts

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 595 |[39m
     [90m 596 |[39m       [90m// DOMAIN RULE: Uncle/aunt contexts accessible for root cause analysis[39m
    [31m[1m>[22m[39m[90m 597 |[39m       expect(uncleContextFound)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                 [31m[1m^[22m[39m
     [90m 598 |[39m       expect((uncleContextFound [36mas[39m any)[33m.[39moperationalData[33m.[39mvalidatedItems)[33m.[39mtoBe([35m50[39m)[33m;[39m
     [90m 599 |[39m       expect((uncleContextFound [36mas[39m any)[33m.[39mdebugInfo)[33m.[39mtoContain([32m'Uncle stage processing'[39m)[33m;[39m
     [90m 600 |[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/hierarchical-context-access.test.ts:597:33)

FAIL tests/unit/domain/entities/function-model-comprehensive.test.ts
  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Business Rules and Domain Logic Enforcement ‚Ä∫ Publish_ValidDraftModel_ShouldTransitionStateAndEnforceRules

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 181 |[39m
     [90m 182 |[39m       [90m// Assert - Business rule: only valid workflows can be published[39m
    [31m[1m>[22m[39m[90m 183 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 184 |[39m       expect(validModel[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mPUBLISHED[39m)[33m;[39m
     [90m 185 |[39m       
     [90m 186 |[39m       [90m// Domain invariant: version count remains unchanged (publish doesn't increment it)[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:183:32)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Business Rules and Domain Logic Enforcement ‚Ä∫ Publish_AlreadyPublishedModel_ShouldEnforceBusinessRule

    expect(received).toBe(expected) // Object.is equality

    Expected: "Model is already published"
    Received: "Cannot publish invalid workflow"

    [0m [90m 201 |[39m       [90m// Assert - Business rule: cannot republish[39m
     [90m 202 |[39m       expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 203 |[39m       expect(result[33m.[39merror)[33m.[39mtoBe([32m'Model is already published'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 204 |[39m     })[33m;[39m
     [90m 205 |[39m
     [90m 206 |[39m     it([32m'Archive_PublishedModel_ShouldTransitionToArchivedState'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:203:28)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Workflow Validation and Domain Complexity ‚Ä∫ ValidateWorkflow_CompleteWorkflow_ShouldPassValidation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 384 |[39m       
     [90m 385 |[39m       [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 386 |[39m       expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 387 |[39m       expect(validation[33m.[39merrors)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 388 |[39m       expect(validation[33m.[39mwarnings)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 389 |[39m     })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:386:34)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Workflow Validation and Domain Complexity ‚Ä∫ ValidateWorkflow_WithIONode_ShouldPassValidation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 431 |[39m       
     [90m 432 |[39m       [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 433 |[39m       expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 434 |[39m       expect(validation[33m.[39merrors)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 435 |[39m     })[33m;[39m
     [90m 436 |[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:433:34)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Workflow Validation and Domain Complexity ‚Ä∫ ValidateWorkflow_WithStageNodes_ShouldNotGenerateWarnings

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 465 |[39m       
     [90m 466 |[39m       [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 467 |[39m       expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 468 |[39m       expect(validation[33m.[39mwarnings)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m [90m// Connected workflow with actions[39m
     [90m 469 |[39m     })[33m;[39m
     [90m 470 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:467:34)

  ‚óè FunctionModel - Comprehensive Domain Entity Tests ‚Ä∫ Entity Identity and Equality ‚Ä∫ Equals_DifferentModelId_ShouldNotBeEqual

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

    [0m [90m 565 |[39m
     [90m 566 |[39m       [90m// Act & Assert - Different entities despite same properties[39m
    [31m[1m>[22m[39m[90m 567 |[39m       expect(model1[33m.[39mequals(model2))[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 568 |[39m     })[33m;[39m
     [90m 569 |[39m   })[33m;[39m
     [90m 570 |[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-comprehensive.test.ts:567:37)

FAIL tests/unit/domain/events/domain-event-integration.test.ts
  ‚óè Domain Event Behavior and Integration - Clean Architecture Compliance ‚Ä∫ Function Model Lifecycle Events ‚Ä∫ ModelPublication_ShouldRaiseModelPublishedEvent

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 154 |[39m       [90m// Act - Publish model and raise event[39m
     [90m 155 |[39m       [36mconst[39m publishResult [33m=[39m model[33m.[39mpublish()[33m;[39m
    [31m[1m>[22m[39m[90m 156 |[39m       expect(publishResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 157 |[39m
     [90m 158 |[39m       [36mconst[39m event [33m=[39m [36mnew[39m [33mModelPublished[39m({
     [90m 159 |[39m         modelId[33m:[39m model[33m.[39mmodelId[33m,[39m[0m

      at Object.toBe (tests/unit/domain/events/domain-event-integration.test.ts:156:39)

  ‚óè Domain Event Behavior and Integration - Clean Architecture Compliance ‚Ä∫ Cross-Feature Relationship Events ‚Ä∫ NodeLinkCreation_ShouldRaiseNodeLinkCreatedEvent

    TypeError: props.sourceNodeId?.equals is not a function

    [0m [90m 145 |[39m     [36mif[39m (props[33m.[39msourceFeature [33m===[39m props[33m.[39mtargetFeature [33m&&[39m
     [90m 146 |[39m         props[33m.[39msourceEntityId [33m===[39m props[33m.[39mtargetEntityId [33m&&[39m
    [31m[1m>[22m[39m[90m 147 |[39m         props[33m.[39msourceNodeId[33m?[39m[33m.[39mequals(props[33m.[39mtargetNodeId [33m||[39m props[33m.[39msourceNodeId)) {
     [90m     |[39m                             [31m[1m^[22m[39m
     [90m 148 |[39m       [36mreturn[39m [33mResult[39m[33m.[39mfail[33m<[39m[36mvoid[39m[33m>[39m([32m'Self-links are prohibited'[39m)[33m;[39m
     [90m 149 |[39m     }
     [90m 150 |[39m[0m

      at Function.equals [as validate] (lib/domain/entities/node-link.ts:147:29)
      at Function.validate [as create] (lib/domain/entities/node-link.ts:36:39)
      at Object.create (tests/unit/domain/events/domain-event-integration.test.ts:526:35)

FAIL tests/integration/domain/services/business-rule-validation-service.integration.test.ts
  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Integration with All 24 Use Cases ‚Ä∫ UC-001_through_UC-009_FunctionModelManagement_Integration ‚Ä∫ should_ValidateBusinessRules_ForAllFunctionModelUseCases

    expect(received).toContain(expected) // indexOf

    Expected value: "Action node API Call Without Endpoint missing required configuration: apiEndpoint"
    Received array: ["Required input boundary node is missing"]

    [0m [90m 131 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 132 |[39m         expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 133 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Action node API Call Without Endpoint missing required configuration: apiEndpoint'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 134 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Action node Transform Without Rules missing transformation configuration'[39m)[33m;[39m
     [90m 135 |[39m
     [90m 136 |[39m         [90m// Verify validation covers all function model management scenarios[39m[0m

      at Object.toContain (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:133:37)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Integration with All 24 Use Cases ‚Ä∫ UC-010_through_UC-017_NodeManagement_Integration ‚Ä∫ should_ValidateNodeDependencyRules_AcrossAllNodeTypes

    expect(received).toContain(expected) // indexOf

    Expected value: "Action node High Memory Action requires high memory allocation"
    Received array: ["Workflow has no output boundaries - consider adding an output IO node", "Consider enabling audit logging for compliance"]

    [0m [90m 271 |[39m         
     [90m 272 |[39m         [90m// Verify resource allocation validation[39m
    [31m[1m>[22m[39m[90m 273 |[39m         expect(result[33m.[39mvalue[33m.[39mwarnings)[33m.[39mtoContain([32m'Action node High Memory Action requires high memory allocation'[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 274 |[39m         
     [90m 275 |[39m         [90m// Verify data security validation[39m
     [90m 276 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Workflow violates data retention policy: sensitive data processing without encryption'[39m)[33m;[39m[0m

      at Object.toContain (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:273:39)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Integration with All 24 Use Cases ‚Ä∫ UC-023_UC-024_ValidationAndCompliance_Integration ‚Ä∫ should_ValidateCompliance_WithOrganizationalPolicies

    expect(received).toContain(expected) // indexOf

    Expected value: "External data sharing requires organizational approval"
    Received array: ["Required input boundary node is missing"]

    [0m [90m 461 |[39m
     [90m 462 |[39m         [90m// Verify data sharing compliance[39m
    [31m[1m>[22m[39m[90m 463 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'External data sharing requires organizational approval'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 464 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Workflow violates data retention policy: sensitive data processing without encryption'[39m)[33m;[39m
     [90m 465 |[39m
     [90m 466 |[39m         [90m// Verify resource allocation limits[39m[0m

      at Object.toContain (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:463:37)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Integration with All 24 Use Cases ‚Ä∫ UC-023_UC-024_ValidationAndCompliance_Integration ‚Ä∫ should_ValidateSecurityRequirements_AcrossAllOperations

    expect(received).toContain(expected) // indexOf

    Expected value: "Security scan required for external API integrations"
    Received array: ["Required input boundary node is missing"]

    [0m [90m 515 |[39m
     [90m 516 |[39m         [90m// Verify external API security requirements[39m
    [31m[1m>[22m[39m[90m 517 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Security scan required for external API integrations'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 518 |[39m         expect(result[33m.[39mvalue[33m.[39merrors)[33m.[39mtoContain([32m'Authentication-required nodes must specify authentication method'[39m)[33m;[39m
     [90m 519 |[39m         expect(result[33m.[39mvalue[33m.[39mwarnings)[33m.[39mtoContain([32m'Action node External API Integration handles sensitive data - ensure secure processing'[39m)[33m;[39m
     [90m 520 |[39m[0m

      at Object.toContain (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:517:37)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Performance Under High-Load Operations ‚Ä∫ highLoadPerformance_Integration ‚Ä∫ should_MaintainPerformance_WithLargeScaleValidation

    Invalid action creation parameters: ActionId: Node ID must be a valid UUID

    [0m [90m 496 |[39m       [36mif[39m (actionIdResult[33m.[39misFailure) errors[33m.[39mpush([32m`ActionId: ${actionIdResult.error}`[39m)[33m;[39m
     [90m 497 |[39m       [36mif[39m (parentNodeIdResult[33m.[39misFailure) errors[33m.[39mpush([32m`ParentNodeId: ${parentNodeIdResult.error}`[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 498 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid action creation parameters: ${errors.join(', ')}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 499 |[39m     }
     [90m 500 |[39m
     [90m 501 |[39m     [36mconst[39m tetherNodeProps [33m=[39m {[0m

      at TetherNodeBuilder.build (tests/utils/test-fixtures.ts:498:13)
      at Object.build (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:854:16)

  ‚óè BusinessRuleValidationService Integration Tests ‚Ä∫ Rule Configuration and Management ‚Ä∫ ruleConfiguration_Integration ‚Ä∫ should_ValidateRuleConsistency_AcrossConfigurationChanges

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1032:42)

FAIL tests/unit/domain/services/fractal-orchestration-service.test.ts
  ‚óè FractalOrchestrationService ‚Ä∫ hierarchical orchestration patterns ‚Ä∫ handleVerticalNesting ‚Ä∫ should handle vertical nesting successfully

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  ["fda161a7-3e5a-4868-83c0-416313bfbea0"]

    [0m [90m 345 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 346 |[39m         [36mconst[39m nestedResults [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 347 |[39m         expect([33mObject[39m[33m.[39mkeys(nestedResults))[33m.[39mtoHaveLength([35m2[39m)[33m;[39m
     [90m     |[39m                                            [31m[1m^[22m[39m
     [90m 348 |[39m         
     [90m 349 |[39m         [90m// Verify each nested model has results[39m
     [90m 350 |[39m         [36mfor[39m ([36mconst[39m modelId [36mof[39m [33mObject[39m[33m.[39mkeys(nestedResults)) {[0m

      at Object.toHaveLength (tests/unit/domain/services/fractal-orchestration-service.test.ts:347:44)

  ‚óè FractalOrchestrationService ‚Ä∫ hierarchical orchestration patterns ‚Ä∫ handleHorizontalScaling ‚Ä∫ should handle horizontal scaling successfully

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 1
    Received array:  ["cabe549c-b341-4603-89ff-a29f7e004a9f"]

    [0m [90m 393 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 394 |[39m         [36mconst[39m horizontalResults [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 395 |[39m         expect([33mObject[39m[33m.[39mkeys(horizontalResults))[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 396 |[39m         
     [90m 397 |[39m         [90m// Verify all models executed[39m
     [90m 398 |[39m         [36mfor[39m ([36mconst[39m modelId [36mof[39m [33mObject[39m[33m.[39mkeys(horizontalResults)) {[0m

      at Object.toHaveLength (tests/unit/domain/services/fractal-orchestration-service.test.ts:395:48)

  ‚óè FractalOrchestrationService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle concurrent fractal executions

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "fractal_397d236d-b955-47f7-87fd-7ab66f2d29b6_1756471938301"

    [0m [90m 591 |[39m       expect(result1)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 592 |[39m       expect(result2)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 593 |[39m       expect(result1[33m.[39mvalue[33m.[39mexecutionId)[33m.[39mnot[33m.[39mtoBe(result2[33m.[39mvalue[33m.[39mexecutionId)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 594 |[39m     })[33m;[39m
     [90m 595 |[39m
     [90m 596 |[39m     it([32m'should handle resource cleanup after execution'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/services/fractal-orchestration-service.test.ts:593:45)

FAIL tests/unit/domain/services/clean-architecture-compliance.test.ts
  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ result pattern compliance ‚Ä∫ error propagation through Result pattern ‚Ä∫ should propagate errors through Result chains without exceptions

    Expected [object Object] to be a failed Result

    [0m [90m 236 |[39m         [36mawait[39m expect([36masync[39m () [33m=>[39m {
     [90m 237 |[39m           [36mconst[39m result [33m=[39m [36mawait[39m actionOrchestrationService[33m.[39moptimizeActionOrder(invalidData [36mas[39m any)[33m;[39m
    [31m[1m>[22m[39m[90m 238 |[39m           expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 239 |[39m         })[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
     [90m 240 |[39m       })[33m;[39m
     [90m 241 |[39m[0m

      at toBeFailureResult (tests/unit/domain/services/clean-architecture-compliance.test.ts:238:26)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ interface segregation compliance ‚Ä∫ focused service interfaces ‚Ä∫ should have cohesive method groupings

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 483 |[39m               [36mbreak[39m[33m;[39m
     [90m 484 |[39m             [36mcase[39m [32m'ActionNodeExecutionService'[39m[33m:[39m
    [31m[1m>[22m[39m[90m 485 |[39m               expect(methods[33m.[39msome(m [33m=>[39m m[33m.[39mincludes([32m'execution'[39m) [33m||[39m m[33m.[39mincludes([32m'action'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                                                                          [31m[1m^[22m[39m
     [90m 486 |[39m               [36mbreak[39m[33m;[39m
     [90m 487 |[39m             [36mcase[39m [32m'NodeContextAccessService'[39m[33m:[39m
     [90m 488 |[39m               expect(methods[33m.[39msome(m [33m=>[39m m[33m.[39mincludes([32m'context'[39m) [33m||[39m m[33m.[39mincludes([32m'build'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m[0m

      at toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:485:90)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/clean-architecture-compliance.test.ts:473:18)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ WorkflowOrchestrationService should only handle workflow execution

    expect(received).toBe(expected) // Object.is equality

    Expected: 15
    Received: 10

    [0m [90m 560 |[39m         )[33m;[39m
     [90m 561 |[39m         
    [31m[1m>[22m[39m[90m 562 |[39m         expect(workflowRelatedMethods[33m.[39mlength)[33m.[39mtoBe(methods[33m.[39mlength)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 563 |[39m       })[33m;[39m
     [90m 564 |[39m
     [90m 565 |[39m       it([32m'ActionNodeExecutionService should only handle individual action execution'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:562:47)

FAIL tests/unit/domain/entities/nodes/function-model-container-node.test.ts
  ‚óè FunctionModelContainerNode ‚Ä∫ creation and initialization ‚Ä∫ should reject creation with invalid orchestration mode

    Expected [object Object] to be a failed Result

    [0m [90m 144 |[39m       
     [90m 145 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 146 |[39m       expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                      [31m[1m^[22m[39m
     [90m 147 |[39m       expect(result)[33m.[39mtoHaveErrorMessage([32m'Invalid orchestration mode'[39m)[33m;[39m
     [90m 148 |[39m     })[33m;[39m
     [90m 149 |[39m[0m

      at Object.toBeFailureResult (tests/unit/domain/entities/nodes/function-model-container-node.test.ts:146:22)

  ‚óè FunctionModelContainerNode ‚Ä∫ orchestration mode management ‚Ä∫ should update orchestration mode successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "parallel"
    Received: {"communicationPattern": "direct", "errorPropagation": "bubble", "executionIsolation": "sandboxed", "integrationStyle": "parallel", "resourceSharing": "inherited", "stateManagement": "isolated"}

    [0m [90m 761 |[39m       [90m// Assert[39m
     [90m 762 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 763 |[39m       expect(containerNode[33m.[39mcontainerData[33m.[39morchestrationMode)[33m.[39mtoBe([32m'parallel'[39m)[33m;[39m
     [90m     |[39m                                                             [31m[1m^[22m[39m
     [90m 764 |[39m     })[33m;[39m
     [90m 765 |[39m
     [90m 766 |[39m     it([32m'should accept all valid orchestration modes'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/entities/nodes/function-model-container-node.test.ts:763:61)

  ‚óè FunctionModelContainerNode ‚Ä∫ orchestration mode management ‚Ä∫ should accept all valid orchestration modes

    expect(received).toBe(expected) // Object.is equality

    Expected: "embedded"
    Received: {"communicationPattern": "direct", "errorPropagation": "bubble", "executionIsolation": "sandboxed", "integrationStyle": "embedded", "resourceSharing": "inherited", "stateManagement": "isolated"}

    [0m [90m 770 |[39m         [36mconst[39m result [33m=[39m containerNode[33m.[39mupdateOrchestrationMode(mode)[33m;[39m
     [90m 771 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 772 |[39m         expect(containerNode[33m.[39mcontainerData[33m.[39morchestrationMode)[33m.[39mtoBe(mode)[33m;[39m
     [90m     |[39m                                                               [31m[1m^[22m[39m
     [90m 773 |[39m       })[33m;[39m
     [90m 774 |[39m     })[33m;[39m
     [90m 775 |[39m[0m

      at toBe (tests/unit/domain/entities/nodes/function-model-container-node.test.ts:772:63)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/entities/nodes/function-model-container-node.test.ts:769:18)

FAIL tests/unit/domain/services/action-node-orchestration-service.test.ts
  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should coordinate parallel actions successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "parallel-group-1"
    Received: undefined

    [0m [90m 250 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 251 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 252 |[39m         expect(parallelResult[33m.[39mgroupId)[33m.[39mtoBe([32m'parallel-group-1'[39m)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 253 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 254 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 255 |[39m         expect(parallelResult[33m.[39mtotalExecutionTime)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:252:40)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should respect max concurrency limits

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 287 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 288 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m5[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 289 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 290 |[39m         expect(parallelResult[33m.[39mconcurrencyRespected)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 291 |[39m       })[33m;[39m
     [90m 292 |[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:289:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle parallel execution failures with different strategies

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 327 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 328 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m [90m// Both attempted[39m
    [31m[1m>[22m[39m[90m 329 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// One failed[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 330 |[39m         
     [90m 331 |[39m         [90m// Cleanup[39m
     [90m 332 |[39m         (badAction [36mas[39m any)[33m.[39mexecute [33m=[39m originalExecute[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:329:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle empty parallel group

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 349 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 350 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 351 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 352 |[39m       })[33m;[39m
     [90m 353 |[39m     })[33m;[39m
     [90m 354 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:351:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should execute actions sequentially in order

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 385 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 386 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 387 |[39m         expect(sequentialResult[33m.[39mtotalActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 388 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 389 |[39m         expect(sequentialResult[33m.[39mfailurePoint)[33m.[39mtoBeUndefined()[33m;[39m
     [90m 390 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([[32m'First Sequential'[39m[33m,[39m [32m'Second Sequential'[39m])[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:387:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should stop on first failure in sequential execution

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

    [0m [90m 432 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 433 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 434 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 435 |[39m         expect(sequentialResult[33m.[39mfailurePoint)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// Failed at second action (index 1)[39m
     [90m 436 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([[32m'Good Action'[39m[33m,[39m [32m'Bad Action'[39m])[33m;[39m
     [90m 437 |[39m         [0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:434:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should pass context between sequential actions

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 467 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 468 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 469 |[39m         expect(sequentialResult[33m.[39mcontextChain)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 470 |[39m         expect(sequentialResult[33m.[39mcontextChain)[33m.[39mtoHaveLength([35m2[39m)[33m;[39m
     [90m 471 |[39m       })[33m;[39m
     [90m 472 |[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:469:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should handle empty sequential actions

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 478 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 479 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 480 |[39m         expect(sequentialResult[33m.[39mtotalActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 481 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 482 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([])[33m;[39m
     [90m 483 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:480:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should evaluate and execute conditional actions based on criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 513 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 514 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 515 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 516 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 517 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 518 |[39m         expect(conditionalResult[33m.[39mevaluationResults)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:515:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should skip conditional actions when conditions not met

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 545 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 546 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 547 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 548 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 549 |[39m         expect(conditionalResult[33m.[39mevaluationResults[[35m0[39m][33m.[39mexecuted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 550 |[39m         expect(conditionalResult[33m.[39mevaluationResults[[35m0[39m][33m.[39mskipReason)[33m.[39mtoBeDefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:547:51)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle complex conditional logic

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: undefined

    [0m [90m 591 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 592 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 593 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m3[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 594 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 595 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 596 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:593:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle empty conditional evaluations

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 603 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 604 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 605 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 606 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 607 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 608 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:605:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle action failures with retry strategy

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 636 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 637 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 638 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 639 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 640 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 641 |[39m         expect(failureResult[33m.[39mrecoveryActions)[33m.[39mtoBeDefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:638:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should escalate failures after max retries exceeded

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 664 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 665 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 666 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 667 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 668 |[39m         expect(failureResult[33m.[39mescalatedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 669 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:666:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle multiple failure types simultaneously

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 695 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 696 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 697 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 698 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 699 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 700 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:697:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle empty failures array

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 707 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 708 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 709 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 710 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 711 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 712 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:709:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should validate action dependencies successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 741 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 742 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 743 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 744 |[39m         expect(validation[33m.[39mcircularDependencies)[33m.[39mtoEqual([])[33m;[39m
     [90m 745 |[39m         expect(validation[33m.[39munresolvedDependencies)[33m.[39mtoEqual([])[33m;[39m
     [90m 746 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:743:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect circular dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 772 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 773 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 774 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 775 |[39m         expect(validation[33m.[39mcircularDependencies)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m 776 |[39m         expect(validation[33m.[39mcircularDependencies[[35m0[39m])[33m.[39mtoContain(action1[33m.[39mactionId[33m.[39mtoString())[33m;[39m
     [90m 777 |[39m         expect(validation[33m.[39mcircularDependencies[[35m0[39m])[33m.[39mtoContain(action2[33m.[39mactionId[33m.[39mtoString())[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:774:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect unresolved dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 797 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 798 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 799 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 800 |[39m         expect(validation[33m.[39munresolvedDependencies)[33m.[39mtoContain(nonExistentActionId[33m.[39mtoString())[33m;[39m
     [90m 801 |[39m       })[33m;[39m
     [90m 802 |[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:799:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should handle empty dependencies gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 813 |[39m         [90m// Assert[39m
     [90m 814 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 815 |[39m         expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 816 |[39m       })[33m;[39m
     [90m 817 |[39m     })[33m;[39m
     [90m 818 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:815:38)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should monitor action progress successfully

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 841 |[39m         expect(progressResult[33m.[39mcompletedActions)[33m.[39mtoBeDefined()[33m;[39m
     [90m 842 |[39m         expect(progressResult[33m.[39minProgressActions)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 843 |[39m         expect(progressResult[33m.[39mfailedActions)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 844 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeGreaterThanOrEqual([35m0[39m)[33m;[39m
     [90m 845 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeLessThanOrEqual([35m100[39m)[33m;[39m
     [90m 846 |[39m       })[33m;[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:843:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should calculate accurate progress percentages

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

    [0m [90m 880 |[39m         [36mconst[39m progressResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 881 |[39m         expect(progressResult[33m.[39mtotalActions)[33m.[39mtoBe([35m3[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 882 |[39m         expect(progressResult[33m.[39mcompletedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 883 |[39m         expect(progressResult[33m.[39minProgressActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 884 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeCloseTo([35m33.33[39m[33m,[39m [35m1[39m)[33m;[39m [90m// 1/3 completed[39m
     [90m 885 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:882:49)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle malformed actions gracefully

    TypeError: Cannot set property actionId of #<ActionNode> which has only a getter

    [0m [90m 907 |[39m       
     [90m 908 |[39m       [90m// Corrupt the action by clearing critical properties[39m
    [31m[1m>[22m[39m[90m 909 |[39m       (malformedAction [36mas[39m any)[33m.[39mactionId [33m=[39m [36mnull[39m[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 910 |[39m       
     [90m 911 |[39m       [90m// Act[39m
     [90m 912 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m orchestrationService[33m.[39morchestrateNodeActions([malformedAction][33m,[39m {})[33m;[39m[0m

      at Object.<anonymous> (tests/unit/domain/services/action-node-orchestration-service.test.ts:909:40)

FAIL tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts
  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Aggregate Root Access Control ‚Ä∫ FunctionModelAggregate_CrossAggregateReferences_ShouldUseIdentityOnly

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 117 |[39m
     [90m 118 |[39m       [90m// Assert - Cross-Aggregate Reference Validation[39m
    [31m[1m>[22m[39m[90m 119 |[39m       expect(crossLinkResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                         [31m[1m^[22m[39m
     [90m 120 |[39m       [36mconst[39m crossLink [33m=[39m crossLinkResult[33m.[39mvalue[33m;[39m
     [90m 121 |[39m       
     [90m 122 |[39m       [90m// BOUNDARY FILTER: Cross-aggregate references use identities, not direct references[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:119:41)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Aggregate Consistency Boundaries ‚Ä∫ FunctionModelAggregate_StateTransitions_ShouldMaintainInternalConsistency

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 207 |[39m
     [90m 208 |[39m       [90m// Assert - Aggregate Consistency Maintenance[39m
    [31m[1m>[22m[39m[90m 209 |[39m       expect(publishResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 210 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mPUBLISHED[39m)[33m;[39m
     [90m 211 |[39m       
     [90m 212 |[39m       [90m// CONSISTENCY BOUNDARY: Published models cannot be modified[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:209:39)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Aggregate Consistency Boundaries ‚Ä∫ FunctionModelAggregate_BusinessRuleEnforcement_ShouldValidateAcrossEntities

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 257 |[39m       expect(validation[33m.[39merrors[33m.[39msome(error [33m=>[39m 
     [90m 258 |[39m         error[33m.[39mincludes([32m'duplicate execution orders'[39m)
    [31m[1m>[22m[39m[90m 259 |[39m       ))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m          [31m[1m^[22m[39m
     [90m 260 |[39m     })[33m;[39m
     [90m 261 |[39m   })[33m;[39m
     [90m 262 |[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:259:10)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Transaction Boundary Patterns ‚Ä∫ FunctionModelAggregate_AtomicOperations_ShouldSucceedOrFailAsUnit

    expect(received).toContain(expected) // indexOf

    Expected substring: "Node belongs to different model"
    Received string:    "Node with this ID already exists"

    [0m [90m 333 |[39m       [36mconst[39m invalidAddResult [33m=[39m model[33m.[39maddNode(invalidNode)[33m;[39m
     [90m 334 |[39m       expect(invalidAddResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 335 |[39m       expect(invalidAddResult[33m.[39merror)[33m.[39mtoContain([32m'Node belongs to different model'[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 336 |[39m       
     [90m 337 |[39m       [90m// TRANSACTION BOUNDARY: Failed operation doesn't affect aggregate state[39m
     [90m 338 |[39m       expect(model[33m.[39mnodes[33m.[39msize)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// Only valid node remains[39m[0m

      at Object.toContain (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:335:38)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Transaction Boundary Patterns ‚Ä∫ FunctionModelAggregate_ComplexWorkflowTransaction_ShouldMaintainConsistency

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 367 |[39m       [90m// Assert - Transaction Consistency[39m
     [90m 368 |[39m       [36mconst[39m allSuccessful [33m=[39m [[33m...[39mresults[33m.[39mnodeResults[33m,[39m [33m...[39mresults[33m.[39mactionResults][33m.[39mevery(r [33m=>[39m r[33m.[39misSuccess)[33m;[39m
    [31m[1m>[22m[39m[90m 369 |[39m       expect(allSuccessful)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                             [31m[1m^[22m[39m
     [90m 370 |[39m       
     [90m 371 |[39m       [90m// Verify final state consistency[39m
     [90m 372 |[39m       expect(model[33m.[39mnodes[33m.[39msize)[33m.[39mtoBe([35m4[39m)[33m;[39m [90m// All container nodes added[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:369:29)

  ‚óè Aggregate Boundary Validation - Clean Architecture Compliance ‚Ä∫ Boundary Violation Detection ‚Ä∫ CrossAggregateDependencies_ShouldPreventDirectObjectReferences

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 408 |[39m       [90m// Assert - Cross-Aggregate Boundary Enforcement[39m
     [90m 409 |[39m       [90m// The dependency is allowed at the node level, but aggregates should validate this[39m
    [31m[1m>[22m[39m[90m 410 |[39m       expect(crossDependencyResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// Node level allows it[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 411 |[39m       
     [90m 412 |[39m       [90m// But aggregate validation should catch this boundary violation[39m
     [90m 413 |[39m       [36mconst[39m sourceValidation [33m=[39m sourceModel[33m.[39mvalidateWorkflow()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts:410:47)

FAIL tests/unit/domain/entities/audit-log-soft-deletion.test.ts
  ‚óè AuditLog - Soft Deletion Audit Trail ‚Ä∫ Audit Log Creation for Soft Deletion ‚Ä∫ CreateDeletionAuditLog_WithCompleteContext_ShouldCaptureAllDetails ‚Ä∫ should create comprehensive audit log for soft deletion with full context preservation

    expect(received).toEqual(expected) // deep equality

    Expected: 2024-06-15T14:30:00.000Z
    Received: 2025-08-29T12:52:18.436Z

    [0m [90m 147 |[39m         expect(deletionAuditLog[33m.[39maction)[33m.[39mtoBe([32m'SOFT_DELETE'[39m)[33m;[39m
     [90m 148 |[39m         expect(deletionAuditLog[33m.[39muserId)[33m.[39mtoBe([32m'compliance-officer-456'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 149 |[39m         expect(deletionAuditLog[33m.[39mtimestamp)[33m.[39mtoEqual(deletionTimestamp)[33m;[39m
     [90m     |[39m                                            [31m[1m^[22m[39m
     [90m 150 |[39m
     [90m 151 |[39m         [90m// Verify complete state preservation[39m
     [90m 152 |[39m         [36mconst[39m preDeleteState [33m=[39m deletionAuditLog[33m.[39mdetails[33m.[39mpreDeleteState[33m;[39m[0m

      at Object.toEqual (tests/unit/domain/entities/audit-log-soft-deletion.test.ts:149:44)

  ‚óè AuditLog - Soft Deletion Audit Trail ‚Ä∫ Audit Trail Completeness and Integrity ‚Ä∫ ValidateAuditChain_AcrossModelLifecycle_ShouldMaintainContinuity ‚Ä∫ should maintain complete audit chain from creation through soft deletion

    expect(received).toBeGreaterThan(expected)

    Expected: > 1756471938459
    Received:   1756471938459

    [0m [90m 273 |[39m         [90m// Verify chronological order[39m
     [90m 274 |[39m         [36mfor[39m ([36mlet[39m i [33m=[39m [35m1[39m[33m;[39m i [33m<[39m auditLogs[33m.[39mlength[33m;[39m i[33m++[39m) {
    [31m[1m>[22m[39m[90m 275 |[39m           expect(auditLogs[i][33m.[39mtimestamp[33m.[39mgetTime())[33m.[39mtoBeGreaterThan(
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 276 |[39m             auditLogs[i [33m-[39m [35m1[39m][33m.[39mtimestamp[33m.[39mgetTime()
     [90m 277 |[39m           )[33m;[39m
     [90m 278 |[39m         }[0m

      at Object.toBeGreaterThan (tests/unit/domain/entities/audit-log-soft-deletion.test.ts:275:52)

FAIL tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts
  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Configuration object typing ‚Ä∫ should handle executionPolicy configuration correctly

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:17:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Configuration object typing ‚Ä∫ should handle orchestrationMode as object not string

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:62:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Configuration object typing ‚Ä∫ should handle contextInheritance with proper array initialization

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:103:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Property update methods ‚Ä∫ should update orchestration mode correctly

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:146:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Property update methods ‚Ä∫ should update execution policy without compilation errors

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:174:36)

  ‚óè FunctionModelContainerNode Entity - Compilation Fix ‚Ä∫ Context inheritance operations ‚Ä∫ should handle inherited context operations safely

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/entities/function-model-container-node-compilation-fix.test.ts:207:36)

FAIL tests/unit/domain/services/error-handling-recovery-patterns.test.ts
  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution start failures

    Expected [object Object] to be a failed Result

    [0m [90m 303 |[39m
     [90m 304 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 305 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                        [31m[1m^[22m[39m
     [90m 306 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Failed to start execution'[39m)[33m;[39m
     [90m 307 |[39m         expect(actionExecutionService[33m.[39misExecuting(testActionId))[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 308 |[39m         [0m

      at Object.toBeFailureResult (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:305:24)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution timeout scenarios

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle resource exhaustion gracefully

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry exhaustion

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry policy evaluation failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle exponential backoff calculation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle metrics corruption recovery

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle invalid resource usage data

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle invalid model structure

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle extremely deep nesting

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle context initialization failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle level coordination failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle vertical nesting failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle horizontal scaling failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle context transformation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle consistency validation failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle invalid node ID formats

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle memory constraints

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle concurrent context operations conflicts

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle permission validation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle circular reference detection failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ scope management failures ‚Ä∫ should handle scope isolation violations

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should handle workflow -> action -> context failure cascade

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should maintain system stability under high error rates

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should clean up resources after workflow failure

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should prevent memory leaks in long-running error scenarios

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ service coordination error handling ‚Ä∫ should handle inter-service communication failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:870:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

FAIL tests/unit/domain/architecture/action-node-structural-compliance.test.ts
  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should have nodeId property for service compatibility

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should have id property for outer layer compatibility

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should have type property for action identification

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should maintain backward compatibility with actionId

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should have consistent id, nodeId, and actionId values

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

  ‚óè ActionNode Structural Compliance Tests ‚Ä∫ ActionNode Interface Consistency ‚Ä∫ should expose all required properties for domain services

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/architecture/action-node-structural-compliance.test.ts:41:9)

FAIL tests/unit/domain/enums/domain-enums.test.ts
  ‚óè Domain Enumerations ‚Ä∫ NodeStatus ‚Ä∫ should have exactly 5 node statuses

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 6
    Received array:  ["ACTIVE", "INACTIVE", "DRAFT", "CONFIGURED", "ARCHIVED", "ERROR"]

    [0m [90m 140 |[39m
     [90m 141 |[39m     it([32m'should have exactly 5 node statuses'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 142 |[39m       expect([33mObject[39m[33m.[39mkeys([33mNodeStatus[39m))[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 143 |[39m     })[33m;[39m
     [90m 144 |[39m
     [90m 145 |[39m     it([32m'should be consistent with domain model specification'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toHaveLength (tests/unit/domain/enums/domain-enums.test.ts:142:39)

  ‚óè Domain Enumerations ‚Ä∫ NodeStatus ‚Ä∫ should be consistent with domain model specification

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

      Array [
        "active",
        "archived",
    +   "configured",
        "draft",
        "error",
        "inactive",
      ]

    [0m [90m 146 |[39m       [36mconst[39m expectedStatuses [33m=[39m [[32m'active'[39m[33m,[39m [32m'inactive'[39m[33m,[39m [32m'draft'[39m[33m,[39m [32m'archived'[39m[33m,[39m [32m'error'[39m][33m;[39m
     [90m 147 |[39m       [36mconst[39m actualStatuses [33m=[39m [33mObject[39m[33m.[39mvalues([33mNodeStatus[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 148 |[39m       expect(actualStatuses[33m.[39msort())[33m.[39mtoEqual(expectedStatuses[33m.[39msort())[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 149 |[39m     })[33m;[39m
     [90m 150 |[39m   })[33m;[39m
     [90m 151 |[39m[0m

      at Object.toEqual (tests/unit/domain/enums/domain-enums.test.ts:148:37)

FAIL tests/unit/domain/rules/execution-rules-compilation-fix.test.ts
  ‚óè Execution Rules - Compilation Fix ‚Ä∫ Resource validation type consistency ‚Ä∫ should return consistent totalRequirements type structure

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/rules/execution-rules-compilation-fix.test.ts:18:37)

  ‚óè Execution Rules - Compilation Fix ‚Ä∫ Execution precondition type consistency ‚Ä∫ should handle ExecutionPrecondition objects correctly

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.<anonymous> (tests/unit/domain/rules/execution-rules-compilation-fix.test.ts:53:37)

  ‚óè Execution Rules - Compilation Fix ‚Ä∫ Execution context type consistency ‚Ä∫ should access userId property on ExecutionContext without errors

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.contextData (tests/unit/domain/rules/execution-rules-compilation-fix.test.ts:92:56)

FAIL tests/unit/domain/entities/function-model.test.ts
  ‚óè FunctionModel ‚Ä∫ model statistics ‚Ä∫ should calculate model statistics correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

    [0m [90m 583 |[39m       expect(stats[33m.[39mtotalNodes)[33m.[39mtoBe([35m3[39m)[33m;[39m [90m// 2 IO + 1 Stage[39m
     [90m 584 |[39m       expect(stats[33m.[39mcontainerNodeCount)[33m.[39mtoBe([35m3[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 585 |[39m       expect(stats[33m.[39mactionNodeCount)[33m.[39mtoBe([35m2[39m)[33m;[39m [90m// 1 from createCompleteWorkflow + 1 added in test[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 586 |[39m       expect(stats[33m.[39mnodeTypeBreakdown)[33m.[39mtoHaveProperty([32m'ioNode'[39m[33m,[39m [35m2[39m)[33m;[39m
     [90m 587 |[39m       expect(stats[33m.[39mnodeTypeBreakdown)[33m.[39mtoHaveProperty([32m'stageNode'[39m[33m,[39m [35m1[39m)[33m;[39m
     [90m 588 |[39m       expect(stats[33m.[39mactionTypeBreakdown)[33m.[39mtoHaveProperty([32m'tetherNode'[39m[33m,[39m [35m2[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model.test.ts:585:37)

FAIL tests/unit/domain/entities/action-node-type-specific-rules.test.ts
  ‚óè Action Node Type-Specific Business Rules - Domain Compliance Validation ‚Ä∫ FunctionModelContainer Business Rules Validation ‚Ä∫ FunctionModelContainerCreation_WithValidNestedModel_ShouldSucceed

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 499 |[39m
     [90m 500 |[39m       [90m// Act & Assert - Container Creation Success[39m
    [31m[1m>[22m[39m[90m 501 |[39m       expect(containerResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                         [31m[1m^[22m[39m
     [90m 502 |[39m       [36mconst[39m container [33m=[39m containerResult[33m.[39mvalue[33m;[39m
     [90m 503 |[39m
     [90m 504 |[39m       [90m// BUSINESS RULE VALIDATION: Container-specific properties[39m[0m

      at Object.toBe (tests/unit/domain/entities/action-node-type-specific-rules.test.ts:501:41)

FAIL tests/unit/domain/services/workflow-orchestration-service.test.ts
  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should execute tether nodes with mock implementation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "Executing Tether Node: Test Tether"
    Received: "Executing Tether Node: Process Action"

    Number of calls: 1

    [0m [90m 482 |[39m       [90m// Assert[39m
     [90m 483 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 484 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 485 |[39m         expect[33m.[39mstringContaining([32m'Executing Tether Node: Test Tether'[39m)
     [90m 486 |[39m       )[33m;[39m
     [90m 487 |[39m       [0m

      at Object.toHaveBeenCalledWith (tests/unit/domain/services/workflow-orchestration-service.test.ts:484:26)

  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should handle action execution in different modes

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 1

    [0m [90m 575 |[39m       [90m// Assert[39m
     [90m 576 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 577 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m [90m// All 3 actions executed (original + 2 new ones)[39m
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 578 |[39m       
     [90m 579 |[39m       [90m// Cleanup[39m
     [90m 580 |[39m       consoleSpy[33m.[39mmockRestore()[33m;[39m[0m

      at Object.toHaveBeenCalledTimes (tests/unit/domain/services/workflow-orchestration-service.test.ts:577:26)


Test Suites: 29 failed, 70 passed, 99 total
Tests:       183 failed, 2495 passed, 2678 total
Snapshots:   0 total
Time:        25.757 s
Ran all test suites.
‚ÄâELIFECYCLE‚Äâ Test failed. See above for more details.
