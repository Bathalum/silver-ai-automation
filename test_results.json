
> silver-ai-automation-app@0.1.0 test C:\Users\alant\OneDrive\Desktop\Projects\silver-ai-automation
> jest "--testFailureExitCode=0" "--json"

FAIL tests/unit/domain/services/model-recovery-service.test.ts
  ‚óè ModelRecoveryService ‚Ä∫ Recovery Eligibility Assessment ‚Ä∫ AssessRecoveryEligibility_WithIntegrityViolations_ShouldRequireRepair ‚Ä∫ should identify integrity violations and provide repair plan

    expect(received).toEqual(expected) // deep equality

    - Expected  - 9
    + Received  + 9

    - ObjectContaining {
    -   "estimatedRepairTime": StringMatching /\d+\s*(hours?|days?)/,
    + Object {
    +   "estimatedRepairTime": "2 hours",
        "manualInterventionRequired": true,
    -   "repairActions": ArrayContaining [
    -     ObjectContaining {
    -       "action": "RESTORE_MISSING_DEPENDENCY",
    -       "complexity": "MEDIUM",
    -       "target": "dependency-model-456",
    -     },
    -     ObjectContaining {
    +   "repairActions": Array [
    +     Object {
            "action": "REPAIR_BROKEN_REFERENCE",
            "complexity": "LOW",
            "target": "ref-node-1",
    +     },
    +     Object {
    +       "action": "REPAIR_BROKEN_REFERENCE",
    +       "complexity": "LOW",
    +       "target": "ref-node-2",
          },
        ],
      }

    [0m [90m 235 |[39m         expect(result[33m.[39mvalue[33m.[39meligibilityChecks[33m.[39mdependencyIntegrity[33m.[39mpassed)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 236 |[39m         
    [31m[1m>[22m[39m[90m 237 |[39m         expect(result[33m.[39mvalue[33m.[39mrepairPlan)[33m.[39mtoEqual(
     [90m     |[39m                                         [31m[1m^[22m[39m
     [90m 238 |[39m           expect[33m.[39mobjectContaining({
     [90m 239 |[39m             repairActions[33m:[39m expect[33m.[39marrayContaining([
     [90m 240 |[39m               expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:237:41)

  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_ValidEligibleModel_ShouldExecuteRecovery ‚Ä∫ should coordinate complete model recovery process

    expect(received).toEqual(expected) // deep equality

    - Expected  - 16
    + Received  + 35

    - ObjectContaining {
    -   "auditData": ObjectContaining {
    -     "recoveryMetadata": ObjectContaining {
    + Object {
    +   "auditData": Object {
    +     "recoveryMetadata": Object {
            "reason": "Project reactivation - business requirement",
            "recoveredBy": "admin-456",
            "recoveryComplexity": "LOW",
            "stakeholdersNotified": true,
          },
        },
    -   "dependencyActions": ObjectContaining {
    +   "dependencyActions": Object {
          "dependenciesReconciled": true,
          "integrityValidated": true,
          "referencesRestored": true,
        },
    -   "domainEvents": ArrayContaining [
    -     Any<ModelUndeletedEvent>,
    -     Any<ModelRestoredEvent>,
    +   "domainEvents": Array [
    +     Object {
    +       "aggregateId": "recoverable-model-123",
    +       "eventId": "00000001-0000-4000-8000-000000010000",
    +       "eventType": "ModelUndeleted",
    +       "eventVersion": 1,
    +       "occurredAt": "2025-08-28T15:14:13.294Z",
    +       "reason": "Project reactivation - business requirement",
    +       "restoredAt": "2025-08-28T15:14:13.294Z",
    +       "restoredBy": "admin-456",
    +     },
    +     Object {
    +       "aggregateId": "recoverable-model-123",
    +       "eventId": "00000002-0000-4000-8000-000000020000",
    +       "eventType": "ModelRestored",
    +       "eventVersion": 1,
    +       "occurredAt": "2025-08-28T15:14:13.294Z",
    +       "reason": "Project reactivation - business requirement",
    +       "restoredAt": "2025-08-28T15:14:13.294Z",
    +       "restoredBy": "admin-456",
    +       "targetStatus": "published",
    +     },
        ],
    -   "recoveryDetails": ObjectContaining {
    -     "originalDeletionData": ObjectContaining {
    -       "deletedAt": Any<Date>,
    +   "recoveryDetails": Object {
    +     "originalDeletionData": Object {
    +       "deletedAt": 2025-08-28T15:14:13.293Z,
            "deletedBy": "temp-deleter",
          },
          "recoveredBy": "admin-456",
    -     "recoveryTimestamp": Any<Date>,
    -     "restoredState": ObjectContaining {
    +     "recoveryTimestamp": 2025-08-28T15:14:13.294Z,
    +     "restoredState": Object {
            "isDeleted": false,
            "modelId": "recoverable-model-123",
            "name": "Recoverable Model",
            "status": "published",
          },
        },
        "recoveryExecuted": true,
    -   "versioningActions": ObjectContaining {
    -     "newVersionCreated": true,
    -     "version": "2.3.2",
    -     "versionReason": "Model recovery restoration",
    +   "versioningActions": Object {
    +     "newVersionCreated": false,
    +     "version": "2.3.1",
    +     "versionReason": "No version changes required",
        },
      }

    [0m [90m 305 |[39m         [90m// Assert[39m
     [90m 306 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 307 |[39m         expect(result[33m.[39mvalue)[33m.[39mtoEqual(
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 308 |[39m           expect[33m.[39mobjectContaining({
     [90m 309 |[39m             recoveryExecuted[33m:[39m [36mtrue[39m[33m,[39m
     [90m 310 |[39m             recoveryDetails[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:307:30)

  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_WithVersionConflicts_ShouldResolveAndRestore ‚Ä∫ should resolve version conflicts during recovery process

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 477 |[39m
     [90m 478 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 479 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 480 |[39m         expect(result[33m.[39mvalue[33m.[39mversioningActions)[33m.[39mtoEqual(
     [90m 481 |[39m           expect[33m.[39mobjectContaining({
     [90m 482 |[39m             versionConflictsDetected[33m:[39m [36mtrue[39m[33m,[39m[0m

      at Object.toBe (tests/unit/domain/services/model-recovery-service.test.ts:479:34)

  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_PostRecovery_ShouldEnsureModelIntegrity ‚Ä∫ should validate complete model integrity after recovery

    expect(received).toEqual(expected) // deep equality

    - Expected  - 8
    + Received  + 8

    - ObjectContaining {
    + Object {
        "integrityValidationPassed": true,
    -   "qualityMetrics": ObjectContaining {
    +   "qualityMetrics": Object {
          "dataPreservationRate": 100,
          "integrityScore": 100,
          "performanceImpact": "MINIMAL",
          "recoverySuccessRate": 100,
        },
    -   "validationResults": ObjectContaining {
    -     "businessRuleValidation": ObjectContaining {
    +   "validationResults": Object {
    +     "businessRuleValidation": Object {
            "allRulesSatisfied": true,
            "noViolationsDetected": true,
          },
    -     "dataConsistencyValidation": ObjectContaining {
    +     "dataConsistencyValidation": Object {
            "auditTrailComplete": true,
            "dataConsistent": true,
            "noCorruptionDetected": true,
          },
    -     "dependencyValidation": ObjectContaining {
    +     "dependencyValidation": Object {
            "dependenciesResolved": true,
            "integrityMaintained": true,
            "referencesValid": true,
          },
    -     "modelStateValidation": ObjectContaining {
    +     "modelStateValidation": Object {
            "isValid": true,
            "metadataIntact": true,
    -       "modelNotDeleted": true,
    +       "modelNotDeleted": false,
            "requiredPropertiesPresent": true,
          },
        },
      }

    [0m [90m 657 |[39m         [90m// Assert[39m
     [90m 658 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 659 |[39m         expect(result[33m.[39mvalue)[33m.[39mtoEqual(
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 660 |[39m           expect[33m.[39mobjectContaining({
     [90m 661 |[39m             integrityValidationPassed[33m:[39m [36mtrue[39m[33m,[39m
     [90m 662 |[39m             validationResults[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:659:30)

  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_WithIssues_ShouldIdentifyProblems ‚Ä∫ should identify and report integrity issues post-recovery

    expect(received).toEqual(expected) // deep equality

    - Expected  - 7
    + Received  + 2

    - ObjectContaining {
    -   "dataConsistencyIssues": ObjectContaining {
    -     "inconsistentFields": Array [
    -       "metadata-mismatch-field",
    -     ],
    -   },
    -   "dependencyIssues": ObjectContaining {
    + Object {
    +   "dependencyIssues": Object {
          "brokenReferences": Array [
            "ref-issue-1",
          ],
        },
      }

    [0m [90m 719 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 720 |[39m         expect(result[33m.[39mvalue[33m.[39mintegrityValidationPassed)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 721 |[39m         expect(result[33m.[39mvalue[33m.[39mdetectedIssues)[33m.[39mtoEqual(
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 722 |[39m           expect[33m.[39mobjectContaining({
     [90m 723 |[39m             dependencyIssues[33m:[39m expect[33m.[39mobjectContaining({
     [90m 724 |[39m               brokenReferences[33m:[39m [[32m'ref-issue-1'[39m][33m,[39m[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:721:45)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ RecoveryServiceCoordination_ShouldUseOnlyDomainDependencies ‚Ä∫ should coordinate recovery using only domain services and entities

    expect(received).toBe(expected) // Object.is equality

    Expected: "function"
    Received: "undefined"

    [0m [90m 768 |[39m           expect(dep)[33m.[39mtoBeDefined()[33m;[39m
     [90m 769 |[39m           [90m// Verify these are domain services, not infrastructure implementations[39m
    [31m[1m>[22m[39m[90m 770 |[39m           expect([36mtypeof[39m dep[33m.[39mvalidateDependencyIntegrity)[33m.[39mtoBe([32m'function'[39m)[33m;[39m
     [90m     |[39m                                                          [31m[1m^[22m[39m
     [90m 771 |[39m         })[33m;[39m
     [90m 772 |[39m
     [90m 773 |[39m         [90m// Verify versioning service methods[39m[0m

      at toBe (tests/unit/domain/services/model-recovery-service.test.ts:770:58)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/model-recovery-service.test.ts:767:22)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ DomainEventGeneration_ForRecovery_ShouldFollowEventSourcingPatterns ‚Ä∫ should generate appropriate domain events for recovery operations

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 4

    - ObjectContaining {
    -   "modelId": "recoverable-model-123",
    -   "restoredAt": Any<Date>,
    + Object {
    +   "aggregateId": "recoverable-model-123",
    +   "reason": "Domain event testing",
    +   "restoredAt": "2025-08-28T15:14:13.331Z",
        "restoredBy": "event-tester",
      }

    [0m [90m 805 |[39m         expect(undeletedEvent)[33m.[39mtoBeDefined()[33m;[39m
     [90m 806 |[39m         expect(undeletedEvent[33m.[39maggregateId)[33m.[39mtoBe([32m'recoverable-model-123'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 807 |[39m         expect(undeletedEvent[33m.[39mgetEventData())[33m.[39mtoEqual(
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 808 |[39m           expect[33m.[39mobjectContaining({
     [90m 809 |[39m             modelId[33m:[39m [32m'recoverable-model-123'[39m[33m,[39m
     [90m 810 |[39m             restoredBy[33m:[39m [32m'event-tester'[39m[33m,[39m[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:807:47)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ ErrorHandling_ShouldUseResultPattern ‚Ä∫ should use Result pattern for error handling throughout recovery coordination

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 836 |[39m
     [90m 837 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 838 |[39m         expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 839 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Dependency validation service unavailable'[39m)[33m;[39m
     [90m 840 |[39m         
     [90m 841 |[39m         [90m// Verify no partial state changes occurred[39m[0m

      at Object.toBe (tests/unit/domain/services/model-recovery-service.test.ts:838:34)

FAIL tests/e2e/focused-user-workflows.e2e.test.ts
  ‚óè Console

    console.log
      ‚ö†Ô∏è Model versioning not fully implemented: Author ID is required

      at Object.log (tests/e2e/focused-user-workflows.e2e.test.ts:519:19)

    console.log
      ‚ö†Ô∏è Workflow validation not fully implemented: Failed to validate workflow structure: Cannot read properties of undefined (reading 'values')

      at Object.log (tests/e2e/focused-user-workflows.e2e.test.ts:558:19)

  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ BasicWorkflowCreation_E2E ‚Ä∫ should_ExecuteBasicWorkflowChain_WithExistingUseCases

    expect(received).toBe(expected) // Object.is equality

    Expected: "00000001-0000-4000-8000-000000010000"
    Received: undefined

    [0m [90m 349 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockModelRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 350 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 351 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mmodelId)[33m.[39mtoBe(modelId)[33m;[39m
     [90m     |[39m                                            [31m[1m^[22m[39m
     [90m 352 |[39m
     [90m 353 |[39m         [90m// UC-002: Add Container Node [39m
     [90m 354 |[39m         [36mconst[39m containerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/focused-user-workflows.e2e.test.ts:351:44)

  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyEnforcement_E2E ‚Ä∫ should_PreventInvalidOperations_WithProperErrorMessages

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Valid position coordinates are required"

    [0m [90m 456 |[39m
     [90m 457 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 458 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 459 |[39m
     [90m 460 |[39m         [90m// Test adding action to non-existent container[39m
     [90m 461 |[39m         [36mconst[39m createResult [33m=[39m [36mawait[39m createModelUseCase[33m.[39mexecute({[0m

      at Object.toContain (tests/e2e/focused-user-workflows.e2e.test.ts:458:42)

  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ INTEGRATION WITH EXISTING ARCHITECTURE ‚Ä∫ CleanArchitectureCompliance_E2E ‚Ä∫ should_MaintainArchitecturalBoundaries_ThroughoutWorkflow

    expect(received).toBe(expected) // Object.is equality

    Expected: "00000004-0000-4000-8000-000000040000"
    Received: undefined

    [0m [90m 580 |[39m         [36mconst[39m storedModel [33m=[39m mockModelRepository[33m.[39mgetModel(modelId)[33m;[39m
     [90m 581 |[39m         expect(storedModel)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 582 |[39m         expect(storedModel[33m.[39mmodelId)[33m.[39mtoBe(modelId)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 583 |[39m
     [90m 584 |[39m         [90m// Verify domain events were published (event-driven architecture)[39m
     [90m 585 |[39m         [36mconst[39m events [33m=[39m mockEventBus[33m.[39mgetAllEvents()[33m;[39m[0m

      at Object.toBe (tests/e2e/focused-user-workflows.e2e.test.ts:582:37)

FAIL tests/unit/domain/services/model-versioning-service.test.ts
  ‚óè ModelVersioningService ‚Ä∫ Domain Service Coordination ‚Ä∫ Version Change Analysis ‚Ä∫ analyzeChanges_NodePropertyModification_DetectsSpecificChanges

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 1
    Received array:  ["0000006a-0000-4000-8000-0000006a0000"]

    [0m [90m 933 |[39m         [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 934 |[39m         expect(changes[33m.[39mmodifiedNodes)[33m.[39mtoContain(nodeId[33m.[39mvalue)[33m;[39m
    [31m[1m>[22m[39m[90m 935 |[39m         expect(changes[33m.[39maddedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 936 |[39m         expect(changes[33m.[39mremovedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 937 |[39m       })[33m;[39m
     [90m 938 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/model-versioning-service.test.ts:935:36)

  ‚óè ModelVersioningService ‚Ä∫ Domain Service Coordination ‚Ä∫ Version Change Analysis ‚Ä∫ analyzeChanges_DependencyChanges_CategorizesDependencyModifications

    expect(received).toContain(expected) // indexOf

    Expected value: "00000073-0000-4000-8000-000000730000"
    Received array: []

    [0m [90m 1016 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 1017 |[39m         [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 1018 |[39m         expect(changes[33m.[39mmodifiedNodes)[33m.[39mtoContain(node2Id[33m.[39mvalue)[33m;[39m
     [90m      |[39m                                       [31m[1m^[22m[39m
     [90m 1019 |[39m       })[33m;[39m
     [90m 1020 |[39m
     [90m 1021 |[39m       it([32m'analyzeChanges_MetadataEvolution_TracksMetadataHistory'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/services/model-versioning-service.test.ts:1018:39)

FAIL tests/unit/domain/services/node-context-access-service.test.ts
  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle override rules in context propagation

    TypeError: Cannot read properties of undefined (reading 'constant')

    [0m [90m 326 |[39m         expect(updatedChild)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 327 |[39m         expect(updatedChild[33m.[39mvalue[33m.[39mdata[33m.[39msetting)[33m.[39mtoBe([32m'child-value'[39m)[33m;[39m [90m// Override allowed[39m
    [31m[1m>[22m[39m[90m 328 |[39m         expect(updatedChild[33m.[39mvalue[33m.[39minheritedData[33m.[39mconstant)[33m.[39mtoBe([32m'unchangeable'[39m)[33m;[39m [90m// No override[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 329 |[39m       })[33m;[39m
     [90m 330 |[39m
     [90m 331 |[39m       it([32m'should handle deep context propagation chains'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.constant (tests/unit/domain/services/node-context-access-service.test.ts:328:49)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle deep context propagation chains

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 371 |[39m         [36mconst[39m hierarchicalResult [33m=[39m contextService[33m.[39mgetHierarchicalContext(childNodeId)[33m;[39m
     [90m 372 |[39m         expect(hierarchicalResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 373 |[39m         expect(hierarchicalResult[33m.[39mvalue[33m.[39mlevels)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 374 |[39m       })[33m;[39m
     [90m 375 |[39m
     [90m 376 |[39m       it([32m'should reject propagation from non-existent context'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:373:49)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return complete hierarchical context

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 421 |[39m         [36mconst[39m hierarchical [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 422 |[39m         expect(hierarchical[33m.[39mnodeId)[33m.[39mtoEqual(childNodeId)[33m;[39m
    [31m[1m>[22m[39m[90m 423 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 424 |[39m         
     [90m 425 |[39m         [90m// Verify level order (child -> parent -> grandparent)[39m
     [90m 426 |[39m         expect(hierarchical[33m.[39mlevels[[35m0[39m][33m.[39mscope)[33m.[39mtoBe([32m'execution'[39m)[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:423:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return single level for nodes without parents

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 447 |[39m         expect(hierarchicalResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 448 |[39m         [36mconst[39m hierarchical [33m=[39m hierarchicalResult[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 449 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 450 |[39m         expect(hierarchical[33m.[39mlevels[[35m0[39m][33m.[39mdata[33m.[39mstandalone)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 451 |[39m       })[33m;[39m
     [90m 452 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:449:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should handle deep hierarchies efficiently

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 477 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 478 |[39m         [36mconst[39m hierarchical [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 479 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 480 |[39m         expect(hierarchical[33m.[39mtotalLevels)[33m.[39mtoBe([35m5[39m)[33m;[39m
     [90m 481 |[39m         expect(hierarchical[33m.[39mmaxDepthReached)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 482 |[39m       })[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:479:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should reject hierarchical request for non-existent node

    expect(received).toContain(expected) // indexOf

    Expected substring: "Context not found"
    Received string:    "Node context not found"

    [0m [90m 488 |[39m         [90m// Assert[39m
     [90m 489 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 490 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Context not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 491 |[39m       })[33m;[39m
     [90m 492 |[39m     })[33m;[39m
     [90m 493 |[39m   })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:490:30)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate read access successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 515 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 516 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 517 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 518 |[39m         expect(access[33m.[39mlevel)[33m.[39mtoBe([32m'read'[39m)[33m;[39m
     [90m 519 |[39m         expect(access[33m.[39maccessibleProperties)[33m.[39mtoContain([32m'public'[39m)[33m;[39m
     [90m 520 |[39m         expect(access[33m.[39mrestrictedProperties)[33m.[39mnot[33m.[39mtoContain([32m'public'[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:517:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate write access with proper permissions

    TypeError: Cannot set properties of undefined (setting 'accessLevel')

    [0m [90m 531 |[39m
     [90m 532 |[39m         [90m// Update context to have write access level[39m
    [31m[1m>[22m[39m[90m 533 |[39m         (contextService [36mas[39m any)[33m.[39mcontexts[33m.[39m[36mget[39m(parentNodeId[33m.[39mtoString())[33m.[39maccessLevel [33m=[39m [32m'read-write'[39m[33m;[39m
     [90m     |[39m                                                                                  [31m[1m^[22m[39m
     [90m 534 |[39m
     [90m 535 |[39m         [90m// Act[39m
     [90m 536 |[39m         [36mconst[39m validation [33m=[39m contextService[33m.[39mvalidateContextAccess([0m

      at Object.<anonymous> (tests/unit/domain/services/node-context-access-service.test.ts:533:82)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should deny access for insufficient permissions

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 568 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 569 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 570 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 571 |[39m         expect(access[33m.[39mdenialReason)[33m.[39mtoContain([32m'Insufficient permissions'[39m)[33m;[39m
     [90m 572 |[39m       })[33m;[39m
     [90m 573 |[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:570:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should handle cross-node access validation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 600 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 601 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 602 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// Child should have read access to parent[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 603 |[39m         expect(access[33m.[39minheritanceAllowed)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 604 |[39m       })[33m;[39m
     [90m 605 |[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:602:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate property-level access controls

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

    [0m [90m 628 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 629 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 630 |[39m         expect(access[33m.[39maccessibleProperties)[33m.[39mtoContain([32m'public'[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 631 |[39m         [90m// protected and private access depends on relationship and permissions[39m
     [90m 632 |[39m       })[33m;[39m
     [90m 633 |[39m     })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:630:45)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should clone context scope successfully

    Expected [object Object] to be a successful Result

    [0m [90m 667 |[39m           nested[33m:[39m { value[33m:[39m [35m99[39m } 
     [90m 668 |[39m         })[33m;[39m
    [31m[1m>[22m[39m[90m 669 |[39m         expect(updateResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 670 |[39m         
     [90m 671 |[39m         [36mconst[39m originalContext [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m
     [90m 672 |[39m         expect(originalContext)[33m.[39mtoBeValidResult()[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:669:30)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should handle cloning with transformation rules

    TypeError: transformationRules is not iterable

    [0m [90m 837 |[39m     [90m// Apply transformation rules if provided[39m
     [90m 838 |[39m     [36mif[39m (transformationRules) {
    [31m[1m>[22m[39m[90m 839 |[39m       [36mfor[39m ([36mconst[39m rule [36mof[39m transformationRules) {
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 840 |[39m         [36mif[39m (rule[33m.[39minheritanceType [33m===[39m [32m'override'[39m [33m&&[39m rule[33m.[39mdefaultValue [33m!==[39m undefined) {
     [90m 841 |[39m           clonedData[rule[33m.[39mpropertyName] [33m=[39m rule[33m.[39mdefaultValue[33m;[39m
     [90m 842 |[39m         }[0m

      at NodeContextAccessService.transformationRules [as cloneContextScope] (lib/domain/services/node-context-access-service.ts:839:26)
      at Object.cloneContextScope (tests/unit/domain/services/node-context-access-service.test.ts:690:44)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merge conflicts with precedence rules

    TypeError: precedenceRules.map is not a function

    [0m [90m 872 |[39m     
     [90m 873 |[39m     [36mif[39m (precedenceRules) {
    [31m[1m>[22m[39m[90m 874 |[39m       [36mconst[39m priorityMap [33m=[39m [36mnew[39m [33mMap[39m(precedenceRules[33m.[39mmap(rule [33m=>[39m [rule[33m.[39mcontextId[33m,[39m rule[33m.[39mpriority]))[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 875 |[39m       [36mconst[39m sortedContexts [33m=[39m sourceContexts[33m.[39msort((a[33m,[39m b) [33m=>[39m {
     [90m 876 |[39m         [36mconst[39m priorityA [33m=[39m priorityMap[33m.[39m[36mget[39m(a[33m.[39mcontextId) [33m?[39m[33m?[39m [35m0[39m[33m;[39m
     [90m 877 |[39m         [36mconst[39m priorityB [33m=[39m priorityMap[33m.[39m[36mget[39m(b[33m.[39mcontextId) [33m?[39m[33m?[39m [35m0[39m[33m;[39m[0m

      at NodeContextAccessService.map [as mergeContextScopes] (lib/domain/services/node-context-access-service.ts:874:51)
      at Object.mergeContextScopes (tests/unit/domain/services/node-context-access-service.test.ts:784:44)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merging with non-existent contexts

    expect(received).toContain(expected) // indexOf

    Expected substring: "One or more source contexts not found"
    Received string:    "No valid source contexts found"

    [0m [90m 828 |[39m         [90m// Assert[39m
     [90m 829 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 830 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'One or more source contexts not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 831 |[39m       })[33m;[39m
     [90m 832 |[39m     })[33m;[39m
     [90m 833 |[39m   })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:830:30)

  ‚óè NodeContextAccessService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle circular reference prevention

    Expected [object Object] to be a failed Result

    [0m [90m 881 |[39m
     [90m 882 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 883 |[39m       expect(circularResult)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 884 |[39m       expect(circularResult[33m.[39merror)[33m.[39mtoContain([32m'Circular reference detected'[39m)[33m;[39m
     [90m 885 |[39m     })[33m;[39m
     [90m 886 |[39m[0m

      at Object.toBeFailureResult (tests/unit/domain/services/node-context-access-service.test.ts:883:30)

  ‚óè NodeContextAccessService ‚Ä∫ error handling and edge cases ‚Ä∫ should maintain context isolation between different scopes

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 971 |[39m       [90m// Assert - Isolated scope should restrict access[39m
     [90m 972 |[39m       expect(crossAccessValidation)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 973 |[39m       expect(crossAccessValidation[33m.[39mvalue[33m.[39mgranted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 974 |[39m     })[33m;[39m
     [90m 975 |[39m   })[33m;[39m
     [90m 976 |[39m })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:973:51)

FAIL tests/unit/domain/services/node-dependency-service-uc010.test.ts
  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Execution Order Optimization and Calculation ‚Ä∫ Parallel Execution Path Optimization ‚Ä∫ should identify critical path for execution time estimation

    expect(received).toHaveLength(expected)

    Expected length: 6
    Received length: 7
    Received array:  ["8364a797-bda8-4bc2-88ec-c2c55410d335", "3a5db9a2-9218-4d8b-8857-ba5bd7cc75d7", "a3fe8f04-4e67-4f0c-8812-664ff8f265ce", "a6909d14-f0bd-4fa0-8862-df2b4974e0cb", "66edd6a5-8225-4549-881b-37bc14e9136b", "8fd6c4f1-0711-4b9f-8877-38209296e7e0", "f4287d78-4852-446d-8843-8516eb3c7b11"]

    [0m [90m 720 |[39m         
     [90m 721 |[39m         [90m// Critical path should be the longest path (through slow nodes)[39m
    [31m[1m>[22m[39m[90m 722 |[39m         expect(criticalPath)[33m.[39mtoHaveLength([35m6[39m)[33m;[39m [90m// start -> slowA -> slowB -> slowC -> slowD -> slowEnd[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 723 |[39m         expect(criticalPath)[33m.[39mtoContain(start[33m.[39mnodeId[33m.[39mtoString())[33m;[39m
     [90m 724 |[39m         expect(criticalPath)[33m.[39mtoContain(slowA[33m.[39mnodeId[33m.[39mtoString())[33m;[39m
     [90m 725 |[39m         expect(criticalPath)[33m.[39mtoContain(slowB[33m.[39mnodeId[33m.[39mtoString())[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-dependency-service-uc010.test.ts:722:30)

  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Execution Order Optimization and Calculation ‚Ä∫ Parallel Execution Path Optimization ‚Ä∫ should handle execution priority metadata for path optimization

    expect(received).toBe(expected) // Object.is equality

    Expected: "high-priority"
    Received: "fc1e788d-56b6-4197-8855-5736e652d52a"

    [0m [90m 772 |[39m         
     [90m 773 |[39m         [90m// Verify priority ordering within the same level[39m
    [31m[1m>[22m[39m[90m 774 |[39m         expect(parallelPaths[[35m0[39m][33m.[39mnodeId)[33m.[39mtoBe([32m'high-priority'[39m)[33m;[39m [90m// Highest priority first[39m
     [90m     |[39m                                         [31m[1m^[22m[39m
     [90m 775 |[39m         expect(parallelPaths[[35m1[39m][33m.[39mnodeId)[33m.[39mtoBe([32m'medium-priority'[39m)[33m;[39m
     [90m 776 |[39m         expect(parallelPaths[[35m2[39m][33m.[39mnodeId)[33m.[39mtoBe([32m'low-priority'[39m)[33m;[39m [90m// Lowest priority last[39m
     [90m 777 |[39m         [0m

      at Object.toBe (tests/unit/domain/services/node-dependency-service-uc010.test.ts:774:41)

  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Execution Order Optimization and Calculation ‚Ä∫ Large-Scale Optimization Performance ‚Ä∫ should efficiently calculate execution order for enterprise-scale graphs

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 839 |[39m             [90m// Nodes at levels > 0 should be able to parallel within their level[39m
     [90m 840 |[39m             [36mif[39m (levelIndex [33m>[39m [35m0[39m) {
    [31m[1m>[22m[39m[90m 841 |[39m               expect(path[33m?[39m[33m.[39mcanExecuteInParallel)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                                  [31m[1m^[22m[39m
     [90m 842 |[39m             }
     [90m 843 |[39m           })[33m;[39m
     [90m 844 |[39m         })[33m;[39m[0m

      at toBe (tests/unit/domain/services/node-dependency-service-uc010.test.ts:841:50)
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/node-dependency-service-uc010.test.ts:835:22)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/node-dependency-service-uc010.test.ts:834:26)

  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Clean Architecture Compliance with Complex Algorithms ‚Ä∫ Domain Service Boundary Validation ‚Ä∫ should maintain Clean Architecture principles during complex graph operations

    Expected [object Object] to be a successful Result

    [0m [90m 894 |[39m         expect(pathsResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 895 |[39m         expect(criticalResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 896 |[39m         expect(reachableResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                                 [31m[1m^[22m[39m
     [90m 897 |[39m         
     [90m 898 |[39m         [90m// Verify service returns domain objects and value objects only[39m
     [90m 899 |[39m         expect(graphResult[33m.[39mvalue[33m.[39mnodes)[33m.[39mtoBeInstanceOf([33mMap[39m)[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-dependency-service-uc010.test.ts:896:33)

  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Clean Architecture Compliance with Complex Algorithms ‚Ä∫ Domain Service Boundary Validation ‚Ä∫ should handle domain validation rules consistently across all operations

    Expected [object Object] to be a failed Result

    [0m [90m 959 |[39m         invalidNode[33m.[39maddDependency([32m'non-existent-node'[39m)[33m;[39m
     [90m 960 |[39m         [36mconst[39m invalidResult [33m=[39m dependencyService[33m.[39mbuildDependencyGraph([invalidNode])[33m;[39m
    [31m[1m>[22m[39m[90m 961 |[39m         expect(invalidResult)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 962 |[39m         expect(invalidResult[33m.[39merror)[33m.[39mtoContain([32m'references non-existent dependency'[39m)[33m;[39m
     [90m 963 |[39m
     [90m 964 |[39m         [90m// Act & Assert - Service should handle all validation consistently[39m[0m

      at Object.toBeFailureResult (tests/unit/domain/services/node-dependency-service-uc010.test.ts:961:31)

FAIL tests/e2e/comprehensive-user-workflows.e2e.test.ts
  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 522 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 523 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 524 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe(workflowName)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 525 |[39m
     [90m 526 |[39m         [90m// UC-002: Add Container Node (must create model before adding nodes)[39m
     [90m 527 |[39m         [36mconst[39m addContainerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/comprehensive-user-workflows.e2e.test.ts:524:40)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Node name is required"

    [0m [90m 619 |[39m         [90m// Assert: Dependency violation should be caught[39m
     [90m 620 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 621 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 622 |[39m
     [90m 623 |[39m         [90m// Verify no side effects occurred[39m
     [90m 624 |[39m         [36mconst[39m auditLogs [33m=[39m [36mawait[39m mockAuditRepository[33m.[39mfindByModelId(nonExistentModelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:621:42)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution

    expect(received).toContain(expected) // indexOf

    Expected substring: "must be published"
    Received string:    "Valid environment is required (development, staging, production)"

    [0m [90m 648 |[39m         [90m// Assert: Execution should fail due to publication prerequisite[39m
     [90m 649 |[39m         expect(executeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 650 |[39m         expect(executeResult[33m.[39merror)[33m.[39mtoContain([32m'must be published'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 651 |[39m
     [90m 652 |[39m         [90m// Verify model status is still DRAFT[39m
     [90m 653 |[39m         [36mconst[39m model [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:650:37)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ WorkflowVersioning_E2E ‚Ä∫ should_CreateNewVersion_AfterSuccessfulExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:679:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_CoordinateComplexExecution_WithMultipleOrchestrationServices

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:743:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_HandleCascadingFailures_InComplexPipeline

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:890:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_ExecuteCompleteAIAgentWorkflow_WithRegistrationDiscoveryExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:966:45)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_HandleAgentFailures_WithGracefulDegradation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1144 |[39m         })[33m;[39m
     [90m 1145 |[39m
    [31m[1m>[22m[39m[90m 1146 |[39m         expect(errorHandlingResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                               [31m[1m^[22m[39m
     [90m 1147 |[39m
     [90m 1148 |[39m         [90m// Act: Execute with agent failure simulation[39m
     [90m 1149 |[39m         [36mconst[39m containerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1146:47)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_IntegrateAcrossFeaturesWithLinkStrengthCalculation

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1209:55)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_PropagateErrorsAcrossCrossFeatureLinks

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1353:49)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Error Recovery Across Dependency Boundaries ‚Ä∫ SystemWideRecovery_E2E ‚Ä∫ should_RecoverFromComplexFailureScenarios_AcrossMultipleLayers

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1490:51)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ All Application Services Integration ‚Ä∫ CompleteSystemIntegration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InComplexWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1654:61)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Real User Scenarios with Actual Data Flows ‚Ä∫ ProductionLikeWorkflows_E2E ‚Ä∫ should_ExecuteRealisticBusinessWorkflow_WithActualDataTransformations

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:2077:52)

FAIL tests/e2e/complete-user-workflow-scenarios.e2e.test.ts
  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteModelLifecycleWorkflow_E2E ‚Ä∫ should_ExecuteCompleteModelLifecycle_FromCreationToArchival

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 687 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockModelRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 688 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 689 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe([32m'Complete Lifecycle Model'[39m)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 690 |[39m
     [90m 691 |[39m         [90m// PHASE 2: UC-002 - Add Container Node (IO Input)[39m
     [90m 692 |[39m         [36mconst[39m inputNodeResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:689:40)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyViolationHandling_E2E ‚Ä∫ should_PreventDependencyViolations_AndMaintainSystemIntegrity

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Valid position coordinates are required"

    [0m [90m 881 |[39m
     [90m 882 |[39m         expect(addNodeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 883 |[39m         expect(addNodeResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 884 |[39m
     [90m 885 |[39m         [90m// Test UC-003 dependency violation (add action to non-existent container)[39m
     [90m 886 |[39m         [36mconst[39m createResult [33m=[39m [36mawait[39m createModelUseCase[33m.[39mexecute({[0m

      at Object.toContain (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:883:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ComplexOrchestrationWorkflow_E2E ‚Ä∫ should_CoordinateAllOrchestrationServices_InComplexExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:954:49)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ErrorRecoveryInComplexPipeline_E2E ‚Ä∫ should_RecoverFromFailures_AcrossComplexOrchestrationLayers

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1168:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ CompleteAgentWorkflow_E2E ‚Ä∫ should_ExecuteCompleteAgentWorkflow_FromRegistrationToExecution

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1263 |[39m         })[33m;[39m
     [90m 1264 |[39m
    [31m[1m>[22m[39m[90m 1265 |[39m         expect(agent1Registration[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                              [31m[1m^[22m[39m
     [90m 1266 |[39m         expect(agent1Registration[33m.[39mvalue[33m.[39magentId)[33m.[39mtoBe([32m'test-agent-processing'[39m)[33m;[39m
     [90m 1267 |[39m
     [90m 1268 |[39m         [36mconst[39m agent2Registration [33m=[39m [36mawait[39m registerAgentUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1265:46)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AgentIntegrationWithModels_E2E ‚Ä∫ should_IntegrateAgents_WithCompleteModelWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1421:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ CROSS-FEATURE INTEGRATION: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CompleteCrossFeatureWorkflow_E2E ‚Ä∫ should_ExecuteCompleteCrossFeatureIntegration_WithLinkingAndExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1495:55)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ APPLICATION SERVICES COORDINATION ‚Ä∫ CompleteServiceOrchestration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InCompleteWorkflow

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1742 |[39m         })[33m;[39m
     [90m 1743 |[39m
    [31m[1m>[22m[39m[90m 1744 |[39m         expect(modelManagementResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                                 [31m[1m^[22m[39m
     [90m 1745 |[39m         [36mconst[39m orchestrationModelId [33m=[39m modelManagementResult[33m.[39mvalue[33m.[39mmodelId[33m;[39m
     [90m 1746 |[39m
     [90m 1747 |[39m         [90m// PHASE 2: AI Agent Management Service coordination[39m[0m

      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1744:49)

FAIL tests/e2e/primary-workflow-chain.e2e.test.ts
  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 336 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 337 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 338 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe(workflowName)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 339 |[39m
     [90m 340 |[39m         [90m// UC-002: Add Container Node (must create model before adding nodes)[39m
     [90m 341 |[39m         [36mconst[39m addContainerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/primary-workflow-chain.e2e.test.ts:338:40)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Invalid node type specified"

    [0m [90m 428 |[39m         [90m// Assert: Dependency violation should be caught[39m
     [90m 429 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 430 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 431 |[39m
     [90m 432 |[39m         [90m// Verify no side effects occurred[39m
     [90m 433 |[39m         [36mconst[39m auditLogs [33m=[39m [36mawait[39m mockAuditRepository[33m.[39mfindByModelId(nonExistentModelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:430:42)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution

    expect(received).toContain(expected) // indexOf

    Expected substring: "must be published"
    Received string:    "Valid environment is required (development, staging, production)"

    [0m [90m 457 |[39m         [90m// Assert: Execution should fail due to publication prerequisite[39m
     [90m 458 |[39m         expect(executeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 459 |[39m         expect(executeResult[33m.[39merror)[33m.[39mtoContain([32m'must be published'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 460 |[39m
     [90m 461 |[39m         [90m// Verify model status is still DRAFT[39m
     [90m 462 |[39m         [36mconst[39m model [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:459:37)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ValidateWorkflowStructure_BeforePublishing

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 485 |[39m
     [90m 486 |[39m         [90m// Assert: Validation should fail for empty workflow[39m
    [31m[1m>[22m[39m[90m 487 |[39m         expect(validateResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// The operation succeeds[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 488 |[39m         expect(validateResult[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m [90m// But validation reports invalid[39m
     [90m 489 |[39m
     [90m 490 |[39m         [90m// Try to publish with validation enforcement[39m[0m

      at Object.toBe (tests/e2e/primary-workflow-chain.e2e.test.ts:487:42)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_HandleComplexWorkflow_WithMultipleNodesAndActions

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:549:47)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ ErrorRecovery_E2E ‚Ä∫ should_RecoverFromTransientFailures_DuringExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:640:37)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Architectural Compliance Validation ‚Ä∫ CleanArchitectureCompliance_E2E ‚Ä∫ should_MaintainLayerSeparation_ThroughoutWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:702:41)

FAIL tests/unit/domain/entities/function-model-archive.test.ts
  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should set status to ARCHIVED when soft deleting

    expect(received).toBe(expected) // Object.is equality

    Expected: "archived"
    Received: "draft"

    [0m [90m 262 |[39m       [90m// Assert[39m
     [90m 263 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 264 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mARCHIVED[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 265 |[39m       expect(model[33m.[39misDeleted())[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 266 |[39m       expect(model[33m.[39mdeletedAt)[33m.[39mtoBeDefined()[33m;[39m
     [90m 267 |[39m       expect(model[33m.[39mdeletedBy)[33m.[39mtoBe([32m'test-user'[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:264:28)

  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should handle soft delete without deletedBy parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: "archived"
    Received: "draft"

    [0m [90m 274 |[39m       [90m// Assert[39m
     [90m 275 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 276 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mARCHIVED[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 277 |[39m       expect(model[33m.[39misDeleted())[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 278 |[39m       expect(model[33m.[39mdeletedAt)[33m.[39mtoBeDefined()[33m;[39m
     [90m 279 |[39m       expect(model[33m.[39mdeletedBy)[33m.[39mtoBeUndefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:276:28)

FAIL tests/unit/domain/use-cases/archive-function-model-use-case.test.ts
  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Successful Archive Operations ‚Ä∫ should successfully archive a DRAFT model

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

    [0m [90m 128 |[39m
     [90m 129 |[39m       expect(mockRepository[33m.[39msave)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 130 |[39m       expect(mockEventBus[33m.[39mpublish)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 131 |[39m       
     [90m 132 |[39m       [90m// Verify event data[39m
     [90m 133 |[39m       [36mconst[39m publishCall [33m=[39m mockEventBus[33m.[39mpublish[33m.[39mmock[33m.[39mcalls[[35m0[39m][[35m0[39m][33m;[39m[0m

      at Object.toHaveBeenCalledTimes (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:130:36)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Successful Archive Operations ‚Ä∫ should successfully archive a PUBLISHED model with warnings

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 139 |[39m       [90m// Arrange - publish the model first[39m
     [90m 140 |[39m       [36mconst[39m publishResult [33m=[39m testModel[33m.[39mpublish()[33m;[39m
    [31m[1m>[22m[39m[90m 141 |[39m       expect(publishResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 142 |[39m
     [90m 143 |[39m       [36mconst[39m command[33m:[39m [33mArchiveModelCommand[39m [33m=[39m {
     [90m 144 |[39m         modelId[33m:[39m [32m'test-archive-model-id'[39m[33m,[39m[0m

      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:141:39)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Dependency Validation and Risk Assessment ‚Ä∫ should block archive when circular dependencies exist

    expect(received).toContain(expected) // indexOf

    Expected substring: "blocking dependencies"
    Received string:    "Pre-archive validation failed: Cannot read properties of undefined (reading 'length')"

    [0m [90m 311 |[39m       [90m// Assert[39m
     [90m 312 |[39m       expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 313 |[39m       expect(result[33m.[39merror)[33m.[39mtoContain([32m'blocking dependencies'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 314 |[39m       expect(result[33m.[39merror)[33m.[39mtoContain([32m'Circular dependency detected'[39m)[33m;[39m
     [90m 315 |[39m     })[33m;[39m
     [90m 316 |[39m[0m

      at Object.toContain (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:313:28)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Dependency Validation and Risk Assessment ‚Ä∫ should assess high risk and block when enforceRiskAssessment is true

    expect(received).toContain(expected) // indexOf

    Expected substring: "High-risk archival blocked by policy"
    Received string:    "Failed to archive function model: Cannot read properties of undefined (reading 'isFailure')"

    [0m [90m 345 |[39m       [90m// Assert[39m
     [90m 346 |[39m       expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 347 |[39m       expect(result[33m.[39merror)[33m.[39mtoContain([32m'High-risk archival blocked by policy'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 348 |[39m     })[33m;[39m
     [90m 349 |[39m
     [90m 350 |[39m     it([32m'should allow high risk archival when enforceRiskAssessment is false'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:347:28)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Event Publishing and Audit Trail ‚Ä∫ should publish ModelArchived event with complete audit data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 469 |[39m
     [90m 470 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 471 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 472 |[39m       expect(mockEventBus[33m.[39mpublish)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
     [90m 473 |[39m       
     [90m 474 |[39m       [36mconst[39m eventCall [33m=[39m mockEventBus[33m.[39mpublish[33m.[39mmock[33m.[39mcalls[[35m0[39m][[35m0[39m][33m;[39m[0m

      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:471:32)

FAIL tests/unit/domain/services/action-node-orchestration-service.test.ts
  ‚óè ActionNodeOrchestrationService ‚Ä∫ action orchestration planning ‚Ä∫ orchestrateNodeActions ‚Ä∫ should propagate context to all actions

    expect(received).toEqual(expected) // deep equality

    Expected: {"executionId": "test-exec", "parameters": {"environment": "test", "userId": "user-123"}}
    Received: undefined

    [0m [90m 131 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 132 |[39m         expect(result[33m.[39mvalue[33m.[39mcontextPropagation)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 133 |[39m         expect(result[33m.[39mvalue[33m.[39mcontextPropagation[[32m'test-exec'[39m])[33m.[39mtoEqual(context)[33m;[39m
     [90m     |[39m                                                              [31m[1m^[22m[39m
     [90m 134 |[39m       })[33m;[39m
     [90m 135 |[39m     })[33m;[39m
     [90m 136 |[39m[0m

      at Object.toEqual (tests/unit/domain/services/action-node-orchestration-service.test.ts:133:62)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should coordinate parallel actions successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "parallel-group-1"
    Received: undefined

    [0m [90m 250 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 251 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 252 |[39m         expect(parallelResult[33m.[39mgroupId)[33m.[39mtoBe([32m'parallel-group-1'[39m)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 253 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 254 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 255 |[39m         expect(parallelResult[33m.[39mtotalExecutionTime)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:252:40)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should respect max concurrency limits

    expect(received).toBe(expected) // Object.is equality

    Expected: 5
    Received: undefined

    [0m [90m 286 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 287 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 288 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m5[39m)[33m;[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 289 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 290 |[39m         expect(parallelResult[33m.[39mconcurrencyRespected)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 291 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:288:48)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle parallel execution failures with different strategies

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 326 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 327 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 328 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m [90m// Both attempted[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 329 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// One failed[39m
     [90m 330 |[39m         
     [90m 331 |[39m         [90m// Cleanup[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:328:48)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle empty parallel group

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 348 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 349 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 350 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 351 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 352 |[39m       })[33m;[39m
     [90m 353 |[39m     })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:350:48)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should execute actions sequentially in order

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 385 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 386 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 387 |[39m         expect(sequentialResult[33m.[39mtotalActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 388 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 389 |[39m         expect(sequentialResult[33m.[39mfailurePoint)[33m.[39mtoBeUndefined()[33m;[39m
     [90m 390 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([[32m'First Sequential'[39m[33m,[39m [32m'Second Sequential'[39m])[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:387:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should stop on first failure in sequential execution

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 432 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 433 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 434 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 435 |[39m         expect(sequentialResult[33m.[39mfailurePoint)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// Failed at second action (index 1)[39m
     [90m 436 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([[32m'Good Action'[39m[33m,[39m [32m'Bad Action'[39m])[33m;[39m
     [90m 437 |[39m         [0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:434:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should pass context between sequential actions

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 467 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 468 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 469 |[39m         expect(sequentialResult[33m.[39mcontextChain)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 470 |[39m         expect(sequentialResult[33m.[39mcontextChain)[33m.[39mtoHaveLength([35m2[39m)[33m;[39m
     [90m 471 |[39m       })[33m;[39m
     [90m 472 |[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:469:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should handle empty sequential actions

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 478 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 479 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 480 |[39m         expect(sequentialResult[33m.[39mtotalActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 481 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 482 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([])[33m;[39m
     [90m 483 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:480:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should evaluate and execute conditional actions based on criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 513 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 514 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 515 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 516 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 517 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 518 |[39m         expect(conditionalResult[33m.[39mevaluationResults)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:515:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should skip conditional actions when conditions not met

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 545 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 546 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 547 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 548 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 549 |[39m         expect(conditionalResult[33m.[39mevaluationResults[[35m0[39m][33m.[39mexecuted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 550 |[39m         expect(conditionalResult[33m.[39mevaluationResults[[35m0[39m][33m.[39mskipReason)[33m.[39mtoBeDefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:547:51)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle complex conditional logic

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: undefined

    [0m [90m 591 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 592 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 593 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m3[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 594 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 595 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 596 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:593:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle empty conditional evaluations

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 603 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 604 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 605 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 606 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 607 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 608 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:605:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle action failures with retry strategy

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 636 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 637 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 638 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 639 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 640 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 641 |[39m         expect(failureResult[33m.[39mrecoveryActions)[33m.[39mtoBeDefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:638:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should escalate failures after max retries exceeded

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 664 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 665 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 666 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 667 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 668 |[39m         expect(failureResult[33m.[39mescalatedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 669 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:666:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle multiple failure types simultaneously

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 695 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 696 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 697 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 698 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 699 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 700 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:697:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle empty failures array

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 707 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 708 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 709 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 710 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 711 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 712 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:709:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should validate action dependencies successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 741 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 742 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 743 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 744 |[39m         expect(validation[33m.[39mcircularDependencies)[33m.[39mtoEqual([])[33m;[39m
     [90m 745 |[39m         expect(validation[33m.[39munresolvedDependencies)[33m.[39mtoEqual([])[33m;[39m
     [90m 746 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:743:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect circular dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 772 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 773 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 774 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 775 |[39m         expect(validation[33m.[39mcircularDependencies)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m 776 |[39m         expect(validation[33m.[39mcircularDependencies[[35m0[39m])[33m.[39mtoContain(action1[33m.[39mactionId[33m.[39mtoString())[33m;[39m
     [90m 777 |[39m         expect(validation[33m.[39mcircularDependencies[[35m0[39m])[33m.[39mtoContain(action2[33m.[39mactionId[33m.[39mtoString())[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:774:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect unresolved dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 797 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 798 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 799 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 800 |[39m         expect(validation[33m.[39munresolvedDependencies)[33m.[39mtoContain(nonExistentActionId[33m.[39mtoString())[33m;[39m
     [90m 801 |[39m       })[33m;[39m
     [90m 802 |[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:799:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should handle empty dependencies gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 813 |[39m         [90m// Assert[39m
     [90m 814 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 815 |[39m         expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 816 |[39m       })[33m;[39m
     [90m 817 |[39m     })[33m;[39m
     [90m 818 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:815:38)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should monitor action progress successfully

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 841 |[39m         expect(progressResult[33m.[39mcompletedActions)[33m.[39mtoBeDefined()[33m;[39m
     [90m 842 |[39m         expect(progressResult[33m.[39minProgressActions)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 843 |[39m         expect(progressResult[33m.[39mfailedActions)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 844 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeGreaterThanOrEqual([35m0[39m)[33m;[39m
     [90m 845 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeLessThanOrEqual([35m100[39m)[33m;[39m
     [90m 846 |[39m       })[33m;[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:843:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should calculate accurate progress percentages

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

    [0m [90m 880 |[39m         [36mconst[39m progressResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 881 |[39m         expect(progressResult[33m.[39mtotalActions)[33m.[39mtoBe([35m3[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 882 |[39m         expect(progressResult[33m.[39mcompletedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 883 |[39m         expect(progressResult[33m.[39minProgressActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 884 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeCloseTo([35m33.33[39m[33m,[39m [35m1[39m)[33m;[39m [90m// 1/3 completed[39m
     [90m 885 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:882:49)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle malformed actions gracefully

    TypeError: Cannot set property actionId of #<ActionNode> which has only a getter

    [0m [90m 907 |[39m       
     [90m 908 |[39m       [90m// Corrupt the action by clearing critical properties[39m
    [31m[1m>[22m[39m[90m 909 |[39m       (malformedAction [36mas[39m any)[33m.[39mactionId [33m=[39m [36mnull[39m[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 910 |[39m       
     [90m 911 |[39m       [90m// Act[39m
     [90m 912 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m orchestrationService[33m.[39morchestrateNodeActions([malformedAction][33m,[39m {})[33m;[39m[0m

      at Object.<anonymous> (tests/unit/domain/services/action-node-orchestration-service.test.ts:909:40)

FAIL tests/unit/domain/services/model-archive-dependency-validation.test.ts
  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should validate no circular dependencies exist before archiving

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 70 |[39m
     [90m 71 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 72 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m    |[39m                               [31m[1m^[22m[39m
     [90m 73 |[39m       expect(nodeC[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 74 |[39m
     [90m 75 |[39m       [36mconst[39m nodes [33m=[39m [nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue[33m,[39m nodeC[33m.[39mvalue][33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:72:31)

  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should detect circular dependencies that prevent safe archiving

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 118 |[39m       })[33m;[39m
     [90m 119 |[39m
    [31m[1m>[22m[39m[90m 120 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 121 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 122 |[39m
     [90m 123 |[39m       [36mconst[39m nodes [33m=[39m [nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue][33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:120:31)

  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should calculate execution order for safe archival documentation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 185 |[39m
     [90m 186 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 187 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 188 |[39m       expect(nodeC[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 189 |[39m
     [90m 190 |[39m       [36mconst[39m nodes [33m=[39m [nodeC[33m.[39mvalue[33m,[39m nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue][33m;[39m [90m// Intentionally unordered[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:187:31)

  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should validate dependency graph structure for archival integrity

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 243 |[39m
     [90m 244 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 245 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 246 |[39m
     [90m 247 |[39m       [36mconst[39m nodes [33m=[39m [nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue][33m;[39m
     [90m 248 |[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:245:31)

  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should detect orphaned nodes before archival to ensure data completeness

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 309 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 310 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 311 |[39m       expect(nodeOrphan[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 312 |[39m
     [90m 313 |[39m       [36mconst[39m nodes [33m=[39m [nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue[33m,[39m nodeOrphan[33m.[39mvalue][33m;[39m
     [90m 314 |[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:311:36)

FAIL tests/unit/domain/services/model-version-change-detection.test.ts
  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_SingleNewNode_IdentifiesAddition

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:120:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_MultipleNewNodes_IdentifiesAllAdditions

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:143:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_DifferentNodeTypes_CategorizesByType

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:169:27)

  ‚óè Model Version Change Detection ‚Ä∫ Node Removal Detection ‚Ä∫ detectNodeRemovals_SingleRemovedNode_IdentifiesRemoval

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:196:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Removal Detection ‚Ä∫ detectNodeRemovals_CriticalNodeRemoval_IdentifiesImpact

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:220:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Property Modification Detection ‚Ä∫ detectPropertyChanges_MetadataEvolution_TracksMetadataChanges

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:386:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Property Modification Detection ‚Ä∫ detectPropertyChanges_DependencyModification_IdentifiesDependencyChanges

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:407:25)

  ‚óè Model Version Change Detection ‚Ä∫ Complex Change Scenarios ‚Ä∫ detectComplexChanges_MultipleChangeTypes_CategorizeCorrectly

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:434:25)

  ‚óè Model Version Change Detection ‚Ä∫ Complex Change Scenarios ‚Ä∫ detectComplexChanges_WorkflowRestructuring_IdentifiesStructuralChanges

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:466:27)

  ‚óè Model Version Change Detection ‚Ä∫ Change Analysis Performance ‚Ä∫ analyzeChanges_LargeModel_CompletesWithinTimeLimit

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:71:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:513:25)

  ‚óè Model Version Change Detection ‚Ä∫ Change Analysis Performance ‚Ä∫ analyzeChanges_DeepNesting_HandlesComplexity

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:543:25)

  ‚óè Model Version Change Detection ‚Ä∫ Business Rule Validation ‚Ä∫ validateChanges_BreakingChange_RecommendsMajorVersion

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:584:25)

  ‚óè Model Version Change Detection ‚Ä∫ Business Rule Validation ‚Ä∫ validateChanges_BackwardCompatibleAddition_RecommendsMinorVersion

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:611:25)

FAIL tests/unit/domain/services/error-handling-recovery-patterns.test.ts
  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution start failures

    Expected [object Object] to be a failed Result

    [0m [90m 303 |[39m
     [90m 304 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 305 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                        [31m[1m^[22m[39m
     [90m 306 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Failed to start execution'[39m)[33m;[39m
     [90m 307 |[39m         expect(actionExecutionService[33m.[39misExecuting(testActionId))[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 308 |[39m         [0m

      at Object.toBeFailureResult (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:305:24)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution timeout scenarios

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle resource exhaustion gracefully

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry exhaustion

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry policy evaluation failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle exponential backoff calculation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle metrics corruption recovery

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle invalid resource usage data

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle invalid model structure

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle extremely deep nesting

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle context initialization failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle level coordination failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle vertical nesting failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle horizontal scaling failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle context transformation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle consistency validation failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle invalid node ID formats

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle memory constraints

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle concurrent context operations conflicts

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle permission validation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle circular reference detection failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ scope management failures ‚Ä∫ should handle scope isolation violations

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should handle workflow -> action -> context failure cascade

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should maintain system stability under high error rates

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should clean up resources after workflow failure

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should prevent memory leaks in long-running error scenarios

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ service coordination error handling ‚Ä∫ should handle inter-service communication failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

FAIL tests/unit/domain/services/clean-architecture-compliance.test.ts
  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ result pattern compliance ‚Ä∫ error propagation through Result pattern ‚Ä∫ should propagate errors through Result chains without exceptions

    TypeError: Cannot read properties of null (reading 'length')

    [0m [90m 181 |[39m [90m   */[39m
     [90m 182 |[39m   [36mpublic[39m optimizeActionOrder(actions[33m:[39m [33mActionNode[39m[])[33m:[39m [33mResult[39m[33m<[39m[33mActionNode[39m[][33m>[39m {
    [31m[1m>[22m[39m[90m 183 |[39m     [36mif[39m (actions[33m.[39mlength [33m===[39m [35m0[39m) {
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 184 |[39m       [36mreturn[39m [33mResult[39m[33m.[39mok[33m<[39m[33mActionNode[39m[][33m>[39m([])[33m;[39m
     [90m 185 |[39m     }
     [90m 186 |[39m[0m

      at ActionNodeOrchestrationService.length [as optimizeActionOrder] (lib/domain/services/action-node-orchestration-service.ts:183:17)
      at optimizeActionOrder (tests/unit/domain/services/clean-architecture-compliance.test.ts:237:59)
      at Object.<anonymous> (node_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js:1824:9)
      at Object.throwingMatcher [as toThrow] (node_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js:2235:93)
      at Object.toThrow (tests/unit/domain/services/clean-architecture-compliance.test.ts:239:16)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ layer separation compliance ‚Ä∫ business rule encapsulation ‚Ä∫ should enforce context access rules

    expect(received).toHaveProperty(path)

    Expected path: "granted"
    Received path: []

    Received value: {"accessLevel": "read", "isValid": false, "reason": "Target context not found"}

    [0m [90m 425 |[39m         [90m// Assert - Business rules for access control should be enforced[39m
     [90m 426 |[39m         expect(accessResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 427 |[39m         expect(accessResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'granted'[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 428 |[39m         expect(accessResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'level'[39m)[33m;[39m
     [90m 429 |[39m         expect(accessResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'accessibleProperties'[39m)[33m;[39m
     [90m 430 |[39m       })[33m;[39m[0m

      at Object.toHaveProperty (tests/unit/domain/services/clean-architecture-compliance.test.ts:427:36)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ layer separation compliance ‚Ä∫ business rule encapsulation ‚Ä∫ should enforce execution mode rules

    expect(received).toHaveProperty(path, value)

    Expected path: "executedActions"
    Received path: []

    Expected value: 0
    Received value: []

    [0m [90m 449 |[39m         [90m// Assert - Different execution modes should follow their rules[39m
     [90m 450 |[39m         expect(parallelResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 451 |[39m         expect(parallelResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'executedActions'[39m[33m,[39m [35m0[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 452 |[39m         expect(parallelResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'concurrencyRespected'[39m)[33m;[39m
     [90m 453 |[39m         
     [90m 454 |[39m         expect(sequentialResult)[33m.[39mtoBeValidResult()[33m;[39m[0m

      at Object.toHaveProperty (tests/unit/domain/services/clean-architecture-compliance.test.ts:451:38)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ interface segregation compliance ‚Ä∫ focused service interfaces ‚Ä∫ should have cohesive method groupings

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 483 |[39m               [36mbreak[39m[33m;[39m
     [90m 484 |[39m             [36mcase[39m [32m'ActionNodeExecutionService'[39m[33m:[39m
    [31m[1m>[22m[39m[90m 485 |[39m               expect(methods[33m.[39msome(m [33m=>[39m m[33m.[39mincludes([32m'execution'[39m) [33m||[39m m[33m.[39mincludes([32m'action'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                                                                          [31m[1m^[22m[39m
     [90m 486 |[39m               [36mbreak[39m[33m;[39m
     [90m 487 |[39m             [36mcase[39m [32m'NodeContextAccessService'[39m[33m:[39m
     [90m 488 |[39m               expect(methods[33m.[39msome(m [33m=>[39m m[33m.[39mincludes([32m'context'[39m) [33m||[39m m[33m.[39mincludes([32m'build'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m[0m

      at toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:485:90)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/clean-architecture-compliance.test.ts:473:18)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ WorkflowOrchestrationService should only handle workflow execution

    expect(received).toBe(expected) // Object.is equality

    Expected: 15
    Received: 10

    [0m [90m 560 |[39m         )[33m;[39m
     [90m 561 |[39m         
    [31m[1m>[22m[39m[90m 562 |[39m         expect(workflowRelatedMethods[33m.[39mlength)[33m.[39mtoBe(methods[33m.[39mlength)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 563 |[39m       })[33m;[39m
     [90m 564 |[39m
     [90m 565 |[39m       it([32m'ActionNodeExecutionService should only handle individual action execution'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:562:47)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ ActionNodeExecutionService should only handle individual action execution

    expect(received).toBe(expected) // Object.is equality

    Expected: 13
    Received: 6

    [0m [90m 581 |[39m         )[33m;[39m
     [90m 582 |[39m         
    [31m[1m>[22m[39m[90m 583 |[39m         expect(executionRelatedMethods[33m.[39mlength)[33m.[39mtoBe(methods[33m.[39mlength)[33m;[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 584 |[39m       })[33m;[39m
     [90m 585 |[39m
     [90m 586 |[39m       it([32m'NodeContextAccessService should only handle context management'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:583:48)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ NodeContextAccessService should only handle context management

    expect(received).toBe(expected) // Object.is equality

    Expected: 33
    Received: 10

    [0m [90m 602 |[39m         )[33m;[39m
     [90m 603 |[39m         
    [31m[1m>[22m[39m[90m 604 |[39m         expect(contextRelatedMethods[33m.[39mlength)[33m.[39mtoBe(methods[33m.[39mlength)[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 605 |[39m       })[33m;[39m
     [90m 606 |[39m     })[33m;[39m
     [90m 607 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:604:46)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ architectural boundary enforcement ‚Ä∫ no direct external dependencies ‚Ä∫ should not directly access network resources

    expect(received).not.toMatch(expected)

    Expected pattern: not /http\.|https\.|fetch|axios|request/
    Received string:      "class NodeContextAccessService {
        /**
       * Register a node in the context access system
       */ registerNode(nodeId, nodeType, parentNodeId, contextData, hierarchyLevel) {
            const nodeIdStr = nodeId.value;
            const nodeContext = {
                nodeId,
                nodeType,
                parentNodeId,
                contextData: {
                    ...contextData
                },
                accessLevel: \"read\",
                hierarchyLevel
            };
            this.nodeHierarchy.set(nodeIdStr, nodeContext);
            // Update parent-child relations
            if (parentNodeId) {
                const parentIdStr = parentNodeId.value;
                const children = this.parentChildRelations.get(parentIdStr) || [];
                children.push(nodeIdStr);
                this.parentChildRelations.set(parentIdStr, children);
                // Update sibling groups
                this.updateSiblingGroups(parentIdStr, nodeIdStr);
            }
            return _result.Result.ok(undefined);
        }
        /**
       * Get accessible contexts for a given node based on hierarchical access patterns
       */ getAccessibleContexts(requestingNodeId) {
            const nodeIdStr = requestingNodeId.value;
            const requestingNode = this.nodeHierarchy.get(nodeIdStr);
            if (!requestingNode) {
                return _result.Result.fail(\"Node not found in context system\");
            }
            const accessibleContexts = [];
            // 1. Sibling Access - Read-only context sharing between nodes at same hierarchical level
            const siblingAccess = this.getSiblingContexts(requestingNode);
            accessibleContexts.push(...siblingAccess);
            // 2. Child Access - Parents have write access to all their children
            if (this.hasChildren(requestingNode)) {
                const childAccess = this.getChildAccessContexts(requestingNode);
                accessibleContexts.push(...childAccess);
            }
            // 3. Parent Access - Children have read access to their parents
            if (requestingNode.parentNodeId) {
                const parentAccess = this.getParentContexts(requestingNode);
                accessibleContexts.push(...parentAccess);
            }
            // 4. Uncle/Aunt Access - Read-only lateral access for root cause analysis
            const uncleAuntAccess = this.getUncleAuntContexts(requestingNode);
            accessibleContexts.push(...uncleAuntAccess);
            // 5. Deep Nesting - Cascading access through multi-level function model hierarchy
            const deepNestingAccess = this.getDeepNestingContexts(requestingNode);
            accessibleContexts.push(...deepNestingAccess);
            return _result.Result.ok(accessibleContexts);
        }
        /**
       * Get context for a node by nodeId (for testing and simple access)
       */ getNodeContext(nodeId) {
            for (const context of this.contexts.values()){
                if (context.nodeId.equals(nodeId)) {
                    return _result.Result.ok(context);
                }
            }
            return _result.Result.fail(\"Context not found for node\");
        }
        /**
       * Get specific context data for a node with access validation
       */ getNodeContextWithAccess(requestingNodeId, targetNodeId, requestedAccess = \"read\") {
            const targetContext = this.nodeHierarchy.get(targetNodeId.value);
            if (!targetContext) {
                return _result.Result.fail(\"Access denied: Target node not found\");
            }
            // Allow self-access - a node can always access its own context
            if (requestingNodeId.equals(targetNodeId)) {
                return _result.Result.ok({
                    ...targetContext,
                    contextData: {
                        ...targetContext.contextData
                    }
                });
            }
            const accessResult = this.validateAccess(requestingNodeId, targetNodeId, requestedAccess);
            if (accessResult.isFailure) {
                return _result.Result.fail(accessResult.error);
            }
            return _result.Result.ok({
                ...targetContext,
                contextData: {
                    ...targetContext.contextData
                }
            });
        }
        /**
       * Update context data for a node (with write permission validation)
       */ updateNodeContext(updatingNodeId, targetNodeId, newContextData) {
            const targetContext = this.nodeHierarchy.get(targetNodeId.value);
            if (!targetContext) {
                return _result.Result.fail(\"Access denied: Target node not found\");
            }
            // Allow self-update - a node can always update its own context
            if (updatingNodeId.equals(targetNodeId)) {
                targetContext.contextData = {
                    ...newContextData
                };
                this.nodeHierarchy.set(targetNodeId.value, targetContext);
                return _result.Result.ok(undefined);
            }
            const accessResult = this.validateAccess(updatingNodeId, targetNodeId, \"write\");
            if (accessResult.isFailure) {
                return _result.Result.fail(accessResult.error);
            }
            targetContext.contextData = {
                ...newContextData
            };
            this.nodeHierarchy.set(targetNodeId.value, targetContext);
            return _result.Result.ok(undefined);
        }
        /**
       * Extract action node specific context based on type
       */ extractActionNodeContext(actionNode) {
            const baseContext = {
                actionId: actionNode.actionId?.value || \"unknown\",
                name: actionNode.name,
                description: actionNode.description,
                executionMode: actionNode.executionMode,
                status: actionNode.status,
                priority: actionNode.priority,
                raci: actionNode.raci
            };
            // Type-specific context extraction
            if (actionNode instanceof _tethernode.TetherNode) {
                const tetherNode = actionNode;
                const config = tetherNode.tetherData;
                return {
                    ...baseContext,
                    type: \"TetherNode\",
                    tetherReferenceId: config.tetherReferenceId,
                    executionParameters: config.executionParameters,
                    outputMapping: config.outputMapping,
                    resourceRequirements: config.resourceRequirements,
                    integrationConfig: config.integrationConfig
                };
            }
            if (actionNode instanceof _kbnode.KBNode) {
                const kbNode = actionNode;
                const config = kbNode.kbData;
                return {
                    ...baseContext,
                    type: \"KBNode\",
                    kbReferenceId: config.kbReferenceId,
                    shortDescription: config.shortDescription,
                    documentationContext: config.documentationContext,
                    searchKeywords: config.searchKeywords,
                    accessPermissions: config.accessPermissions
                };
            }
            if (actionNode instanceof _functionmodelcontainernode.FunctionModelContainerNode) {
                const containerData = actionNode.containerData;
                return {
                    ...baseContext,
                    type: \"FunctionModelContainer\",
                    nestedModelId: containerData?.nestedModelId,
                    contextMapping: containerData?.contextMapping,
                    outputExtraction: containerData?.outputExtraction,
                    executionPolicy: containerData?.executionPolicy,
                    orchestrationMode: containerData?.orchestrationMode
                };
            }
            return baseContext;
        }
        getSiblingContexts(requestingNode) {
            const results = [];
            if (!requestingNode.parentNodeId) return results;
            const siblings = this.siblingGroups.get(requestingNode.parentNodeId.value) || [];
            for (const siblingIdStr of siblings){
                if (siblingIdStr === requestingNode.nodeId.value) continue;
                const siblingContext = this.nodeHierarchy.get(siblingIdStr);
                if (siblingContext) {
                    results.push({
                        context: siblingContext,
                        accessGranted: true,
                        accessReason: \"Sibling read-only access pattern\"
                    });
                }
            }
            return results;
        }
        getChildAccessContexts(requestingNode) {
            const results = [];
            const children = this.parentChildRelations.get(requestingNode.nodeId.value) || [];
            for (const childIdStr of children){
                const childContext = this.nodeHierarchy.get(childIdStr);
                if (childContext) {
                    // Parent has write access to all child contexts
                    results.push({
                        context: {
                            ...childContext,
                            accessLevel: \"write\"
                        },
                        accessGranted: true,
                        accessReason: \"Parent write access to child context\"
                    });
                    // Include all descendants with write access
                    const descendants = this.getAllDescendants(childIdStr);
                    for (const descendantId of descendants){
                        const descendantContext = this.nodeHierarchy.get(descendantId);
                        if (descendantContext) {
                            results.push({
                                context: {
                                    ...descendantContext,
                                    accessLevel: \"write\"
                                },
                                accessGranted: true,
                                accessReason: \"Parent hierarchical write access to descendant\"
                            });
                        }
                    }
                }
            }
            return results;
        }
        getParentContexts(requestingNode) {
            const results = [];
            if (!requestingNode.parentNodeId) return results;
            const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);
            if (parentContext) {
                results.push({
                    context: {
                        ...parentContext,
                        accessLevel: \"read\"
                    },
                    accessGranted: true,
                    accessReason: \"Child read access to parent context\"
                });
            }
            return results;
        }
        getUncleAuntContexts(requestingNode) {
            const results = [];
            if (!requestingNode.parentNodeId) return results;
            const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);
            if (!parentContext?.parentNodeId) return results;
            // Get parent's siblings (uncles/aunts)
            const uncleAunts = this.siblingGroups.get(parentContext.parentNodeId.value) || [];
            for (const uncleAuntId of uncleAunts){
                if (uncleAuntId === requestingNode.parentNodeId.value) continue;
                const uncleAuntContext = this.nodeHierarchy.get(uncleAuntId);
                if (uncleAuntContext) {
                    results.push({
                        context: uncleAuntContext,
                        accessGranted: true,
                        accessReason: \"Uncle/Aunt lateral read-only access for root cause analysis\"
                    });
                }
            }
            return results;
        }
        getDeepNestingContexts(requestingNode) {
            const results = [];
            // For deep nesting, traverse up the hierarchy and apply cascading access
            let currentNodeId = requestingNode.parentNodeId?.value;
            let nestingLevel = 1;
            while(currentNodeId && nestingLevel <= 10){
                const currentContext = this.nodeHierarchy.get(currentNodeId);
                if (!currentContext) break;
                results.push({
                    context: {
                        ...currentContext,
                        accessLevel: nestingLevel <= 2 ? \"write\" : \"read\"
                    },
                    accessGranted: true,
                    accessReason: `Deep nesting level ${nestingLevel} - ${nestingLevel <= 2 ? \"write\" : \"read\"} access`
                });
                currentNodeId = currentContext.parentNodeId?.value;
                nestingLevel++;
            }
            return results;
        }
        validateAccess(requestingNodeId, targetNodeId, requestedAccess) {
            const accessibleContexts = this.getAccessibleContexts(requestingNodeId);
            if (accessibleContexts.isFailure) {
                return _result.Result.fail(accessibleContexts.error);
            }
            const targetAccess = accessibleContexts.value.find((access)=>access.context.nodeId.equals(targetNodeId));
            if (!targetAccess || !targetAccess.accessGranted) {
                return _result.Result.fail(\"Access denied: Node not in accessible context hierarchy\");
            }
            // Validate access level
            const contextAccessLevel = targetAccess.context.accessLevel;
            const accessLevels = [
                \"read\",
                \"write\",
                \"execute\"
            ];
            const requiredLevel = accessLevels.indexOf(requestedAccess);
            const availableLevel = accessLevels.indexOf(contextAccessLevel);
            if (availableLevel < requiredLevel) {
                return _result.Result.fail(`Access denied: Required ${requestedAccess} access, but only ${contextAccessLevel} is available`);
            }
            return _result.Result.ok(undefined);
        }
        hasChildren(node) {
            const children = this.parentChildRelations.get(node.nodeId.value);
            return !!(children && children.length > 0);
        }
        updateSiblingGroups(parentIdStr, newChildIdStr) {
            const existingSiblings = this.siblingGroups.get(parentIdStr) || [];
            existingSiblings.push(newChildIdStr);
            this.siblingGroups.set(parentIdStr, existingSiblings);
        }
        getAllDescendants(nodeId) {
            const children = this.parentChildRelations.get(nodeId) || [];
            let descendants = [
                ...children
            ];
            for (const child of children){
                descendants = descendants.concat(this.getAllDescendants(child));
            }
            return descendants;
        }
        /**
       * Set hierarchy relationship between nodes (used for testing)
       */ setHierarchy(childNodeId, parentNodeId) {
            const children = this.parentChildRelations.get(parentNodeId) || [];
            if (!children.includes(childNodeId)) {
                children.push(childNodeId);
                this.parentChildRelations.set(parentNodeId, children);
            }
            // Update sibling groups
            this.updateSiblingGroups(parentNodeId, childNodeId);
        }
        /**
       * Set context data for a specific node (used for testing)
       */ setContextData(nodeId, contextData) {
            const existingContext = this.nodeHierarchy.get(nodeId);
            if (existingContext) {
                // Use the same approach as debugForceSetContext which works
                this.nodeHierarchy.delete(nodeId);
                const updatedContext = {
                    ...existingContext,
                    contextData: contextData
                };
                this.nodeHierarchy.set(nodeId, updatedContext);
            }
        }
        /**
       * Get all child contexts for a parent node (used for testing)
       */ getChildContexts(parentNodeId) {
            const children = this.parentChildRelations.get(parentNodeId) || [];
            const childContexts = [];
            for (const childId of children){
                const childContext = this.nodeHierarchy.get(childId);
                if (childContext && childContext.contextData) {
                    childContexts.push(childContext.contextData);
                }
            }
            return childContexts;
        }
        /**
       * Debug method to check parent-child relationships (used for testing)
       */ getParentChildRelations() {
            return new Map(this.parentChildRelations);
        }
        /**
       * Debug method to check if a node has children (used for testing)
       */ debugHasChildren(nodeId) {
            const children = this.parentChildRelations.get(nodeId);
            return !!(children && children.length > 0);
        }
        /**
       * Get deep nested contexts across multiple model levels (used for testing)
       */ getDeepNestedContext(sourceModelId, targetModelId) {
            // Find nodes related to the source model that might have nested contexts
            const nestedContexts = [];
            // Search through node hierarchy for contexts referencing target model
            for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){
                // Check if this node's context references the target model
                // Check if this node's context data has references to the target model
                if (nodeContext.contextData && this.hasNestedModelReferences(nodeContext.contextData, targetModelId)) {
                    // Found matching context
                    nestedContexts.push(nodeContext.contextData);
                } else if (nodeContext.contextData) {
                // No match in this node's context
                }
            }
            // Return all found contexts
            return nestedContexts;
        }
        /**
       * Debug method to check the current state of the service
       */ debugState() {
            const nodes = [];
            for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){
                nodes.push({
                    nodeId,
                    nodeType: nodeContext.nodeType,
                    hasContextData: !!nodeContext.contextData,
                    contextKeys: nodeContext.contextData ? Object.keys(nodeContext.contextData) : [],
                    contextDataType: typeof nodeContext.contextData,
                    contextData: nodeContext.contextData
                });
            }
            return {
                nodeCount: this.nodeHierarchy.size,
                nodes
            };
        }
        /**
       * Test method to directly manipulate the hierarchy for debugging
       */ debugForceSetContext(nodeId, contextData) {
            // Direct map manipulation
            const existing = this.nodeHierarchy.get(nodeId);
            if (!existing) return false;
            // Force set context data for testing purposes
            // Completely replace the object in the map
            this.nodeHierarchy.delete(nodeId);
            const newContext = {
                ...existing,
                contextData: contextData
            };
            // Context created successfully
            this.nodeHierarchy.set(nodeId, newContext);
            // Verify it was set
            const verify = this.nodeHierarchy.get(nodeId);
            // Context verification complete
            return true;
        }
        /**
       * Build context for a node with optional parent context inheritance
       */ buildContext(nodeId, data, scope, parentContextId) {
            try {
                // Validate input data
                if (data === null || data === undefined) {
                    return _result.Result.fail(\"Invalid context data: data cannot be null or undefined\");
                }
                if (typeof data !== \"object\") {
                    return _result.Result.fail(\"Invalid context data: data must be an object\");
                }
                const contextId = `ctx-${++this.contextCounter}-${nodeId.value.slice(-8)}`;
                let inheritedData = {};
                if (parentContextId) {
                    const parentContext = this.contexts.get(parentContextId);
                    if (parentContext) {
                        inheritedData = {
                            ...parentContext.data
                        };
                    }
                }
                const accessLevel = scope === \"isolated\" ? \"read\" : \"read-write\";
                const context = {
                    contextId,
                    nodeId,
                    scope,
                    data: {
                        ...data
                    },
                    inheritedData: Object.keys(inheritedData).length > 0 ? inheritedData : undefined,
                    accessLevel,
                    parentContextId: parentContextId || null
                };
                this.contexts.set(contextId, context);
                return _result.Result.ok(context);
            } catch (error) {
                return _result.Result.fail(`Failed to build context: ${error}`);
            }
        }
        /**
       * Update context data for the specified context ID
       */ updateNodeContext(contextId, updateData, mergeMode = \"merge\") {
            const context = this.contexts.get(contextId);
            if (!context) {
                return _result.Result.fail(\"Context not found\");
            }
            let updatedData;
            if (mergeMode === \"merge\") {
                updatedData = {
                    ...context.data,
                    ...updateData
                };
            } else {
                updatedData = {
                    ...updateData
                };
            }
            const updatedContext = {
                ...context,
                data: updatedData
            };
            this.contexts.set(contextId, updatedContext);
            return _result.Result.ok(updatedContext);
        }
        /**
       * Clear node context and all child contexts
       */ clearNodeContext(nodeId) {
            const contextsToRemove = [];
            // Find contexts for this node
            for (const [contextId, context] of this.contexts.entries()){
                if (context.nodeId.equals(nodeId)) {
                    contextsToRemove.push(contextId);
                    // Also find child contexts
                    for (const [childId, childContext] of this.contexts.entries()){
                        if (childContext.parentContextId === contextId) {
                            contextsToRemove.push(childId);
                        }
                    }
                }
            }
            // Remove contexts
            contextsToRemove.forEach((id)=>this.contexts.delete(id));
            return _result.Result.ok(undefined);
        }
        /**
       * Propagate context from source to target with inheritance rules
       */ propagateContext(sourceContextId, targetNodeId, inheritanceRules) {
            const sourceContext = this.contexts.get(sourceContextId);
            if (!sourceContext) {
                return _result.Result.fail(\"Source context not found\");
            }
            const propagatedData = {};
            for (const rule of inheritanceRules){
                const sourceValue = sourceContext.data[rule.propertyName];
                if (sourceValue !== undefined) {
                    switch(rule.inheritanceType){
                        case \"inherit\":
                            propagatedData[rule.propertyName] = sourceValue;
                            break;
                        case \"override\":
                            propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;
                            break;
                        case \"merge\":
                            if (typeof sourceValue === \"object\" && sourceValue !== null) {
                                propagatedData[rule.propertyName] = {
                                    ...sourceValue,
                                    ...rule.defaultValue || {}
                                };
                            } else {
                                propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;
                            }
                            break;
                    }
                } else if (rule.defaultValue !== undefined) {
                    propagatedData[rule.propertyName] = rule.defaultValue;
                }
            }
            return this.buildContext(targetNodeId, propagatedData, sourceContext.scope, sourceContextId);
        }
        /**
       * Get hierarchical context including parent chain
       */ getHierarchicalContext(nodeId) {
            // Find context for this node
            let nodeContext;
            for (const context of this.contexts.values()){
                if (context.nodeId.equals(nodeId)) {
                    nodeContext = context;
                    break;
                }
            }
            if (!nodeContext) {
                return _result.Result.fail(\"Node context not found\");
            }
            // Find child contexts
            const childContextIds = [];
            for (const [contextId, context] of this.contexts.entries()){
                if (context.parentContextId === nodeContext.contextId) {
                    childContextIds.push(contextId);
                }
            }
            const hierarchicalContext = {
                ...nodeContext,
                childContextIds,
                timestamp: new Date().toISOString()
            };
            return _result.Result.ok(hierarchicalContext);
        }
        /**
       * Validate context access permissions
       */ validateContextAccess(requestingNodeId, targetContextId, requestedAccess) {
            const targetContext = this.contexts.get(targetContextId);
            if (!targetContext) {
                return _result.Result.ok({
                    isValid: false,
                    reason: \"Target context not found\",
                    accessLevel: \"read\"
                });
            }
            // Self-access is always allowed
            if (targetContext.nodeId.equals(requestingNodeId)) {
                return _result.Result.ok({
                    isValid: true,
                    reason: \"Self-access granted\",
                    accessLevel: targetContext.accessLevel
                });
            }
            // Check if requesting node has access based on hierarchy
            const hasAccess = this.checkHierarchicalAccess(requestingNodeId, targetContext);
            const accessLevel = hasAccess ? targetContext.accessLevel : \"read\";
            const canAccess = this.validateAccessLevel(requestedAccess, accessLevel);
            return _result.Result.ok({
                isValid: canAccess,
                reason: canAccess ? \"Hierarchical access granted\" : \"Insufficient permissions\",
                accessLevel
            });
        }
        /**
       * Clone context scope to new node
       */ cloneContextScope(sourceContextId, targetNodeId, newScope, transformationRules) {
            const sourceContext = this.contexts.get(sourceContextId);
            if (!sourceContext) {
                return _result.Result.fail(\"Source context not found\");
            }
            let clonedData = {
                ...sourceContext.data
            };
            // Apply transformation rules if provided
            if (transformationRules) {
                for (const rule of transformationRules){
                    if (rule.inheritanceType === \"override\" && rule.defaultValue !== undefined) {
                        clonedData[rule.propertyName] = rule.defaultValue;
                    }
                }
            }
            return this.buildContext(targetNodeId, clonedData, newScope);
        }
        /**
       * Merge multiple context scopes
       */ mergeContextScopes(sourceContextIds, targetNodeId, targetScope, precedenceRules) {
            if (sourceContextIds.length === 0) {
                return this.buildContext(targetNodeId, {}, targetScope);
            }
            const sourceContexts = sourceContextIds.map((id)=>this.contexts.get(id)).filter((ctx)=>ctx !== undefined);
            if (sourceContexts.length === 0) {
                return _result.Result.fail(\"No valid source contexts found\");
            }
            // Merge data with precedence rules
            const mergedData = {};
            if (precedenceRules) {
                const priorityMap = new Map(precedenceRules.map((rule)=>[
                        rule.contextId,
                        rule.priority
                    ]));
                const sortedContexts = sourceContexts.sort((a, b)=>{
                    const priorityA = priorityMap.get(a.contextId) ?? 0;
                    const priorityB = priorityMap.get(b.contextId) ?? 0;
                    return priorityB - priorityA; // Higher priority first
                });
                for (const context of sortedContexts.reverse()){
                    Object.assign(mergedData, context.data);
                }
            } else {
                // Simple merge without precedence
                for (const context of sourceContexts){
                    Object.assign(mergedData, context.data);
                }
            }
            return this.buildContext(targetNodeId, mergedData, targetScope);
        }
        checkHierarchicalAccess(requestingNodeId, targetContext) {
            // Check parent-child relationships
            const accessibleContexts = this.getAccessibleContexts(requestingNodeId);
            if (accessibleContexts.isFailure) return false;
            return accessibleContexts.value.some((access)=>access.context.nodeId.equals(targetContext.nodeId) && access.accessGranted);
        }
        validateAccessLevel(requested, available) {
            const levels = {
                \"read\": 1,
                \"write\": 2,
                \"read-write\": 2,
                \"execute\": 3
            };
            return levels[requested] <= levels[available];
        }
        /**
       * Check if context data contains references to a nested model
       */ hasNestedModelReferences(contextData, targetModelId) {
            // Check various possible locations where nested model references might exist
            // Check various possible locations where nested model references might exist
            // Check direct nestedModelId reference
            if (contextData.nestedModelId === targetModelId) {
                return true;
            }
            // Check in execution memory parent models array
            if (contextData.executionMemory && contextData.executionMemory.parentModels) {
                if (Array.isArray(contextData.executionMemory.parentModels) && contextData.executionMemory.parentModels.includes(targetModelId)) {
                    return true;
                }
            }
            // Check in nested model outputs (for FunctionModelContainerContext)
            if (contextData.nestedModelOutputs) {
                if (contextData.nestedModelOutputs[targetModelId]) {
                    return true;
                }
            }
            // Check in orchestration state nested models
            if (contextData.orchestrationState && contextData.orchestrationState.nestedModels) {
                if (Array.isArray(contextData.orchestrationState.nestedModels) && contextData.orchestrationState.nestedModels.includes(targetModelId)) {
                    return true;
                }
            }
            return false;
        }
        constructor(){
            this.nodeHierarchy = new Map();
            this.parentChildRelations = new Map();
            this.siblingGroups = new Map();
            this.contexts = new Map();
            this.contextCounter = 0;
        }
    }"

    [0m [90m 628 |[39m         services[33m.[39mforEach(service [33m=>[39m {
     [90m 629 |[39m           [36mconst[39m serviceString [33m=[39m service[33m.[39mconstructor[33m.[39mtoString()[33m;[39m
    [31m[1m>[22m[39m[90m 630 |[39m           expect(serviceString)[33m.[39mnot[33m.[39mtoMatch([35m/http\.|https\.|fetch|axios|request/[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 631 |[39m           expect(serviceString)[33m.[39mnot[33m.[39mtoMatch([35m/socket\.|ws\.|websocket/i[39m)[33m;[39m
     [90m 632 |[39m         })[33m;[39m
     [90m 633 |[39m       })[33m;[39m[0m

      at toMatch (tests/unit/domain/services/clean-architecture-compliance.test.ts:630:37)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/clean-architecture-compliance.test.ts:628:18)

PASS tests/integration/domain/services/business-rule-validation-service.integration.test.ts
  ‚óè Console

    console.log
      Hierarchical validation warnings: [ 'Consider enabling audit logging for compliance' ]

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:339:19)

    console.log
      Feature data-processing validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Feature ai-ml validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Feature integration validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Feature analytics validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Feature security validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node'
        ]
      }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:766:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 0 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 1 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 2 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 3 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 4 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 5 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 6 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 7 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 8 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 9 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 10 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 11 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 12 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 13 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 14 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 15 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 16 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 17 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 18 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 19 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 20 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 21 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 22 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 23 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 24 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 25 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 26 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 27 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 28 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 29 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 30 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 31 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 32 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 33 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 34 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 35 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 36 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 37 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 38 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 39 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 40 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 41 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 42 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 43 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 44 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 45 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 46 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 47 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 48 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Model 49 validation warnings: 4

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:879:21)
          at Array.forEach (<anonymous>)

    console.log
      Performance Test Results:
              - Total Models: 50
              - Actions per Model: 20
              - Total Actions: 1000
              - Total Duration: 28ms
              - Average per Model: 0.56ms
              - Actions per Second: 35714.29

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:887:17)

    console.log
      Context validation results: [
        {
          environment: 'development',
          isValid: false,
          errorCount: 1,
          warningCount: 2
        },
        {
          environment: 'staging',
          isValid: false,
          errorCount: 1,
          warningCount: 2
        },
        {
          environment: 'production',
          isValid: false,
          errorCount: 1,
          warningCount: 2
        },
        {
          environment: 'testing',
          isValid: false,
          errorCount: 1,
          warningCount: 2
        }
      ]

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:980:17)

    console.log
      Configuration 0 result: { isValid: false, errors: 1, warnings: 1 }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1041:19)
          at Array.forEach (<anonymous>)

    console.log
      Configuration 1 result: { isValid: false, errors: 1, warnings: 2 }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1041:19)
          at Array.forEach (<anonymous>)

    console.log
      Configuration 2 result: { isValid: false, errors: 1, warnings: 1 }

      at log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1041:19)
          at Array.forEach (<anonymous>)

    console.log
      Architectural compliance validation: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node',
          'Consider enabling audit logging for compliance'
        ]
      }

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1115:17)

    console.log
      Null Model handled gracefully: Model cannot be null or undefined

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1186:23)

    console.log
      Undefined Actions validation result: {
        isValid: true,
        errors: [],
        warnings: [ 'Consider enabling audit logging for compliance' ]
      }

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1190:23)

    console.log
      Empty Name Model validation result: {
        isValid: false,
        errors: [ 'Required input boundary node is missing' ],
        warnings: [
          'Workflow has no output boundaries - consider adding an output IO node',
          'Model name does not follow organizational naming conventions',
          'Consider enabling audit logging for compliance'
        ]
      }

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1190:23)

    console.log
      Edge case validation errors: [
        'Required input boundary node is missing',
        'Total resource allocation exceeds organization limits',
        'Total CPU allocation exceeds organization limits'
      ]

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1250:19)

    console.log
      Edge case validation warnings: [
        'Workflow has no output boundaries - consider adding an output IO node',
        'Action node Extreme Resource Action requires high memory allocation',
        'Consider enabling audit logging for compliance',
        'Workflow may exceed performance SLA due to sequential processing',
        'Resource-intensive operations detected - monitor performance impact'
      ]

      at Object.log (tests/integration/domain/services/business-rule-validation-service.integration.test.ts:1253:19)

PASS tests/unit/domain/services/fractal-orchestration-service.test.ts
PASS tests/integration/application/function-model-management-service.integration.test.ts
PASS tests/integration/use-cases/workflow-execution-service.integration.test.ts
PASS tests/unit/domain/entities/node-metadata.test.ts
PASS tests/unit/domain/entities/nodes/io-node.test.ts
PASS tests/unit/domain/entities/action-node-type-specific-rules.test.ts
PASS tests/unit/domain/services/hierarchical-context-access.test.ts
  ‚óè Console

    console.log
      DEBUG: Setting context for level1Container.actionId: 00000036-0000-4000-8000-000000360000

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:715:15)

    console.log
      DEBUG: level2Model.modelId: 00000035-0000-4000-8000-000000350000

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:716:15)

    console.log
      DEBUG: level1Context.nestedModelOutputs keys: [ '00000035-0000-4000-8000-000000350000' ]

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:717:15)

    console.log
      DEBUG: Service state after setting context:

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:723:15)

    console.log
      DEBUG: Node count: 3

      at Object.log (tests/unit/domain/services/hierarchical-context-access.test.ts:724:15)

    console.log
      DEBUG: Node 00000036-0000-4000-8000-000000360000 (FunctionModelContainer) - hasContext: true, contextKeys: []

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:726:17)
          at Array.forEach (<anonymous>)

    console.log
      DEBUG: Target node context data: {}

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:728:19)
          at Array.forEach (<anonymous>)

    console.log
      DEBUG: Target node context data type: object

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:729:19)
          at Array.forEach (<anonymous>)

    console.log
      DEBUG: Node 0000003a-0000-4000-8000-0000003a0000 (FunctionModelContainer) - hasContext: true, contextKeys: []

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:726:17)
          at Array.forEach (<anonymous>)

    console.log
      DEBUG: Node 0000003e-0000-4000-8000-0000003e0000 (TetherNode) - hasContext: true, contextKeys: []

      at log (tests/unit/domain/services/hierarchical-context-access.test.ts:726:17)
          at Array.forEach (<anonymous>)

PASS tests/unit/domain/entities/nodes/stage-node.test.ts
PASS tests/unit/domain/entities/nodes/tether-node.test.ts
PASS tests/unit/use-cases/execute-function-model-use-case.test.ts
PASS tests/integration/application/cross-feature-integration-service.integration.test.ts
  ‚óè Console

    console.log
      Performance Test Results:
              - Network Size: 19 links
              - Creation Time: 4ms
              - Analysis Time: 0ms
              - Cycles Detected: 0
              - Network Density: 3.167

      at Object.log (tests/integration/application/cross-feature-integration-service.integration.test.ts:752:15)

PASS tests/unit/domain/services/correct-mock-implementations.test.ts
PASS tests/unit/domain/entities/ai-agent.test.ts
PASS tests/unit/use-cases/manage-node-dependencies.test.ts
PASS tests/unit/use-cases/function-model/manage-cross-feature-integration-use-case.test.ts
PASS tests/unit/use-cases/function-model/validate-workflow-structure-use-case.test.ts
PASS tests/unit/domain/entities/function-model-comprehensive.test.ts
PASS tests/unit/domain/entities/function-model-soft-deletion-state.test.ts
PASS tests/unit/domain/entities/node-link.test.ts
PASS tests/unit/domain/entities/nodes/kb-node.test.ts
PASS tests/unit/use-cases/manage-hierarchical-context-access-use-case.test.ts
FAIL tests/unit/domain/services/workflow-orchestration-service.test.ts
  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should execute tether nodes with mock implementation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "Executing Tether Node: Test Tether"

    Number of calls: 0

    [0m [90m 482 |[39m       [90m// Assert[39m
     [90m 483 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 484 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 485 |[39m         expect[33m.[39mstringContaining([32m'Executing Tether Node: Test Tether'[39m)
     [90m 486 |[39m       )[33m;[39m
     [90m 487 |[39m       [0m

      at Object.toHaveBeenCalledWith (tests/unit/domain/services/workflow-orchestration-service.test.ts:484:26)

  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should execute KB nodes with mock implementation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "Processing KB Node: Test KB"

    Number of calls: 0

    [0m [90m 531 |[39m       [90m// Assert[39m
     [90m 532 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 533 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 534 |[39m         expect[33m.[39mstringContaining([32m'Processing KB Node: Test KB'[39m)
     [90m 535 |[39m       )[33m;[39m
     [90m 536 |[39m       [0m

      at Object.toHaveBeenCalledWith (tests/unit/domain/services/workflow-orchestration-service.test.ts:533:26)

  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should handle action execution in different modes

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 0

    [0m [90m 575 |[39m       [90m// Assert[39m
     [90m 576 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 577 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m [90m// All 3 actions executed (original + 2 new ones)[39m
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 578 |[39m       
     [90m 579 |[39m       [90m// Cleanup[39m
     [90m 580 |[39m       consoleSpy[33m.[39mmockRestore()[33m;[39m[0m

      at Object.toHaveBeenCalledTimes (tests/unit/domain/services/workflow-orchestration-service.test.ts:577:26)

PASS tests/unit/use-cases/function-model/manage-ai-agent-orchestration-use-case.test.ts
PASS tests/unit/domain/events/comprehensive-domain-events.test.ts
PASS tests/unit/domain/value-objects/raci.test.ts
PASS tests/unit/domain/entities/audit-log.test.ts
PASS tests/unit/domain/events/domain-events-fixed.test.ts
PASS tests/unit/domain/repositories/repository-contracts.test.ts
PASS tests/unit/domain/entities/function-model-version.test.ts
PASS tests/unit/domain/enums/domain-enums.test.ts
PASS tests/unit/domain/entities/nodes/function-model-container-node.test.ts
PASS tests/unit/domain/rules/execution-rules.test.ts
PASS tests/unit/domain/architecture/service-interface-architecture-compliance.test.ts
PASS tests/unit/domain/services/action-node-execution-service.test.ts
PASS tests/unit/domain/shared/result.test.ts
PASS tests/unit/domain/rules/business-rules-validation.test.ts
PASS tests/unit/domain/architecture/clean-architecture-soft-deletion-compliance.test.ts
PASS tests/unit/domain/services/soft-deletion-coordination-service.test.ts
PASS tests/unit/domain/services/node-dependency-service.test.ts
  ‚óè Console

    console.log
      Actual node UUIDs:

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:107:15)

    console.log
      stageA -> 20906767-7712-4620-8878-2114797a2dd8

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:108:15)

    console.log
      stageB -> 33f2ef67-bcea-4d3a-8870-e78da3f0dd8c

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:109:15)

    console.log
      merge -> 3995d69c-d8f8-4ad7-881e-9283b5128e81

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:110:15)

    console.log
      Adding dependencies...

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:112:15)

    console.log
      stageA.addDependency result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:114:15)

    console.log
      stageB.addDependency result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:116:15)

    console.log
      mergeStage.addDependency(stageA) result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:118:15)

    console.log
      mergeStage.addDependency(stageB) result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:120:15)

    console.log
      outputNode.addDependency result: Result { _isSuccess: true, _value: undefined, _error: undefined }

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:122:15)

    console.log
      All node keys in graph: [
        '123e4567-e89b-42d3-a456-426614174001',
        '20906767-7712-4620-8878-2114797a2dd8',
        '33f2ef67-bcea-4d3a-8870-e78da3f0dd8c',
        '3995d69c-d8f8-4ad7-881e-9283b5128e81',
        '123e4567-e89b-42d3-a456-426614174003'
      ]

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:134:15)

    console.log
      All reverse dependency keys: [
        '123e4567-e89b-42d3-a456-426614174001',
        '20906767-7712-4620-8878-2114797a2dd8',
        '33f2ef67-bcea-4d3a-8870-e78da3f0dd8c',
        '3995d69c-d8f8-4ad7-881e-9283b5128e81',
        '123e4567-e89b-42d3-a456-426614174003'
      ]

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:135:15)

    console.log
      stageAUUID: 20906767-7712-4620-8878-2114797a2dd8

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:136:15)

    console.log
      Reverse deps for stageA: [ '123e4567-e89b-42d3-a456-426614174001' ]

      at Object.log (tests/unit/domain/services/node-dependency-service.test.ts:137:15)

PASS tests/unit/use-cases/function-model/publish-function-model-use-case.test.ts
PASS tests/unit/domain/value-objects/position.test.ts
PASS tests/unit/domain/entities/function-model-publication.test.ts
PASS tests/unit/domain/entities/action-node.test.ts
PASS tests/unit/domain/events/model-archive-events.test.ts
PASS tests/unit/domain/use-cases/uc-007-create-model-version-simplified.test.ts
PASS tests/unit/domain/events/domain-events.test.ts
PASS tests/unit/use-cases/function-model/manage-action-node-orchestration-use-case.test.ts
PASS tests/unit/use-cases/function-model/create-function-model-use-case.test.ts
PASS tests/unit/use-cases/function-model/add-container-node-use-case.test.ts
PASS tests/unit/domain/value-objects/version.test.ts
PASS tests/unit/domain/entities/action-node-configurations.test.ts
PASS tests/integration/application/ai-agent-management-service.integration.test.ts
PASS tests/unit/domain/value-objects/version-robustness.test.ts
PASS tests/unit/domain/entities/function-model.test.ts
PASS tests/unit/use-cases/function-model/soft-delete-function-model-use-case.test.ts
PASS tests/unit/domain/value-objects/execution-context.test.ts
PASS tests/unit/domain/value-objects/version-equality-compliance.test.ts
PASS tests/unit/domain/interfaces/repository-interfaces-comprehensive.test.ts
PASS tests/unit/domain/value-objects/node-id.test.ts
PASS tests/unit/domain/value-objects/model-name.test.ts
PASS tests/unit/domain/entities/audit-log-soft-deletion.test.ts
PASS tests/unit/domain/aggregates/aggregate-boundary-validation.test.ts
PASS tests/unit/domain/services/cross-feature-linking-service.test.ts
PASS tests/unit/use-cases/function-model/manage-fractal-orchestration-use-case.test.ts
PASS tests/unit/domain/services/context-service-interface-definition.test.ts
PASS tests/unit/domain/entities/node.test.ts
PASS tests/unit/domain/entities/cross-feature-link.test.ts
PASS tests/unit/domain/value-objects/retry-policy.test.ts
PASS tests/unit/domain/services/function-model-versioning-service.test.ts
PASS tests/unit/domain/interfaces/repository-interface-contracts.test.ts
PASS tests/unit/domain/aggregates/function-model-aggregate.test.ts
PASS tests/unit/use-cases/__tests__/base-use-case.test.ts
PASS tests/unit/domain/events/domain-event-integration.test.ts
PASS tests/unit/use-cases/function-model/add-action-node-to-container-use-case.test.ts
PASS tests/unit/domain/services/service-method-signature-compliance.test.ts
PASS tests/unit/use-cases/function-model/manage-error-handling-and-recovery-use-case.test.ts (5.658 s)
PASS tests/unit/domain/services/ai-agent-orchestration-service.test.ts (23.736 s)

Summary of all failing tests
FAIL tests/unit/domain/services/model-recovery-service.test.ts
  ‚óè ModelRecoveryService ‚Ä∫ Recovery Eligibility Assessment ‚Ä∫ AssessRecoveryEligibility_WithIntegrityViolations_ShouldRequireRepair ‚Ä∫ should identify integrity violations and provide repair plan

    expect(received).toEqual(expected) // deep equality

    - Expected  - 9
    + Received  + 9

    - ObjectContaining {
    -   "estimatedRepairTime": StringMatching /\d+\s*(hours?|days?)/,
    + Object {
    +   "estimatedRepairTime": "2 hours",
        "manualInterventionRequired": true,
    -   "repairActions": ArrayContaining [
    -     ObjectContaining {
    -       "action": "RESTORE_MISSING_DEPENDENCY",
    -       "complexity": "MEDIUM",
    -       "target": "dependency-model-456",
    -     },
    -     ObjectContaining {
    +   "repairActions": Array [
    +     Object {
            "action": "REPAIR_BROKEN_REFERENCE",
            "complexity": "LOW",
            "target": "ref-node-1",
    +     },
    +     Object {
    +       "action": "REPAIR_BROKEN_REFERENCE",
    +       "complexity": "LOW",
    +       "target": "ref-node-2",
          },
        ],
      }

    [0m [90m 235 |[39m         expect(result[33m.[39mvalue[33m.[39meligibilityChecks[33m.[39mdependencyIntegrity[33m.[39mpassed)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 236 |[39m         
    [31m[1m>[22m[39m[90m 237 |[39m         expect(result[33m.[39mvalue[33m.[39mrepairPlan)[33m.[39mtoEqual(
     [90m     |[39m                                         [31m[1m^[22m[39m
     [90m 238 |[39m           expect[33m.[39mobjectContaining({
     [90m 239 |[39m             repairActions[33m:[39m expect[33m.[39marrayContaining([
     [90m 240 |[39m               expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:237:41)

  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_ValidEligibleModel_ShouldExecuteRecovery ‚Ä∫ should coordinate complete model recovery process

    expect(received).toEqual(expected) // deep equality

    - Expected  - 16
    + Received  + 35

    - ObjectContaining {
    -   "auditData": ObjectContaining {
    -     "recoveryMetadata": ObjectContaining {
    + Object {
    +   "auditData": Object {
    +     "recoveryMetadata": Object {
            "reason": "Project reactivation - business requirement",
            "recoveredBy": "admin-456",
            "recoveryComplexity": "LOW",
            "stakeholdersNotified": true,
          },
        },
    -   "dependencyActions": ObjectContaining {
    +   "dependencyActions": Object {
          "dependenciesReconciled": true,
          "integrityValidated": true,
          "referencesRestored": true,
        },
    -   "domainEvents": ArrayContaining [
    -     Any<ModelUndeletedEvent>,
    -     Any<ModelRestoredEvent>,
    +   "domainEvents": Array [
    +     Object {
    +       "aggregateId": "recoverable-model-123",
    +       "eventId": "00000001-0000-4000-8000-000000010000",
    +       "eventType": "ModelUndeleted",
    +       "eventVersion": 1,
    +       "occurredAt": "2025-08-28T15:14:13.294Z",
    +       "reason": "Project reactivation - business requirement",
    +       "restoredAt": "2025-08-28T15:14:13.294Z",
    +       "restoredBy": "admin-456",
    +     },
    +     Object {
    +       "aggregateId": "recoverable-model-123",
    +       "eventId": "00000002-0000-4000-8000-000000020000",
    +       "eventType": "ModelRestored",
    +       "eventVersion": 1,
    +       "occurredAt": "2025-08-28T15:14:13.294Z",
    +       "reason": "Project reactivation - business requirement",
    +       "restoredAt": "2025-08-28T15:14:13.294Z",
    +       "restoredBy": "admin-456",
    +       "targetStatus": "published",
    +     },
        ],
    -   "recoveryDetails": ObjectContaining {
    -     "originalDeletionData": ObjectContaining {
    -       "deletedAt": Any<Date>,
    +   "recoveryDetails": Object {
    +     "originalDeletionData": Object {
    +       "deletedAt": 2025-08-28T15:14:13.293Z,
            "deletedBy": "temp-deleter",
          },
          "recoveredBy": "admin-456",
    -     "recoveryTimestamp": Any<Date>,
    -     "restoredState": ObjectContaining {
    +     "recoveryTimestamp": 2025-08-28T15:14:13.294Z,
    +     "restoredState": Object {
            "isDeleted": false,
            "modelId": "recoverable-model-123",
            "name": "Recoverable Model",
            "status": "published",
          },
        },
        "recoveryExecuted": true,
    -   "versioningActions": ObjectContaining {
    -     "newVersionCreated": true,
    -     "version": "2.3.2",
    -     "versionReason": "Model recovery restoration",
    +   "versioningActions": Object {
    +     "newVersionCreated": false,
    +     "version": "2.3.1",
    +     "versionReason": "No version changes required",
        },
      }

    [0m [90m 305 |[39m         [90m// Assert[39m
     [90m 306 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 307 |[39m         expect(result[33m.[39mvalue)[33m.[39mtoEqual(
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 308 |[39m           expect[33m.[39mobjectContaining({
     [90m 309 |[39m             recoveryExecuted[33m:[39m [36mtrue[39m[33m,[39m
     [90m 310 |[39m             recoveryDetails[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:307:30)

  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_WithVersionConflicts_ShouldResolveAndRestore ‚Ä∫ should resolve version conflicts during recovery process

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 477 |[39m
     [90m 478 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 479 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 480 |[39m         expect(result[33m.[39mvalue[33m.[39mversioningActions)[33m.[39mtoEqual(
     [90m 481 |[39m           expect[33m.[39mobjectContaining({
     [90m 482 |[39m             versionConflictsDetected[33m:[39m [36mtrue[39m[33m,[39m[0m

      at Object.toBe (tests/unit/domain/services/model-recovery-service.test.ts:479:34)

  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_PostRecovery_ShouldEnsureModelIntegrity ‚Ä∫ should validate complete model integrity after recovery

    expect(received).toEqual(expected) // deep equality

    - Expected  - 8
    + Received  + 8

    - ObjectContaining {
    + Object {
        "integrityValidationPassed": true,
    -   "qualityMetrics": ObjectContaining {
    +   "qualityMetrics": Object {
          "dataPreservationRate": 100,
          "integrityScore": 100,
          "performanceImpact": "MINIMAL",
          "recoverySuccessRate": 100,
        },
    -   "validationResults": ObjectContaining {
    -     "businessRuleValidation": ObjectContaining {
    +   "validationResults": Object {
    +     "businessRuleValidation": Object {
            "allRulesSatisfied": true,
            "noViolationsDetected": true,
          },
    -     "dataConsistencyValidation": ObjectContaining {
    +     "dataConsistencyValidation": Object {
            "auditTrailComplete": true,
            "dataConsistent": true,
            "noCorruptionDetected": true,
          },
    -     "dependencyValidation": ObjectContaining {
    +     "dependencyValidation": Object {
            "dependenciesResolved": true,
            "integrityMaintained": true,
            "referencesValid": true,
          },
    -     "modelStateValidation": ObjectContaining {
    +     "modelStateValidation": Object {
            "isValid": true,
            "metadataIntact": true,
    -       "modelNotDeleted": true,
    +       "modelNotDeleted": false,
            "requiredPropertiesPresent": true,
          },
        },
      }

    [0m [90m 657 |[39m         [90m// Assert[39m
     [90m 658 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 659 |[39m         expect(result[33m.[39mvalue)[33m.[39mtoEqual(
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 660 |[39m           expect[33m.[39mobjectContaining({
     [90m 661 |[39m             integrityValidationPassed[33m:[39m [36mtrue[39m[33m,[39m
     [90m 662 |[39m             validationResults[33m:[39m expect[33m.[39mobjectContaining({[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:659:30)

  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_WithIssues_ShouldIdentifyProblems ‚Ä∫ should identify and report integrity issues post-recovery

    expect(received).toEqual(expected) // deep equality

    - Expected  - 7
    + Received  + 2

    - ObjectContaining {
    -   "dataConsistencyIssues": ObjectContaining {
    -     "inconsistentFields": Array [
    -       "metadata-mismatch-field",
    -     ],
    -   },
    -   "dependencyIssues": ObjectContaining {
    + Object {
    +   "dependencyIssues": Object {
          "brokenReferences": Array [
            "ref-issue-1",
          ],
        },
      }

    [0m [90m 719 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 720 |[39m         expect(result[33m.[39mvalue[33m.[39mintegrityValidationPassed)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 721 |[39m         expect(result[33m.[39mvalue[33m.[39mdetectedIssues)[33m.[39mtoEqual(
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 722 |[39m           expect[33m.[39mobjectContaining({
     [90m 723 |[39m             dependencyIssues[33m:[39m expect[33m.[39mobjectContaining({
     [90m 724 |[39m               brokenReferences[33m:[39m [[32m'ref-issue-1'[39m][33m,[39m[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:721:45)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ RecoveryServiceCoordination_ShouldUseOnlyDomainDependencies ‚Ä∫ should coordinate recovery using only domain services and entities

    expect(received).toBe(expected) // Object.is equality

    Expected: "function"
    Received: "undefined"

    [0m [90m 768 |[39m           expect(dep)[33m.[39mtoBeDefined()[33m;[39m
     [90m 769 |[39m           [90m// Verify these are domain services, not infrastructure implementations[39m
    [31m[1m>[22m[39m[90m 770 |[39m           expect([36mtypeof[39m dep[33m.[39mvalidateDependencyIntegrity)[33m.[39mtoBe([32m'function'[39m)[33m;[39m
     [90m     |[39m                                                          [31m[1m^[22m[39m
     [90m 771 |[39m         })[33m;[39m
     [90m 772 |[39m
     [90m 773 |[39m         [90m// Verify versioning service methods[39m[0m

      at toBe (tests/unit/domain/services/model-recovery-service.test.ts:770:58)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/model-recovery-service.test.ts:767:22)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ DomainEventGeneration_ForRecovery_ShouldFollowEventSourcingPatterns ‚Ä∫ should generate appropriate domain events for recovery operations

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 4

    - ObjectContaining {
    -   "modelId": "recoverable-model-123",
    -   "restoredAt": Any<Date>,
    + Object {
    +   "aggregateId": "recoverable-model-123",
    +   "reason": "Domain event testing",
    +   "restoredAt": "2025-08-28T15:14:13.331Z",
        "restoredBy": "event-tester",
      }

    [0m [90m 805 |[39m         expect(undeletedEvent)[33m.[39mtoBeDefined()[33m;[39m
     [90m 806 |[39m         expect(undeletedEvent[33m.[39maggregateId)[33m.[39mtoBe([32m'recoverable-model-123'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 807 |[39m         expect(undeletedEvent[33m.[39mgetEventData())[33m.[39mtoEqual(
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 808 |[39m           expect[33m.[39mobjectContaining({
     [90m 809 |[39m             modelId[33m:[39m [32m'recoverable-model-123'[39m[33m,[39m
     [90m 810 |[39m             restoredBy[33m:[39m [32m'event-tester'[39m[33m,[39m[0m

      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:807:47)

  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ ErrorHandling_ShouldUseResultPattern ‚Ä∫ should use Result pattern for error handling throughout recovery coordination

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 836 |[39m
     [90m 837 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 838 |[39m         expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 839 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Dependency validation service unavailable'[39m)[33m;[39m
     [90m 840 |[39m         
     [90m 841 |[39m         [90m// Verify no partial state changes occurred[39m[0m

      at Object.toBe (tests/unit/domain/services/model-recovery-service.test.ts:838:34)

FAIL tests/e2e/focused-user-workflows.e2e.test.ts
  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ BasicWorkflowCreation_E2E ‚Ä∫ should_ExecuteBasicWorkflowChain_WithExistingUseCases

    expect(received).toBe(expected) // Object.is equality

    Expected: "00000001-0000-4000-8000-000000010000"
    Received: undefined

    [0m [90m 349 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockModelRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 350 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 351 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mmodelId)[33m.[39mtoBe(modelId)[33m;[39m
     [90m     |[39m                                            [31m[1m^[22m[39m
     [90m 352 |[39m
     [90m 353 |[39m         [90m// UC-002: Add Container Node [39m
     [90m 354 |[39m         [36mconst[39m containerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/focused-user-workflows.e2e.test.ts:351:44)

  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyEnforcement_E2E ‚Ä∫ should_PreventInvalidOperations_WithProperErrorMessages

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Valid position coordinates are required"

    [0m [90m 456 |[39m
     [90m 457 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 458 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 459 |[39m
     [90m 460 |[39m         [90m// Test adding action to non-existent container[39m
     [90m 461 |[39m         [36mconst[39m createResult [33m=[39m [36mawait[39m createModelUseCase[33m.[39mexecute({[0m

      at Object.toContain (tests/e2e/focused-user-workflows.e2e.test.ts:458:42)

  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ INTEGRATION WITH EXISTING ARCHITECTURE ‚Ä∫ CleanArchitectureCompliance_E2E ‚Ä∫ should_MaintainArchitecturalBoundaries_ThroughoutWorkflow

    expect(received).toBe(expected) // Object.is equality

    Expected: "00000004-0000-4000-8000-000000040000"
    Received: undefined

    [0m [90m 580 |[39m         [36mconst[39m storedModel [33m=[39m mockModelRepository[33m.[39mgetModel(modelId)[33m;[39m
     [90m 581 |[39m         expect(storedModel)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 582 |[39m         expect(storedModel[33m.[39mmodelId)[33m.[39mtoBe(modelId)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 583 |[39m
     [90m 584 |[39m         [90m// Verify domain events were published (event-driven architecture)[39m
     [90m 585 |[39m         [36mconst[39m events [33m=[39m mockEventBus[33m.[39mgetAllEvents()[33m;[39m[0m

      at Object.toBe (tests/e2e/focused-user-workflows.e2e.test.ts:582:37)

FAIL tests/unit/domain/services/model-versioning-service.test.ts
  ‚óè ModelVersioningService ‚Ä∫ Domain Service Coordination ‚Ä∫ Version Change Analysis ‚Ä∫ analyzeChanges_NodePropertyModification_DetectsSpecificChanges

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 1
    Received array:  ["0000006a-0000-4000-8000-0000006a0000"]

    [0m [90m 933 |[39m         [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 934 |[39m         expect(changes[33m.[39mmodifiedNodes)[33m.[39mtoContain(nodeId[33m.[39mvalue)[33m;[39m
    [31m[1m>[22m[39m[90m 935 |[39m         expect(changes[33m.[39maddedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 936 |[39m         expect(changes[33m.[39mremovedNodes)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m
     [90m 937 |[39m       })[33m;[39m
     [90m 938 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/model-versioning-service.test.ts:935:36)

  ‚óè ModelVersioningService ‚Ä∫ Domain Service Coordination ‚Ä∫ Version Change Analysis ‚Ä∫ analyzeChanges_DependencyChanges_CategorizesDependencyModifications

    expect(received).toContain(expected) // indexOf

    Expected value: "00000073-0000-4000-8000-000000730000"
    Received array: []

    [0m [90m 1016 |[39m         expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 1017 |[39m         [36mconst[39m changes [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 1018 |[39m         expect(changes[33m.[39mmodifiedNodes)[33m.[39mtoContain(node2Id[33m.[39mvalue)[33m;[39m
     [90m      |[39m                                       [31m[1m^[22m[39m
     [90m 1019 |[39m       })[33m;[39m
     [90m 1020 |[39m
     [90m 1021 |[39m       it([32m'analyzeChanges_MetadataEvolution_TracksMetadataHistory'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/services/model-versioning-service.test.ts:1018:39)

FAIL tests/unit/domain/services/node-context-access-service.test.ts
  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle override rules in context propagation

    TypeError: Cannot read properties of undefined (reading 'constant')

    [0m [90m 326 |[39m         expect(updatedChild)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 327 |[39m         expect(updatedChild[33m.[39mvalue[33m.[39mdata[33m.[39msetting)[33m.[39mtoBe([32m'child-value'[39m)[33m;[39m [90m// Override allowed[39m
    [31m[1m>[22m[39m[90m 328 |[39m         expect(updatedChild[33m.[39mvalue[33m.[39minheritedData[33m.[39mconstant)[33m.[39mtoBe([32m'unchangeable'[39m)[33m;[39m [90m// No override[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 329 |[39m       })[33m;[39m
     [90m 330 |[39m
     [90m 331 |[39m       it([32m'should handle deep context propagation chains'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.constant (tests/unit/domain/services/node-context-access-service.test.ts:328:49)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle deep context propagation chains

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 371 |[39m         [36mconst[39m hierarchicalResult [33m=[39m contextService[33m.[39mgetHierarchicalContext(childNodeId)[33m;[39m
     [90m 372 |[39m         expect(hierarchicalResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 373 |[39m         expect(hierarchicalResult[33m.[39mvalue[33m.[39mlevels)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 374 |[39m       })[33m;[39m
     [90m 375 |[39m
     [90m 376 |[39m       it([32m'should reject propagation from non-existent context'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:373:49)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return complete hierarchical context

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 421 |[39m         [36mconst[39m hierarchical [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 422 |[39m         expect(hierarchical[33m.[39mnodeId)[33m.[39mtoEqual(childNodeId)[33m;[39m
    [31m[1m>[22m[39m[90m 423 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m3[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 424 |[39m         
     [90m 425 |[39m         [90m// Verify level order (child -> parent -> grandparent)[39m
     [90m 426 |[39m         expect(hierarchical[33m.[39mlevels[[35m0[39m][33m.[39mscope)[33m.[39mtoBe([32m'execution'[39m)[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:423:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return single level for nodes without parents

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 447 |[39m         expect(hierarchicalResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 448 |[39m         [36mconst[39m hierarchical [33m=[39m hierarchicalResult[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 449 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 450 |[39m         expect(hierarchical[33m.[39mlevels[[35m0[39m][33m.[39mdata[33m.[39mstandalone)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 451 |[39m       })[33m;[39m
     [90m 452 |[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:449:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should handle deep hierarchies efficiently

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

    [0m [90m 477 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 478 |[39m         [36mconst[39m hierarchical [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 479 |[39m         expect(hierarchical[33m.[39mlevels)[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 480 |[39m         expect(hierarchical[33m.[39mtotalLevels)[33m.[39mtoBe([35m5[39m)[33m;[39m
     [90m 481 |[39m         expect(hierarchical[33m.[39mmaxDepthReached)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 482 |[39m       })[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:479:37)

  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should reject hierarchical request for non-existent node

    expect(received).toContain(expected) // indexOf

    Expected substring: "Context not found"
    Received string:    "Node context not found"

    [0m [90m 488 |[39m         [90m// Assert[39m
     [90m 489 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 490 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Context not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 491 |[39m       })[33m;[39m
     [90m 492 |[39m     })[33m;[39m
     [90m 493 |[39m   })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:490:30)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate read access successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 515 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 516 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 517 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 518 |[39m         expect(access[33m.[39mlevel)[33m.[39mtoBe([32m'read'[39m)[33m;[39m
     [90m 519 |[39m         expect(access[33m.[39maccessibleProperties)[33m.[39mtoContain([32m'public'[39m)[33m;[39m
     [90m 520 |[39m         expect(access[33m.[39mrestrictedProperties)[33m.[39mnot[33m.[39mtoContain([32m'public'[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:517:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate write access with proper permissions

    TypeError: Cannot set properties of undefined (setting 'accessLevel')

    [0m [90m 531 |[39m
     [90m 532 |[39m         [90m// Update context to have write access level[39m
    [31m[1m>[22m[39m[90m 533 |[39m         (contextService [36mas[39m any)[33m.[39mcontexts[33m.[39m[36mget[39m(parentNodeId[33m.[39mtoString())[33m.[39maccessLevel [33m=[39m [32m'read-write'[39m[33m;[39m
     [90m     |[39m                                                                                  [31m[1m^[22m[39m
     [90m 534 |[39m
     [90m 535 |[39m         [90m// Act[39m
     [90m 536 |[39m         [36mconst[39m validation [33m=[39m contextService[33m.[39mvalidateContextAccess([0m

      at Object.<anonymous> (tests/unit/domain/services/node-context-access-service.test.ts:533:82)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should deny access for insufficient permissions

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 568 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 569 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 570 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 571 |[39m         expect(access[33m.[39mdenialReason)[33m.[39mtoContain([32m'Insufficient permissions'[39m)[33m;[39m
     [90m 572 |[39m       })[33m;[39m
     [90m 573 |[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:570:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should handle cross-node access validation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 600 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 601 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 602 |[39m         expect(access[33m.[39mgranted)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// Child should have read access to parent[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 603 |[39m         expect(access[33m.[39minheritanceAllowed)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 604 |[39m       })[33m;[39m
     [90m 605 |[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:602:32)

  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate property-level access controls

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

    [0m [90m 628 |[39m         expect(validation)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 629 |[39m         [36mconst[39m access [33m=[39m validation[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 630 |[39m         expect(access[33m.[39maccessibleProperties)[33m.[39mtoContain([32m'public'[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 631 |[39m         [90m// protected and private access depends on relationship and permissions[39m
     [90m 632 |[39m       })[33m;[39m
     [90m 633 |[39m     })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:630:45)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should clone context scope successfully

    Expected [object Object] to be a successful Result

    [0m [90m 667 |[39m           nested[33m:[39m { value[33m:[39m [35m99[39m } 
     [90m 668 |[39m         })[33m;[39m
    [31m[1m>[22m[39m[90m 669 |[39m         expect(updateResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 670 |[39m         
     [90m 671 |[39m         [36mconst[39m originalContext [33m=[39m contextService[33m.[39mgetNodeContext(parentNodeId)[33m;[39m
     [90m 672 |[39m         expect(originalContext)[33m.[39mtoBeValidResult()[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:669:30)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should handle cloning with transformation rules

    TypeError: transformationRules is not iterable

    [0m [90m 837 |[39m     [90m// Apply transformation rules if provided[39m
     [90m 838 |[39m     [36mif[39m (transformationRules) {
    [31m[1m>[22m[39m[90m 839 |[39m       [36mfor[39m ([36mconst[39m rule [36mof[39m transformationRules) {
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 840 |[39m         [36mif[39m (rule[33m.[39minheritanceType [33m===[39m [32m'override'[39m [33m&&[39m rule[33m.[39mdefaultValue [33m!==[39m undefined) {
     [90m 841 |[39m           clonedData[rule[33m.[39mpropertyName] [33m=[39m rule[33m.[39mdefaultValue[33m;[39m
     [90m 842 |[39m         }[0m

      at NodeContextAccessService.transformationRules [as cloneContextScope] (lib/domain/services/node-context-access-service.ts:839:26)
      at Object.cloneContextScope (tests/unit/domain/services/node-context-access-service.test.ts:690:44)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merge conflicts with precedence rules

    TypeError: precedenceRules.map is not a function

    [0m [90m 872 |[39m     
     [90m 873 |[39m     [36mif[39m (precedenceRules) {
    [31m[1m>[22m[39m[90m 874 |[39m       [36mconst[39m priorityMap [33m=[39m [36mnew[39m [33mMap[39m(precedenceRules[33m.[39mmap(rule [33m=>[39m [rule[33m.[39mcontextId[33m,[39m rule[33m.[39mpriority]))[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 875 |[39m       [36mconst[39m sortedContexts [33m=[39m sourceContexts[33m.[39msort((a[33m,[39m b) [33m=>[39m {
     [90m 876 |[39m         [36mconst[39m priorityA [33m=[39m priorityMap[33m.[39m[36mget[39m(a[33m.[39mcontextId) [33m?[39m[33m?[39m [35m0[39m[33m;[39m
     [90m 877 |[39m         [36mconst[39m priorityB [33m=[39m priorityMap[33m.[39m[36mget[39m(b[33m.[39mcontextId) [33m?[39m[33m?[39m [35m0[39m[33m;[39m[0m

      at NodeContextAccessService.map [as mergeContextScopes] (lib/domain/services/node-context-access-service.ts:874:51)
      at Object.mergeContextScopes (tests/unit/domain/services/node-context-access-service.test.ts:784:44)

  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merging with non-existent contexts

    expect(received).toContain(expected) // indexOf

    Expected substring: "One or more source contexts not found"
    Received string:    "No valid source contexts found"

    [0m [90m 828 |[39m         [90m// Assert[39m
     [90m 829 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
    [31m[1m>[22m[39m[90m 830 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'One or more source contexts not found'[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 831 |[39m       })[33m;[39m
     [90m 832 |[39m     })[33m;[39m
     [90m 833 |[39m   })[33m;[39m[0m

      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:830:30)

  ‚óè NodeContextAccessService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle circular reference prevention

    Expected [object Object] to be a failed Result

    [0m [90m 881 |[39m
     [90m 882 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 883 |[39m       expect(circularResult)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 884 |[39m       expect(circularResult[33m.[39merror)[33m.[39mtoContain([32m'Circular reference detected'[39m)[33m;[39m
     [90m 885 |[39m     })[33m;[39m
     [90m 886 |[39m[0m

      at Object.toBeFailureResult (tests/unit/domain/services/node-context-access-service.test.ts:883:30)

  ‚óè NodeContextAccessService ‚Ä∫ error handling and edge cases ‚Ä∫ should maintain context isolation between different scopes

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 971 |[39m       [90m// Assert - Isolated scope should restrict access[39m
     [90m 972 |[39m       expect(crossAccessValidation)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 973 |[39m       expect(crossAccessValidation[33m.[39mvalue[33m.[39mgranted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 974 |[39m     })[33m;[39m
     [90m 975 |[39m   })[33m;[39m
     [90m 976 |[39m })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:973:51)

FAIL tests/unit/domain/services/node-dependency-service-uc010.test.ts
  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Execution Order Optimization and Calculation ‚Ä∫ Parallel Execution Path Optimization ‚Ä∫ should identify critical path for execution time estimation

    expect(received).toHaveLength(expected)

    Expected length: 6
    Received length: 7
    Received array:  ["8364a797-bda8-4bc2-88ec-c2c55410d335", "3a5db9a2-9218-4d8b-8857-ba5bd7cc75d7", "a3fe8f04-4e67-4f0c-8812-664ff8f265ce", "a6909d14-f0bd-4fa0-8862-df2b4974e0cb", "66edd6a5-8225-4549-881b-37bc14e9136b", "8fd6c4f1-0711-4b9f-8877-38209296e7e0", "f4287d78-4852-446d-8843-8516eb3c7b11"]

    [0m [90m 720 |[39m         
     [90m 721 |[39m         [90m// Critical path should be the longest path (through slow nodes)[39m
    [31m[1m>[22m[39m[90m 722 |[39m         expect(criticalPath)[33m.[39mtoHaveLength([35m6[39m)[33m;[39m [90m// start -> slowA -> slowB -> slowC -> slowD -> slowEnd[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 723 |[39m         expect(criticalPath)[33m.[39mtoContain(start[33m.[39mnodeId[33m.[39mtoString())[33m;[39m
     [90m 724 |[39m         expect(criticalPath)[33m.[39mtoContain(slowA[33m.[39mnodeId[33m.[39mtoString())[33m;[39m
     [90m 725 |[39m         expect(criticalPath)[33m.[39mtoContain(slowB[33m.[39mnodeId[33m.[39mtoString())[33m;[39m[0m

      at Object.toHaveLength (tests/unit/domain/services/node-dependency-service-uc010.test.ts:722:30)

  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Execution Order Optimization and Calculation ‚Ä∫ Parallel Execution Path Optimization ‚Ä∫ should handle execution priority metadata for path optimization

    expect(received).toBe(expected) // Object.is equality

    Expected: "high-priority"
    Received: "fc1e788d-56b6-4197-8855-5736e652d52a"

    [0m [90m 772 |[39m         
     [90m 773 |[39m         [90m// Verify priority ordering within the same level[39m
    [31m[1m>[22m[39m[90m 774 |[39m         expect(parallelPaths[[35m0[39m][33m.[39mnodeId)[33m.[39mtoBe([32m'high-priority'[39m)[33m;[39m [90m// Highest priority first[39m
     [90m     |[39m                                         [31m[1m^[22m[39m
     [90m 775 |[39m         expect(parallelPaths[[35m1[39m][33m.[39mnodeId)[33m.[39mtoBe([32m'medium-priority'[39m)[33m;[39m
     [90m 776 |[39m         expect(parallelPaths[[35m2[39m][33m.[39mnodeId)[33m.[39mtoBe([32m'low-priority'[39m)[33m;[39m [90m// Lowest priority last[39m
     [90m 777 |[39m         [0m

      at Object.toBe (tests/unit/domain/services/node-dependency-service-uc010.test.ts:774:41)

  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Execution Order Optimization and Calculation ‚Ä∫ Large-Scale Optimization Performance ‚Ä∫ should efficiently calculate execution order for enterprise-scale graphs

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 839 |[39m             [90m// Nodes at levels > 0 should be able to parallel within their level[39m
     [90m 840 |[39m             [36mif[39m (levelIndex [33m>[39m [35m0[39m) {
    [31m[1m>[22m[39m[90m 841 |[39m               expect(path[33m?[39m[33m.[39mcanExecuteInParallel)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                                  [31m[1m^[22m[39m
     [90m 842 |[39m             }
     [90m 843 |[39m           })[33m;[39m
     [90m 844 |[39m         })[33m;[39m[0m

      at toBe (tests/unit/domain/services/node-dependency-service-uc010.test.ts:841:50)
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/node-dependency-service-uc010.test.ts:835:22)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/node-dependency-service-uc010.test.ts:834:26)

  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Clean Architecture Compliance with Complex Algorithms ‚Ä∫ Domain Service Boundary Validation ‚Ä∫ should maintain Clean Architecture principles during complex graph operations

    Expected [object Object] to be a successful Result

    [0m [90m 894 |[39m         expect(pathsResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 895 |[39m         expect(criticalResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 896 |[39m         expect(reachableResult)[33m.[39mtoBeValidResult()[33m;[39m
     [90m     |[39m                                 [31m[1m^[22m[39m
     [90m 897 |[39m         
     [90m 898 |[39m         [90m// Verify service returns domain objects and value objects only[39m
     [90m 899 |[39m         expect(graphResult[33m.[39mvalue[33m.[39mnodes)[33m.[39mtoBeInstanceOf([33mMap[39m)[33m;[39m[0m

      at Object.toBeValidResult (tests/unit/domain/services/node-dependency-service-uc010.test.ts:896:33)

  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Clean Architecture Compliance with Complex Algorithms ‚Ä∫ Domain Service Boundary Validation ‚Ä∫ should handle domain validation rules consistently across all operations

    Expected [object Object] to be a failed Result

    [0m [90m 959 |[39m         invalidNode[33m.[39maddDependency([32m'non-existent-node'[39m)[33m;[39m
     [90m 960 |[39m         [36mconst[39m invalidResult [33m=[39m dependencyService[33m.[39mbuildDependencyGraph([invalidNode])[33m;[39m
    [31m[1m>[22m[39m[90m 961 |[39m         expect(invalidResult)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 962 |[39m         expect(invalidResult[33m.[39merror)[33m.[39mtoContain([32m'references non-existent dependency'[39m)[33m;[39m
     [90m 963 |[39m
     [90m 964 |[39m         [90m// Act & Assert - Service should handle all validation consistently[39m[0m

      at Object.toBeFailureResult (tests/unit/domain/services/node-dependency-service-uc010.test.ts:961:31)

FAIL tests/e2e/comprehensive-user-workflows.e2e.test.ts
  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 522 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 523 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 524 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe(workflowName)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 525 |[39m
     [90m 526 |[39m         [90m// UC-002: Add Container Node (must create model before adding nodes)[39m
     [90m 527 |[39m         [36mconst[39m addContainerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/comprehensive-user-workflows.e2e.test.ts:524:40)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Node name is required"

    [0m [90m 619 |[39m         [90m// Assert: Dependency violation should be caught[39m
     [90m 620 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 621 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 622 |[39m
     [90m 623 |[39m         [90m// Verify no side effects occurred[39m
     [90m 624 |[39m         [36mconst[39m auditLogs [33m=[39m [36mawait[39m mockAuditRepository[33m.[39mfindByModelId(nonExistentModelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:621:42)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution

    expect(received).toContain(expected) // indexOf

    Expected substring: "must be published"
    Received string:    "Valid environment is required (development, staging, production)"

    [0m [90m 648 |[39m         [90m// Assert: Execution should fail due to publication prerequisite[39m
     [90m 649 |[39m         expect(executeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 650 |[39m         expect(executeResult[33m.[39merror)[33m.[39mtoContain([32m'must be published'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 651 |[39m
     [90m 652 |[39m         [90m// Verify model status is still DRAFT[39m
     [90m 653 |[39m         [36mconst[39m model [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:650:37)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ WorkflowVersioning_E2E ‚Ä∫ should_CreateNewVersion_AfterSuccessfulExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:679:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_CoordinateComplexExecution_WithMultipleOrchestrationServices

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:743:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_HandleCascadingFailures_InComplexPipeline

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:890:41)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_ExecuteCompleteAIAgentWorkflow_WithRegistrationDiscoveryExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:966:45)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_HandleAgentFailures_WithGracefulDegradation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1144 |[39m         })[33m;[39m
     [90m 1145 |[39m
    [31m[1m>[22m[39m[90m 1146 |[39m         expect(errorHandlingResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                               [31m[1m^[22m[39m
     [90m 1147 |[39m
     [90m 1148 |[39m         [90m// Act: Execute with agent failure simulation[39m
     [90m 1149 |[39m         [36mconst[39m containerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1146:47)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_IntegrateAcrossFeaturesWithLinkStrengthCalculation

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1209:55)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_PropagateErrorsAcrossCrossFeatureLinks

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1353:49)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Error Recovery Across Dependency Boundaries ‚Ä∫ SystemWideRecovery_E2E ‚Ä∫ should_RecoverFromComplexFailureScenarios_AcrossMultipleLayers

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1490:51)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ All Application Services Integration ‚Ä∫ CompleteSystemIntegration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InComplexWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1654:61)

  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Real User Scenarios with Actual Data Flows ‚Ä∫ ProductionLikeWorkflows_E2E ‚Ä∫ should_ExecuteRealisticBusinessWorkflow_WithActualDataTransformations

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:2077:52)

FAIL tests/e2e/complete-user-workflow-scenarios.e2e.test.ts
  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteModelLifecycleWorkflow_E2E ‚Ä∫ should_ExecuteCompleteModelLifecycle_FromCreationToArchival

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 687 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockModelRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 688 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 689 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe([32m'Complete Lifecycle Model'[39m)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 690 |[39m
     [90m 691 |[39m         [90m// PHASE 2: UC-002 - Add Container Node (IO Input)[39m
     [90m 692 |[39m         [36mconst[39m inputNodeResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:689:40)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyViolationHandling_E2E ‚Ä∫ should_PreventDependencyViolations_AndMaintainSystemIntegrity

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Valid position coordinates are required"

    [0m [90m 881 |[39m
     [90m 882 |[39m         expect(addNodeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 883 |[39m         expect(addNodeResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 884 |[39m
     [90m 885 |[39m         [90m// Test UC-003 dependency violation (add action to non-existent container)[39m
     [90m 886 |[39m         [36mconst[39m createResult [33m=[39m [36mawait[39m createModelUseCase[33m.[39mexecute({[0m

      at Object.toContain (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:883:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ComplexOrchestrationWorkflow_E2E ‚Ä∫ should_CoordinateAllOrchestrationServices_InComplexExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:954:49)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ErrorRecoveryInComplexPipeline_E2E ‚Ä∫ should_RecoverFromFailures_AcrossComplexOrchestrationLayers

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1168:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ CompleteAgentWorkflow_E2E ‚Ä∫ should_ExecuteCompleteAgentWorkflow_FromRegistrationToExecution

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1263 |[39m         })[33m;[39m
     [90m 1264 |[39m
    [31m[1m>[22m[39m[90m 1265 |[39m         expect(agent1Registration[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                              [31m[1m^[22m[39m
     [90m 1266 |[39m         expect(agent1Registration[33m.[39mvalue[33m.[39magentId)[33m.[39mtoBe([32m'test-agent-processing'[39m)[33m;[39m
     [90m 1267 |[39m
     [90m 1268 |[39m         [36mconst[39m agent2Registration [33m=[39m [36mawait[39m registerAgentUseCase[33m.[39mexecute({[0m

      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1265:46)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AgentIntegrationWithModels_E2E ‚Ä∫ should_IntegrateAgents_WithCompleteModelWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1421:37)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ CROSS-FEATURE INTEGRATION: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CompleteCrossFeatureWorkflow_E2E ‚Ä∫ should_ExecuteCompleteCrossFeatureIntegration_WithLinkingAndExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1495:55)

  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ APPLICATION SERVICES COORDINATION ‚Ä∫ CompleteServiceOrchestration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InCompleteWorkflow

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 1742 |[39m         })[33m;[39m
     [90m 1743 |[39m
    [31m[1m>[22m[39m[90m 1744 |[39m         expect(modelManagementResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m      |[39m                                                 [31m[1m^[22m[39m
     [90m 1745 |[39m         [36mconst[39m orchestrationModelId [33m=[39m modelManagementResult[33m.[39mvalue[33m.[39mmodelId[33m;[39m
     [90m 1746 |[39m
     [90m 1747 |[39m         [90m// PHASE 2: AI Agent Management Service coordination[39m[0m

      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1744:49)

FAIL tests/e2e/primary-workflow-chain.e2e.test.ts
  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed

    TypeError: Cannot read properties of undefined (reading 'toString')

    [0m [90m 336 |[39m         [36mconst[39m createdModel [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m
     [90m 337 |[39m         expect(createdModel[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 338 |[39m         expect(createdModel[33m.[39mvalue[33m.[39mname[33m.[39mtoString())[33m.[39mtoBe(workflowName)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 339 |[39m
     [90m 340 |[39m         [90m// UC-002: Add Container Node (must create model before adding nodes)[39m
     [90m 341 |[39m         [36mconst[39m addContainerResult [33m=[39m [36mawait[39m addContainerUseCase[33m.[39mexecute({[0m

      at Object.toString (tests/e2e/primary-workflow-chain.e2e.test.ts:338:40)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Invalid node type specified"

    [0m [90m 428 |[39m         [90m// Assert: Dependency violation should be caught[39m
     [90m 429 |[39m         expect(addContainerResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 430 |[39m         expect(addContainerResult[33m.[39merror)[33m.[39mtoContain([32m'not found'[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 431 |[39m
     [90m 432 |[39m         [90m// Verify no side effects occurred[39m
     [90m 433 |[39m         [36mconst[39m auditLogs [33m=[39m [36mawait[39m mockAuditRepository[33m.[39mfindByModelId(nonExistentModelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:430:42)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution

    expect(received).toContain(expected) // indexOf

    Expected substring: "must be published"
    Received string:    "Valid environment is required (development, staging, production)"

    [0m [90m 457 |[39m         [90m// Assert: Execution should fail due to publication prerequisite[39m
     [90m 458 |[39m         expect(executeResult[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 459 |[39m         expect(executeResult[33m.[39merror)[33m.[39mtoContain([32m'must be published'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 460 |[39m
     [90m 461 |[39m         [90m// Verify model status is still DRAFT[39m
     [90m 462 |[39m         [36mconst[39m model [33m=[39m [36mawait[39m mockRepository[33m.[39mfindById(modelId)[33m;[39m[0m

      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:459:37)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ValidateWorkflowStructure_BeforePublishing

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 485 |[39m
     [90m 486 |[39m         [90m// Assert: Validation should fail for empty workflow[39m
    [31m[1m>[22m[39m[90m 487 |[39m         expect(validateResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m [90m// The operation succeeds[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 488 |[39m         expect(validateResult[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m [90m// But validation reports invalid[39m
     [90m 489 |[39m
     [90m 490 |[39m         [90m// Try to publish with validation enforcement[39m[0m

      at Object.toBe (tests/e2e/primary-workflow-chain.e2e.test.ts:487:42)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_HandleComplexWorkflow_WithMultipleNodesAndActions

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:549:47)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ ErrorRecovery_E2E ‚Ä∫ should_RecoverFromTransientFailures_DuringExecution

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:640:37)

  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Architectural Compliance Validation ‚Ä∫ CleanArchitectureCompliance_E2E ‚Ä∫ should_MaintainLayerSeparation_ThroughoutWorkflow

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:702:41)

FAIL tests/unit/domain/entities/function-model-archive.test.ts
  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should set status to ARCHIVED when soft deleting

    expect(received).toBe(expected) // Object.is equality

    Expected: "archived"
    Received: "draft"

    [0m [90m 262 |[39m       [90m// Assert[39m
     [90m 263 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 264 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mARCHIVED[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 265 |[39m       expect(model[33m.[39misDeleted())[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 266 |[39m       expect(model[33m.[39mdeletedAt)[33m.[39mtoBeDefined()[33m;[39m
     [90m 267 |[39m       expect(model[33m.[39mdeletedBy)[33m.[39mtoBe([32m'test-user'[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:264:28)

  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should handle soft delete without deletedBy parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: "archived"
    Received: "draft"

    [0m [90m 274 |[39m       [90m// Assert[39m
     [90m 275 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 276 |[39m       expect(model[33m.[39mstatus)[33m.[39mtoBe([33mModelStatus[39m[33m.[39m[33mARCHIVED[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 277 |[39m       expect(model[33m.[39misDeleted())[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 278 |[39m       expect(model[33m.[39mdeletedAt)[33m.[39mtoBeDefined()[33m;[39m
     [90m 279 |[39m       expect(model[33m.[39mdeletedBy)[33m.[39mtoBeUndefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:276:28)

FAIL tests/unit/domain/use-cases/archive-function-model-use-case.test.ts
  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Successful Archive Operations ‚Ä∫ should successfully archive a DRAFT model

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

    [0m [90m 128 |[39m
     [90m 129 |[39m       expect(mockRepository[33m.[39msave)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 130 |[39m       expect(mockEventBus[33m.[39mpublish)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 131 |[39m       
     [90m 132 |[39m       [90m// Verify event data[39m
     [90m 133 |[39m       [36mconst[39m publishCall [33m=[39m mockEventBus[33m.[39mpublish[33m.[39mmock[33m.[39mcalls[[35m0[39m][[35m0[39m][33m;[39m[0m

      at Object.toHaveBeenCalledTimes (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:130:36)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Successful Archive Operations ‚Ä∫ should successfully archive a PUBLISHED model with warnings

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 139 |[39m       [90m// Arrange - publish the model first[39m
     [90m 140 |[39m       [36mconst[39m publishResult [33m=[39m testModel[33m.[39mpublish()[33m;[39m
    [31m[1m>[22m[39m[90m 141 |[39m       expect(publishResult[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 142 |[39m
     [90m 143 |[39m       [36mconst[39m command[33m:[39m [33mArchiveModelCommand[39m [33m=[39m {
     [90m 144 |[39m         modelId[33m:[39m [32m'test-archive-model-id'[39m[33m,[39m[0m

      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:141:39)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Dependency Validation and Risk Assessment ‚Ä∫ should block archive when circular dependencies exist

    expect(received).toContain(expected) // indexOf

    Expected substring: "blocking dependencies"
    Received string:    "Pre-archive validation failed: Cannot read properties of undefined (reading 'length')"

    [0m [90m 311 |[39m       [90m// Assert[39m
     [90m 312 |[39m       expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 313 |[39m       expect(result[33m.[39merror)[33m.[39mtoContain([32m'blocking dependencies'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 314 |[39m       expect(result[33m.[39merror)[33m.[39mtoContain([32m'Circular dependency detected'[39m)[33m;[39m
     [90m 315 |[39m     })[33m;[39m
     [90m 316 |[39m[0m

      at Object.toContain (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:313:28)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Dependency Validation and Risk Assessment ‚Ä∫ should assess high risk and block when enforceRiskAssessment is true

    expect(received).toContain(expected) // indexOf

    Expected substring: "High-risk archival blocked by policy"
    Received string:    "Failed to archive function model: Cannot read properties of undefined (reading 'isFailure')"

    [0m [90m 345 |[39m       [90m// Assert[39m
     [90m 346 |[39m       expect(result[33m.[39misFailure)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 347 |[39m       expect(result[33m.[39merror)[33m.[39mtoContain([32m'High-risk archival blocked by policy'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 348 |[39m     })[33m;[39m
     [90m 349 |[39m
     [90m 350 |[39m     it([32m'should allow high risk archival when enforceRiskAssessment is false'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toContain (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:347:28)

  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Event Publishing and Audit Trail ‚Ä∫ should publish ModelArchived event with complete audit data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 469 |[39m
     [90m 470 |[39m       [90m// Assert[39m
    [31m[1m>[22m[39m[90m 471 |[39m       expect(result[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 472 |[39m       expect(mockEventBus[33m.[39mpublish)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
     [90m 473 |[39m       
     [90m 474 |[39m       [36mconst[39m eventCall [33m=[39m mockEventBus[33m.[39mpublish[33m.[39mmock[33m.[39mcalls[[35m0[39m][[35m0[39m][33m;[39m[0m

      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:471:32)

FAIL tests/unit/domain/services/action-node-orchestration-service.test.ts
  ‚óè ActionNodeOrchestrationService ‚Ä∫ action orchestration planning ‚Ä∫ orchestrateNodeActions ‚Ä∫ should propagate context to all actions

    expect(received).toEqual(expected) // deep equality

    Expected: {"executionId": "test-exec", "parameters": {"environment": "test", "userId": "user-123"}}
    Received: undefined

    [0m [90m 131 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 132 |[39m         expect(result[33m.[39mvalue[33m.[39mcontextPropagation)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 133 |[39m         expect(result[33m.[39mvalue[33m.[39mcontextPropagation[[32m'test-exec'[39m])[33m.[39mtoEqual(context)[33m;[39m
     [90m     |[39m                                                              [31m[1m^[22m[39m
     [90m 134 |[39m       })[33m;[39m
     [90m 135 |[39m     })[33m;[39m
     [90m 136 |[39m[0m

      at Object.toEqual (tests/unit/domain/services/action-node-orchestration-service.test.ts:133:62)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should coordinate parallel actions successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "parallel-group-1"
    Received: undefined

    [0m [90m 250 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 251 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 252 |[39m         expect(parallelResult[33m.[39mgroupId)[33m.[39mtoBe([32m'parallel-group-1'[39m)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 253 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 254 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 255 |[39m         expect(parallelResult[33m.[39mtotalExecutionTime)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:252:40)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should respect max concurrency limits

    expect(received).toBe(expected) // Object.is equality

    Expected: 5
    Received: undefined

    [0m [90m 286 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 287 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 288 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m5[39m)[33m;[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 289 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 290 |[39m         expect(parallelResult[33m.[39mconcurrencyRespected)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 291 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:288:48)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle parallel execution failures with different strategies

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 326 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 327 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 328 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m [90m// Both attempted[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 329 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// One failed[39m
     [90m 330 |[39m         
     [90m 331 |[39m         [90m// Cleanup[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:328:48)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle empty parallel group

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 348 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 349 |[39m         [36mconst[39m parallelResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 350 |[39m         expect(parallelResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 351 |[39m         expect(parallelResult[33m.[39mfailedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 352 |[39m       })[33m;[39m
     [90m 353 |[39m     })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:350:48)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should execute actions sequentially in order

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 385 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 386 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 387 |[39m         expect(sequentialResult[33m.[39mtotalActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 388 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 389 |[39m         expect(sequentialResult[33m.[39mfailurePoint)[33m.[39mtoBeUndefined()[33m;[39m
     [90m 390 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([[32m'First Sequential'[39m[33m,[39m [32m'Second Sequential'[39m])[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:387:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should stop on first failure in sequential execution

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 432 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 433 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 434 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 435 |[39m         expect(sequentialResult[33m.[39mfailurePoint)[33m.[39mtoBe([35m1[39m)[33m;[39m [90m// Failed at second action (index 1)[39m
     [90m 436 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([[32m'Good Action'[39m[33m,[39m [32m'Bad Action'[39m])[33m;[39m
     [90m 437 |[39m         [0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:434:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should pass context between sequential actions

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 467 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 468 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 469 |[39m         expect(sequentialResult[33m.[39mcontextChain)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 470 |[39m         expect(sequentialResult[33m.[39mcontextChain)[33m.[39mtoHaveLength([35m2[39m)[33m;[39m
     [90m 471 |[39m       })[33m;[39m
     [90m 472 |[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:469:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should handle empty sequential actions

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 478 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 479 |[39m         [36mconst[39m sequentialResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 480 |[39m         expect(sequentialResult[33m.[39mtotalActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 481 |[39m         expect(sequentialResult[33m.[39mcompletedSequence)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 482 |[39m         expect(sequentialResult[33m.[39mexecutionOrder)[33m.[39mtoEqual([])[33m;[39m
     [90m 483 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:480:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should evaluate and execute conditional actions based on criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 513 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 514 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 515 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 516 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 517 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 518 |[39m         expect(conditionalResult[33m.[39mevaluationResults)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:515:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should skip conditional actions when conditions not met

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 545 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 546 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 547 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 548 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 549 |[39m         expect(conditionalResult[33m.[39mevaluationResults[[35m0[39m][33m.[39mexecuted)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 550 |[39m         expect(conditionalResult[33m.[39mevaluationResults[[35m0[39m][33m.[39mskipReason)[33m.[39mtoBeDefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:547:51)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle complex conditional logic

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: undefined

    [0m [90m 591 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 592 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 593 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m3[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 594 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 595 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 596 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:593:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle empty conditional evaluations

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 603 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 604 |[39m         [36mconst[39m conditionalResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 605 |[39m         expect(conditionalResult[33m.[39mtotalEvaluations)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 606 |[39m         expect(conditionalResult[33m.[39mexecutedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 607 |[39m         expect(conditionalResult[33m.[39mskippedActions)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 608 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:605:52)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle action failures with retry strategy

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

    [0m [90m 636 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 637 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 638 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 639 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 640 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 641 |[39m         expect(failureResult[33m.[39mrecoveryActions)[33m.[39mtoBeDefined()[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:638:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should escalate failures after max retries exceeded

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 664 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 665 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 666 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 667 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 668 |[39m         expect(failureResult[33m.[39mescalatedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 669 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:666:47)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle multiple failure types simultaneously

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: undefined

    [0m [90m 695 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 696 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 697 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 698 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 699 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 700 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:697:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle empty failures array

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

    [0m [90m 707 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 708 |[39m         [36mconst[39m failureResult [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 709 |[39m         expect(failureResult[33m.[39mtotalFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                                             [31m[1m^[22m[39m
     [90m 710 |[39m         expect(failureResult[33m.[39mretriedFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 711 |[39m         expect(failureResult[33m.[39mpermanentFailures)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 712 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:709:45)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should validate action dependencies successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 741 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 742 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 743 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 744 |[39m         expect(validation[33m.[39mcircularDependencies)[33m.[39mtoEqual([])[33m;[39m
     [90m 745 |[39m         expect(validation[33m.[39munresolvedDependencies)[33m.[39mtoEqual([])[33m;[39m
     [90m 746 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:743:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect circular dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 772 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 773 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 774 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 775 |[39m         expect(validation[33m.[39mcircularDependencies)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m 776 |[39m         expect(validation[33m.[39mcircularDependencies[[35m0[39m])[33m.[39mtoContain(action1[33m.[39mactionId[33m.[39mtoString())[33m;[39m
     [90m 777 |[39m         expect(validation[33m.[39mcircularDependencies[[35m0[39m])[33m.[39mtoContain(action2[33m.[39mactionId[33m.[39mtoString())[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:774:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect unresolved dependencies

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

    [0m [90m 797 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
     [90m 798 |[39m         [36mconst[39m validation [33m=[39m result[33m.[39mvalue[33m;[39m
    [31m[1m>[22m[39m[90m 799 |[39m         expect(validation[33m.[39misValid)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 800 |[39m         expect(validation[33m.[39munresolvedDependencies)[33m.[39mtoContain(nonExistentActionId[33m.[39mtoString())[33m;[39m
     [90m 801 |[39m       })[33m;[39m
     [90m 802 |[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:799:36)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should handle empty dependencies gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

    [0m [90m 813 |[39m         [90m// Assert[39m
     [90m 814 |[39m         expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 815 |[39m         expect(result[33m.[39mvalue[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 816 |[39m       })[33m;[39m
     [90m 817 |[39m     })[33m;[39m
     [90m 818 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:815:38)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should monitor action progress successfully

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 841 |[39m         expect(progressResult[33m.[39mcompletedActions)[33m.[39mtoBeDefined()[33m;[39m
     [90m 842 |[39m         expect(progressResult[33m.[39minProgressActions)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 843 |[39m         expect(progressResult[33m.[39mfailedActions)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 844 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeGreaterThanOrEqual([35m0[39m)[33m;[39m
     [90m 845 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeLessThanOrEqual([35m100[39m)[33m;[39m
     [90m 846 |[39m       })[33m;[39m[0m

      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:843:46)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should calculate accurate progress percentages

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

    [0m [90m 880 |[39m         [36mconst[39m progressResult [33m=[39m result[33m.[39mvalue[33m;[39m
     [90m 881 |[39m         expect(progressResult[33m.[39mtotalActions)[33m.[39mtoBe([35m3[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 882 |[39m         expect(progressResult[33m.[39mcompletedActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 883 |[39m         expect(progressResult[33m.[39minProgressActions)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 884 |[39m         expect(progressResult[33m.[39moverallProgress)[33m.[39mtoBeCloseTo([35m33.33[39m[33m,[39m [35m1[39m)[33m;[39m [90m// 1/3 completed[39m
     [90m 885 |[39m       })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:882:49)

  ‚óè ActionNodeOrchestrationService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle malformed actions gracefully

    TypeError: Cannot set property actionId of #<ActionNode> which has only a getter

    [0m [90m 907 |[39m       
     [90m 908 |[39m       [90m// Corrupt the action by clearing critical properties[39m
    [31m[1m>[22m[39m[90m 909 |[39m       (malformedAction [36mas[39m any)[33m.[39mactionId [33m=[39m [36mnull[39m[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 910 |[39m       
     [90m 911 |[39m       [90m// Act[39m
     [90m 912 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m orchestrationService[33m.[39morchestrateNodeActions([malformedAction][33m,[39m {})[33m;[39m[0m

      at Object.<anonymous> (tests/unit/domain/services/action-node-orchestration-service.test.ts:909:40)

FAIL tests/unit/domain/services/model-archive-dependency-validation.test.ts
  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should validate no circular dependencies exist before archiving

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 70 |[39m
     [90m 71 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 72 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m    |[39m                               [31m[1m^[22m[39m
     [90m 73 |[39m       expect(nodeC[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 74 |[39m
     [90m 75 |[39m       [36mconst[39m nodes [33m=[39m [nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue[33m,[39m nodeC[33m.[39mvalue][33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:72:31)

  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should detect circular dependencies that prevent safe archiving

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 118 |[39m       })[33m;[39m
     [90m 119 |[39m
    [31m[1m>[22m[39m[90m 120 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 121 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 122 |[39m
     [90m 123 |[39m       [36mconst[39m nodes [33m=[39m [nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue][33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:120:31)

  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should calculate execution order for safe archival documentation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 185 |[39m
     [90m 186 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 187 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 188 |[39m       expect(nodeC[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 189 |[39m
     [90m 190 |[39m       [36mconst[39m nodes [33m=[39m [nodeC[33m.[39mvalue[33m,[39m nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue][33m;[39m [90m// Intentionally unordered[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:187:31)

  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should validate dependency graph structure for archival integrity

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 243 |[39m
     [90m 244 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 245 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 246 |[39m
     [90m 247 |[39m       [36mconst[39m nodes [33m=[39m [nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue][33m;[39m
     [90m 248 |[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:245:31)

  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should detect orphaned nodes before archival to ensure data completeness

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 309 |[39m       expect(nodeA[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 310 |[39m       expect(nodeB[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 311 |[39m       expect(nodeOrphan[33m.[39misSuccess)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 312 |[39m
     [90m 313 |[39m       [36mconst[39m nodes [33m=[39m [nodeA[33m.[39mvalue[33m,[39m nodeB[33m.[39mvalue[33m,[39m nodeOrphan[33m.[39mvalue][33m;[39m
     [90m 314 |[39m[0m

      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:311:36)

FAIL tests/unit/domain/services/model-version-change-detection.test.ts
  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_SingleNewNode_IdentifiesAddition

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:120:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_MultipleNewNodes_IdentifiesAllAdditions

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:143:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_DifferentNodeTypes_CategorizesByType

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:169:27)

  ‚óè Model Version Change Detection ‚Ä∫ Node Removal Detection ‚Ä∫ detectNodeRemovals_SingleRemovedNode_IdentifiesRemoval

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:196:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Removal Detection ‚Ä∫ detectNodeRemovals_CriticalNodeRemoval_IdentifiesImpact

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:220:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Property Modification Detection ‚Ä∫ detectPropertyChanges_MetadataEvolution_TracksMetadataChanges

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:386:25)

  ‚óè Model Version Change Detection ‚Ä∫ Node Property Modification Detection ‚Ä∫ detectPropertyChanges_DependencyModification_IdentifiesDependencyChanges

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:407:25)

  ‚óè Model Version Change Detection ‚Ä∫ Complex Change Scenarios ‚Ä∫ detectComplexChanges_MultipleChangeTypes_CategorizeCorrectly

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:434:25)

  ‚óè Model Version Change Detection ‚Ä∫ Complex Change Scenarios ‚Ä∫ detectComplexChanges_WorkflowRestructuring_IdentifiesStructuralChanges

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:466:27)

  ‚óè Model Version Change Detection ‚Ä∫ Change Analysis Performance ‚Ä∫ analyzeChanges_LargeModel_CompletesWithinTimeLimit

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:71:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:513:25)

  ‚óè Model Version Change Detection ‚Ä∫ Change Analysis Performance ‚Ä∫ analyzeChanges_DeepNesting_HandlesComplexity

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:543:25)

  ‚óè Model Version Change Detection ‚Ä∫ Business Rule Validation ‚Ä∫ validateChanges_BreakingChange_RecommendsMajorVersion

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:584:25)

  ‚óè Model Version Change Detection ‚Ä∫ Business Rule Validation ‚Ä∫ validateChanges_BackwardCompatibleAddition_RecommendsMinorVersion

    Cannot get value from failed result

    [0m [90m 16 |[39m   [36mpublic[39m [36mget[39m value()[33m:[39m [33mT[39m {
     [90m 17 |[39m     [36mif[39m ([33m![39m[36mthis[39m[33m.[39m_isSuccess) {
    [31m[1m>[22m[39m[90m 18 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m'Cannot get value from failed result'[39m)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 19 |[39m     }
     [90m 20 |[39m     [36mreturn[39m [36mthis[39m[33m.[39m_value[33m![39m[33m;[39m
     [90m 21 |[39m   }[0m

      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)
      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)
      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:611:25)

FAIL tests/unit/domain/services/error-handling-recovery-patterns.test.ts
  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution start failures

    Expected [object Object] to be a failed Result

    [0m [90m 303 |[39m
     [90m 304 |[39m         [90m// Assert[39m
    [31m[1m>[22m[39m[90m 305 |[39m         expect(result)[33m.[39mtoBeFailureResult()[33m;[39m
     [90m     |[39m                        [31m[1m^[22m[39m
     [90m 306 |[39m         expect(result[33m.[39merror)[33m.[39mtoContain([32m'Failed to start execution'[39m)[33m;[39m
     [90m 307 |[39m         expect(actionExecutionService[33m.[39misExecuting(testActionId))[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m 308 |[39m         [0m

      at Object.toBeFailureResult (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:305:24)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution timeout scenarios

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle resource exhaustion gracefully

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry exhaustion

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry policy evaluation failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle exponential backoff calculation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle metrics corruption recovery

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle invalid resource usage data

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle invalid model structure

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle extremely deep nesting

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle context initialization failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle level coordination failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle vertical nesting failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle horizontal scaling failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle context transformation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle consistency validation failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle invalid node ID formats

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle memory constraints

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle concurrent context operations conflicts

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle permission validation errors

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle circular reference detection failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ scope management failures ‚Ä∫ should handle scope isolation violations

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should handle workflow -> action -> context failure cascade

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should maintain system stability under high error rates

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should clean up resources after workflow failure

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should prevent memory leaks in long-running error scenarios

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ service coordination error handling ‚Ä∫ should handle inter-service communication failures

    Invalid node ID: Invalid node ID

    [0m [90m 237 |[39m     
     [90m 238 |[39m     [36mif[39m (nodeIdResult[33m.[39misFailure) {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Invalid node ID: ${nodeIdResult.error}`[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 240 |[39m     }
     [90m 241 |[39m     
     [90m 242 |[39m     [36mif[39m (positionResult[33m.[39misFailure) {[0m

      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)
      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)
      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)

FAIL tests/unit/domain/services/clean-architecture-compliance.test.ts
  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ result pattern compliance ‚Ä∫ error propagation through Result pattern ‚Ä∫ should propagate errors through Result chains without exceptions

    TypeError: Cannot read properties of null (reading 'length')

    [0m [90m 181 |[39m [90m   */[39m
     [90m 182 |[39m   [36mpublic[39m optimizeActionOrder(actions[33m:[39m [33mActionNode[39m[])[33m:[39m [33mResult[39m[33m<[39m[33mActionNode[39m[][33m>[39m {
    [31m[1m>[22m[39m[90m 183 |[39m     [36mif[39m (actions[33m.[39mlength [33m===[39m [35m0[39m) {
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 184 |[39m       [36mreturn[39m [33mResult[39m[33m.[39mok[33m<[39m[33mActionNode[39m[][33m>[39m([])[33m;[39m
     [90m 185 |[39m     }
     [90m 186 |[39m[0m

      at ActionNodeOrchestrationService.length [as optimizeActionOrder] (lib/domain/services/action-node-orchestration-service.ts:183:17)
      at optimizeActionOrder (tests/unit/domain/services/clean-architecture-compliance.test.ts:237:59)
      at Object.<anonymous> (node_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js:1824:9)
      at Object.throwingMatcher [as toThrow] (node_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js:2235:93)
      at Object.toThrow (tests/unit/domain/services/clean-architecture-compliance.test.ts:239:16)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ layer separation compliance ‚Ä∫ business rule encapsulation ‚Ä∫ should enforce context access rules

    expect(received).toHaveProperty(path)

    Expected path: "granted"
    Received path: []

    Received value: {"accessLevel": "read", "isValid": false, "reason": "Target context not found"}

    [0m [90m 425 |[39m         [90m// Assert - Business rules for access control should be enforced[39m
     [90m 426 |[39m         expect(accessResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 427 |[39m         expect(accessResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'granted'[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 428 |[39m         expect(accessResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'level'[39m)[33m;[39m
     [90m 429 |[39m         expect(accessResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'accessibleProperties'[39m)[33m;[39m
     [90m 430 |[39m       })[33m;[39m[0m

      at Object.toHaveProperty (tests/unit/domain/services/clean-architecture-compliance.test.ts:427:36)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ layer separation compliance ‚Ä∫ business rule encapsulation ‚Ä∫ should enforce execution mode rules

    expect(received).toHaveProperty(path, value)

    Expected path: "executedActions"
    Received path: []

    Expected value: 0
    Received value: []

    [0m [90m 449 |[39m         [90m// Assert - Different execution modes should follow their rules[39m
     [90m 450 |[39m         expect(parallelResult)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 451 |[39m         expect(parallelResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'executedActions'[39m[33m,[39m [35m0[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 452 |[39m         expect(parallelResult[33m.[39mvalue)[33m.[39mtoHaveProperty([32m'concurrencyRespected'[39m)[33m;[39m
     [90m 453 |[39m         
     [90m 454 |[39m         expect(sequentialResult)[33m.[39mtoBeValidResult()[33m;[39m[0m

      at Object.toHaveProperty (tests/unit/domain/services/clean-architecture-compliance.test.ts:451:38)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ interface segregation compliance ‚Ä∫ focused service interfaces ‚Ä∫ should have cohesive method groupings

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 483 |[39m               [36mbreak[39m[33m;[39m
     [90m 484 |[39m             [36mcase[39m [32m'ActionNodeExecutionService'[39m[33m:[39m
    [31m[1m>[22m[39m[90m 485 |[39m               expect(methods[33m.[39msome(m [33m=>[39m m[33m.[39mincludes([32m'execution'[39m) [33m||[39m m[33m.[39mincludes([32m'action'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                                                                          [31m[1m^[22m[39m
     [90m 486 |[39m               [36mbreak[39m[33m;[39m
     [90m 487 |[39m             [36mcase[39m [32m'NodeContextAccessService'[39m[33m:[39m
     [90m 488 |[39m               expect(methods[33m.[39msome(m [33m=>[39m m[33m.[39mincludes([32m'context'[39m) [33m||[39m m[33m.[39mincludes([32m'build'[39m)))[33m.[39mtoBe([36mtrue[39m)[33m;[39m[0m

      at toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:485:90)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/clean-architecture-compliance.test.ts:473:18)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ WorkflowOrchestrationService should only handle workflow execution

    expect(received).toBe(expected) // Object.is equality

    Expected: 15
    Received: 10

    [0m [90m 560 |[39m         )[33m;[39m
     [90m 561 |[39m         
    [31m[1m>[22m[39m[90m 562 |[39m         expect(workflowRelatedMethods[33m.[39mlength)[33m.[39mtoBe(methods[33m.[39mlength)[33m;[39m
     [90m     |[39m                                               [31m[1m^[22m[39m
     [90m 563 |[39m       })[33m;[39m
     [90m 564 |[39m
     [90m 565 |[39m       it([32m'ActionNodeExecutionService should only handle individual action execution'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:562:47)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ ActionNodeExecutionService should only handle individual action execution

    expect(received).toBe(expected) // Object.is equality

    Expected: 13
    Received: 6

    [0m [90m 581 |[39m         )[33m;[39m
     [90m 582 |[39m         
    [31m[1m>[22m[39m[90m 583 |[39m         expect(executionRelatedMethods[33m.[39mlength)[33m.[39mtoBe(methods[33m.[39mlength)[33m;[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 584 |[39m       })[33m;[39m
     [90m 585 |[39m
     [90m 586 |[39m       it([32m'NodeContextAccessService should only handle context management'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:583:48)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ NodeContextAccessService should only handle context management

    expect(received).toBe(expected) // Object.is equality

    Expected: 33
    Received: 10

    [0m [90m 602 |[39m         )[33m;[39m
     [90m 603 |[39m         
    [31m[1m>[22m[39m[90m 604 |[39m         expect(contextRelatedMethods[33m.[39mlength)[33m.[39mtoBe(methods[33m.[39mlength)[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 605 |[39m       })[33m;[39m
     [90m 606 |[39m     })[33m;[39m
     [90m 607 |[39m   })[33m;[39m[0m

      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:604:46)

  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ architectural boundary enforcement ‚Ä∫ no direct external dependencies ‚Ä∫ should not directly access network resources

    expect(received).not.toMatch(expected)

    Expected pattern: not /http\.|https\.|fetch|axios|request/
    Received string:      "class NodeContextAccessService {
        /**
       * Register a node in the context access system
       */ registerNode(nodeId, nodeType, parentNodeId, contextData, hierarchyLevel) {
            const nodeIdStr = nodeId.value;
            const nodeContext = {
                nodeId,
                nodeType,
                parentNodeId,
                contextData: {
                    ...contextData
                },
                accessLevel: \"read\",
                hierarchyLevel
            };
            this.nodeHierarchy.set(nodeIdStr, nodeContext);
            // Update parent-child relations
            if (parentNodeId) {
                const parentIdStr = parentNodeId.value;
                const children = this.parentChildRelations.get(parentIdStr) || [];
                children.push(nodeIdStr);
                this.parentChildRelations.set(parentIdStr, children);
                // Update sibling groups
                this.updateSiblingGroups(parentIdStr, nodeIdStr);
            }
            return _result.Result.ok(undefined);
        }
        /**
       * Get accessible contexts for a given node based on hierarchical access patterns
       */ getAccessibleContexts(requestingNodeId) {
            const nodeIdStr = requestingNodeId.value;
            const requestingNode = this.nodeHierarchy.get(nodeIdStr);
            if (!requestingNode) {
                return _result.Result.fail(\"Node not found in context system\");
            }
            const accessibleContexts = [];
            // 1. Sibling Access - Read-only context sharing between nodes at same hierarchical level
            const siblingAccess = this.getSiblingContexts(requestingNode);
            accessibleContexts.push(...siblingAccess);
            // 2. Child Access - Parents have write access to all their children
            if (this.hasChildren(requestingNode)) {
                const childAccess = this.getChildAccessContexts(requestingNode);
                accessibleContexts.push(...childAccess);
            }
            // 3. Parent Access - Children have read access to their parents
            if (requestingNode.parentNodeId) {
                const parentAccess = this.getParentContexts(requestingNode);
                accessibleContexts.push(...parentAccess);
            }
            // 4. Uncle/Aunt Access - Read-only lateral access for root cause analysis
            const uncleAuntAccess = this.getUncleAuntContexts(requestingNode);
            accessibleContexts.push(...uncleAuntAccess);
            // 5. Deep Nesting - Cascading access through multi-level function model hierarchy
            const deepNestingAccess = this.getDeepNestingContexts(requestingNode);
            accessibleContexts.push(...deepNestingAccess);
            return _result.Result.ok(accessibleContexts);
        }
        /**
       * Get context for a node by nodeId (for testing and simple access)
       */ getNodeContext(nodeId) {
            for (const context of this.contexts.values()){
                if (context.nodeId.equals(nodeId)) {
                    return _result.Result.ok(context);
                }
            }
            return _result.Result.fail(\"Context not found for node\");
        }
        /**
       * Get specific context data for a node with access validation
       */ getNodeContextWithAccess(requestingNodeId, targetNodeId, requestedAccess = \"read\") {
            const targetContext = this.nodeHierarchy.get(targetNodeId.value);
            if (!targetContext) {
                return _result.Result.fail(\"Access denied: Target node not found\");
            }
            // Allow self-access - a node can always access its own context
            if (requestingNodeId.equals(targetNodeId)) {
                return _result.Result.ok({
                    ...targetContext,
                    contextData: {
                        ...targetContext.contextData
                    }
                });
            }
            const accessResult = this.validateAccess(requestingNodeId, targetNodeId, requestedAccess);
            if (accessResult.isFailure) {
                return _result.Result.fail(accessResult.error);
            }
            return _result.Result.ok({
                ...targetContext,
                contextData: {
                    ...targetContext.contextData
                }
            });
        }
        /**
       * Update context data for a node (with write permission validation)
       */ updateNodeContext(updatingNodeId, targetNodeId, newContextData) {
            const targetContext = this.nodeHierarchy.get(targetNodeId.value);
            if (!targetContext) {
                return _result.Result.fail(\"Access denied: Target node not found\");
            }
            // Allow self-update - a node can always update its own context
            if (updatingNodeId.equals(targetNodeId)) {
                targetContext.contextData = {
                    ...newContextData
                };
                this.nodeHierarchy.set(targetNodeId.value, targetContext);
                return _result.Result.ok(undefined);
            }
            const accessResult = this.validateAccess(updatingNodeId, targetNodeId, \"write\");
            if (accessResult.isFailure) {
                return _result.Result.fail(accessResult.error);
            }
            targetContext.contextData = {
                ...newContextData
            };
            this.nodeHierarchy.set(targetNodeId.value, targetContext);
            return _result.Result.ok(undefined);
        }
        /**
       * Extract action node specific context based on type
       */ extractActionNodeContext(actionNode) {
            const baseContext = {
                actionId: actionNode.actionId?.value || \"unknown\",
                name: actionNode.name,
                description: actionNode.description,
                executionMode: actionNode.executionMode,
                status: actionNode.status,
                priority: actionNode.priority,
                raci: actionNode.raci
            };
            // Type-specific context extraction
            if (actionNode instanceof _tethernode.TetherNode) {
                const tetherNode = actionNode;
                const config = tetherNode.tetherData;
                return {
                    ...baseContext,
                    type: \"TetherNode\",
                    tetherReferenceId: config.tetherReferenceId,
                    executionParameters: config.executionParameters,
                    outputMapping: config.outputMapping,
                    resourceRequirements: config.resourceRequirements,
                    integrationConfig: config.integrationConfig
                };
            }
            if (actionNode instanceof _kbnode.KBNode) {
                const kbNode = actionNode;
                const config = kbNode.kbData;
                return {
                    ...baseContext,
                    type: \"KBNode\",
                    kbReferenceId: config.kbReferenceId,
                    shortDescription: config.shortDescription,
                    documentationContext: config.documentationContext,
                    searchKeywords: config.searchKeywords,
                    accessPermissions: config.accessPermissions
                };
            }
            if (actionNode instanceof _functionmodelcontainernode.FunctionModelContainerNode) {
                const containerData = actionNode.containerData;
                return {
                    ...baseContext,
                    type: \"FunctionModelContainer\",
                    nestedModelId: containerData?.nestedModelId,
                    contextMapping: containerData?.contextMapping,
                    outputExtraction: containerData?.outputExtraction,
                    executionPolicy: containerData?.executionPolicy,
                    orchestrationMode: containerData?.orchestrationMode
                };
            }
            return baseContext;
        }
        getSiblingContexts(requestingNode) {
            const results = [];
            if (!requestingNode.parentNodeId) return results;
            const siblings = this.siblingGroups.get(requestingNode.parentNodeId.value) || [];
            for (const siblingIdStr of siblings){
                if (siblingIdStr === requestingNode.nodeId.value) continue;
                const siblingContext = this.nodeHierarchy.get(siblingIdStr);
                if (siblingContext) {
                    results.push({
                        context: siblingContext,
                        accessGranted: true,
                        accessReason: \"Sibling read-only access pattern\"
                    });
                }
            }
            return results;
        }
        getChildAccessContexts(requestingNode) {
            const results = [];
            const children = this.parentChildRelations.get(requestingNode.nodeId.value) || [];
            for (const childIdStr of children){
                const childContext = this.nodeHierarchy.get(childIdStr);
                if (childContext) {
                    // Parent has write access to all child contexts
                    results.push({
                        context: {
                            ...childContext,
                            accessLevel: \"write\"
                        },
                        accessGranted: true,
                        accessReason: \"Parent write access to child context\"
                    });
                    // Include all descendants with write access
                    const descendants = this.getAllDescendants(childIdStr);
                    for (const descendantId of descendants){
                        const descendantContext = this.nodeHierarchy.get(descendantId);
                        if (descendantContext) {
                            results.push({
                                context: {
                                    ...descendantContext,
                                    accessLevel: \"write\"
                                },
                                accessGranted: true,
                                accessReason: \"Parent hierarchical write access to descendant\"
                            });
                        }
                    }
                }
            }
            return results;
        }
        getParentContexts(requestingNode) {
            const results = [];
            if (!requestingNode.parentNodeId) return results;
            const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);
            if (parentContext) {
                results.push({
                    context: {
                        ...parentContext,
                        accessLevel: \"read\"
                    },
                    accessGranted: true,
                    accessReason: \"Child read access to parent context\"
                });
            }
            return results;
        }
        getUncleAuntContexts(requestingNode) {
            const results = [];
            if (!requestingNode.parentNodeId) return results;
            const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);
            if (!parentContext?.parentNodeId) return results;
            // Get parent's siblings (uncles/aunts)
            const uncleAunts = this.siblingGroups.get(parentContext.parentNodeId.value) || [];
            for (const uncleAuntId of uncleAunts){
                if (uncleAuntId === requestingNode.parentNodeId.value) continue;
                const uncleAuntContext = this.nodeHierarchy.get(uncleAuntId);
                if (uncleAuntContext) {
                    results.push({
                        context: uncleAuntContext,
                        accessGranted: true,
                        accessReason: \"Uncle/Aunt lateral read-only access for root cause analysis\"
                    });
                }
            }
            return results;
        }
        getDeepNestingContexts(requestingNode) {
            const results = [];
            // For deep nesting, traverse up the hierarchy and apply cascading access
            let currentNodeId = requestingNode.parentNodeId?.value;
            let nestingLevel = 1;
            while(currentNodeId && nestingLevel <= 10){
                const currentContext = this.nodeHierarchy.get(currentNodeId);
                if (!currentContext) break;
                results.push({
                    context: {
                        ...currentContext,
                        accessLevel: nestingLevel <= 2 ? \"write\" : \"read\"
                    },
                    accessGranted: true,
                    accessReason: `Deep nesting level ${nestingLevel} - ${nestingLevel <= 2 ? \"write\" : \"read\"} access`
                });
                currentNodeId = currentContext.parentNodeId?.value;
                nestingLevel++;
            }
            return results;
        }
        validateAccess(requestingNodeId, targetNodeId, requestedAccess) {
            const accessibleContexts = this.getAccessibleContexts(requestingNodeId);
            if (accessibleContexts.isFailure) {
                return _result.Result.fail(accessibleContexts.error);
            }
            const targetAccess = accessibleContexts.value.find((access)=>access.context.nodeId.equals(targetNodeId));
            if (!targetAccess || !targetAccess.accessGranted) {
                return _result.Result.fail(\"Access denied: Node not in accessible context hierarchy\");
            }
            // Validate access level
            const contextAccessLevel = targetAccess.context.accessLevel;
            const accessLevels = [
                \"read\",
                \"write\",
                \"execute\"
            ];
            const requiredLevel = accessLevels.indexOf(requestedAccess);
            const availableLevel = accessLevels.indexOf(contextAccessLevel);
            if (availableLevel < requiredLevel) {
                return _result.Result.fail(`Access denied: Required ${requestedAccess} access, but only ${contextAccessLevel} is available`);
            }
            return _result.Result.ok(undefined);
        }
        hasChildren(node) {
            const children = this.parentChildRelations.get(node.nodeId.value);
            return !!(children && children.length > 0);
        }
        updateSiblingGroups(parentIdStr, newChildIdStr) {
            const existingSiblings = this.siblingGroups.get(parentIdStr) || [];
            existingSiblings.push(newChildIdStr);
            this.siblingGroups.set(parentIdStr, existingSiblings);
        }
        getAllDescendants(nodeId) {
            const children = this.parentChildRelations.get(nodeId) || [];
            let descendants = [
                ...children
            ];
            for (const child of children){
                descendants = descendants.concat(this.getAllDescendants(child));
            }
            return descendants;
        }
        /**
       * Set hierarchy relationship between nodes (used for testing)
       */ setHierarchy(childNodeId, parentNodeId) {
            const children = this.parentChildRelations.get(parentNodeId) || [];
            if (!children.includes(childNodeId)) {
                children.push(childNodeId);
                this.parentChildRelations.set(parentNodeId, children);
            }
            // Update sibling groups
            this.updateSiblingGroups(parentNodeId, childNodeId);
        }
        /**
       * Set context data for a specific node (used for testing)
       */ setContextData(nodeId, contextData) {
            const existingContext = this.nodeHierarchy.get(nodeId);
            if (existingContext) {
                // Use the same approach as debugForceSetContext which works
                this.nodeHierarchy.delete(nodeId);
                const updatedContext = {
                    ...existingContext,
                    contextData: contextData
                };
                this.nodeHierarchy.set(nodeId, updatedContext);
            }
        }
        /**
       * Get all child contexts for a parent node (used for testing)
       */ getChildContexts(parentNodeId) {
            const children = this.parentChildRelations.get(parentNodeId) || [];
            const childContexts = [];
            for (const childId of children){
                const childContext = this.nodeHierarchy.get(childId);
                if (childContext && childContext.contextData) {
                    childContexts.push(childContext.contextData);
                }
            }
            return childContexts;
        }
        /**
       * Debug method to check parent-child relationships (used for testing)
       */ getParentChildRelations() {
            return new Map(this.parentChildRelations);
        }
        /**
       * Debug method to check if a node has children (used for testing)
       */ debugHasChildren(nodeId) {
            const children = this.parentChildRelations.get(nodeId);
            return !!(children && children.length > 0);
        }
        /**
       * Get deep nested contexts across multiple model levels (used for testing)
       */ getDeepNestedContext(sourceModelId, targetModelId) {
            // Find nodes related to the source model that might have nested contexts
            const nestedContexts = [];
            // Search through node hierarchy for contexts referencing target model
            for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){
                // Check if this node's context references the target model
                // Check if this node's context data has references to the target model
                if (nodeContext.contextData && this.hasNestedModelReferences(nodeContext.contextData, targetModelId)) {
                    // Found matching context
                    nestedContexts.push(nodeContext.contextData);
                } else if (nodeContext.contextData) {
                // No match in this node's context
                }
            }
            // Return all found contexts
            return nestedContexts;
        }
        /**
       * Debug method to check the current state of the service
       */ debugState() {
            const nodes = [];
            for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){
                nodes.push({
                    nodeId,
                    nodeType: nodeContext.nodeType,
                    hasContextData: !!nodeContext.contextData,
                    contextKeys: nodeContext.contextData ? Object.keys(nodeContext.contextData) : [],
                    contextDataType: typeof nodeContext.contextData,
                    contextData: nodeContext.contextData
                });
            }
            return {
                nodeCount: this.nodeHierarchy.size,
                nodes
            };
        }
        /**
       * Test method to directly manipulate the hierarchy for debugging
       */ debugForceSetContext(nodeId, contextData) {
            // Direct map manipulation
            const existing = this.nodeHierarchy.get(nodeId);
            if (!existing) return false;
            // Force set context data for testing purposes
            // Completely replace the object in the map
            this.nodeHierarchy.delete(nodeId);
            const newContext = {
                ...existing,
                contextData: contextData
            };
            // Context created successfully
            this.nodeHierarchy.set(nodeId, newContext);
            // Verify it was set
            const verify = this.nodeHierarchy.get(nodeId);
            // Context verification complete
            return true;
        }
        /**
       * Build context for a node with optional parent context inheritance
       */ buildContext(nodeId, data, scope, parentContextId) {
            try {
                // Validate input data
                if (data === null || data === undefined) {
                    return _result.Result.fail(\"Invalid context data: data cannot be null or undefined\");
                }
                if (typeof data !== \"object\") {
                    return _result.Result.fail(\"Invalid context data: data must be an object\");
                }
                const contextId = `ctx-${++this.contextCounter}-${nodeId.value.slice(-8)}`;
                let inheritedData = {};
                if (parentContextId) {
                    const parentContext = this.contexts.get(parentContextId);
                    if (parentContext) {
                        inheritedData = {
                            ...parentContext.data
                        };
                    }
                }
                const accessLevel = scope === \"isolated\" ? \"read\" : \"read-write\";
                const context = {
                    contextId,
                    nodeId,
                    scope,
                    data: {
                        ...data
                    },
                    inheritedData: Object.keys(inheritedData).length > 0 ? inheritedData : undefined,
                    accessLevel,
                    parentContextId: parentContextId || null
                };
                this.contexts.set(contextId, context);
                return _result.Result.ok(context);
            } catch (error) {
                return _result.Result.fail(`Failed to build context: ${error}`);
            }
        }
        /**
       * Update context data for the specified context ID
       */ updateNodeContext(contextId, updateData, mergeMode = \"merge\") {
            const context = this.contexts.get(contextId);
            if (!context) {
                return _result.Result.fail(\"Context not found\");
            }
            let updatedData;
            if (mergeMode === \"merge\") {
                updatedData = {
                    ...context.data,
                    ...updateData
                };
            } else {
                updatedData = {
                    ...updateData
                };
            }
            const updatedContext = {
                ...context,
                data: updatedData
            };
            this.contexts.set(contextId, updatedContext);
            return _result.Result.ok(updatedContext);
        }
        /**
       * Clear node context and all child contexts
       */ clearNodeContext(nodeId) {
            const contextsToRemove = [];
            // Find contexts for this node
            for (const [contextId, context] of this.contexts.entries()){
                if (context.nodeId.equals(nodeId)) {
                    contextsToRemove.push(contextId);
                    // Also find child contexts
                    for (const [childId, childContext] of this.contexts.entries()){
                        if (childContext.parentContextId === contextId) {
                            contextsToRemove.push(childId);
                        }
                    }
                }
            }
            // Remove contexts
            contextsToRemove.forEach((id)=>this.contexts.delete(id));
            return _result.Result.ok(undefined);
        }
        /**
       * Propagate context from source to target with inheritance rules
       */ propagateContext(sourceContextId, targetNodeId, inheritanceRules) {
            const sourceContext = this.contexts.get(sourceContextId);
            if (!sourceContext) {
                return _result.Result.fail(\"Source context not found\");
            }
            const propagatedData = {};
            for (const rule of inheritanceRules){
                const sourceValue = sourceContext.data[rule.propertyName];
                if (sourceValue !== undefined) {
                    switch(rule.inheritanceType){
                        case \"inherit\":
                            propagatedData[rule.propertyName] = sourceValue;
                            break;
                        case \"override\":
                            propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;
                            break;
                        case \"merge\":
                            if (typeof sourceValue === \"object\" && sourceValue !== null) {
                                propagatedData[rule.propertyName] = {
                                    ...sourceValue,
                                    ...rule.defaultValue || {}
                                };
                            } else {
                                propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;
                            }
                            break;
                    }
                } else if (rule.defaultValue !== undefined) {
                    propagatedData[rule.propertyName] = rule.defaultValue;
                }
            }
            return this.buildContext(targetNodeId, propagatedData, sourceContext.scope, sourceContextId);
        }
        /**
       * Get hierarchical context including parent chain
       */ getHierarchicalContext(nodeId) {
            // Find context for this node
            let nodeContext;
            for (const context of this.contexts.values()){
                if (context.nodeId.equals(nodeId)) {
                    nodeContext = context;
                    break;
                }
            }
            if (!nodeContext) {
                return _result.Result.fail(\"Node context not found\");
            }
            // Find child contexts
            const childContextIds = [];
            for (const [contextId, context] of this.contexts.entries()){
                if (context.parentContextId === nodeContext.contextId) {
                    childContextIds.push(contextId);
                }
            }
            const hierarchicalContext = {
                ...nodeContext,
                childContextIds,
                timestamp: new Date().toISOString()
            };
            return _result.Result.ok(hierarchicalContext);
        }
        /**
       * Validate context access permissions
       */ validateContextAccess(requestingNodeId, targetContextId, requestedAccess) {
            const targetContext = this.contexts.get(targetContextId);
            if (!targetContext) {
                return _result.Result.ok({
                    isValid: false,
                    reason: \"Target context not found\",
                    accessLevel: \"read\"
                });
            }
            // Self-access is always allowed
            if (targetContext.nodeId.equals(requestingNodeId)) {
                return _result.Result.ok({
                    isValid: true,
                    reason: \"Self-access granted\",
                    accessLevel: targetContext.accessLevel
                });
            }
            // Check if requesting node has access based on hierarchy
            const hasAccess = this.checkHierarchicalAccess(requestingNodeId, targetContext);
            const accessLevel = hasAccess ? targetContext.accessLevel : \"read\";
            const canAccess = this.validateAccessLevel(requestedAccess, accessLevel);
            return _result.Result.ok({
                isValid: canAccess,
                reason: canAccess ? \"Hierarchical access granted\" : \"Insufficient permissions\",
                accessLevel
            });
        }
        /**
       * Clone context scope to new node
       */ cloneContextScope(sourceContextId, targetNodeId, newScope, transformationRules) {
            const sourceContext = this.contexts.get(sourceContextId);
            if (!sourceContext) {
                return _result.Result.fail(\"Source context not found\");
            }
            let clonedData = {
                ...sourceContext.data
            };
            // Apply transformation rules if provided
            if (transformationRules) {
                for (const rule of transformationRules){
                    if (rule.inheritanceType === \"override\" && rule.defaultValue !== undefined) {
                        clonedData[rule.propertyName] = rule.defaultValue;
                    }
                }
            }
            return this.buildContext(targetNodeId, clonedData, newScope);
        }
        /**
       * Merge multiple context scopes
       */ mergeContextScopes(sourceContextIds, targetNodeId, targetScope, precedenceRules) {
            if (sourceContextIds.length === 0) {
                return this.buildContext(targetNodeId, {}, targetScope);
            }
            const sourceContexts = sourceContextIds.map((id)=>this.contexts.get(id)).filter((ctx)=>ctx !== undefined);
            if (sourceContexts.length === 0) {
                return _result.Result.fail(\"No valid source contexts found\");
            }
            // Merge data with precedence rules
            const mergedData = {};
            if (precedenceRules) {
                const priorityMap = new Map(precedenceRules.map((rule)=>[
                        rule.contextId,
                        rule.priority
                    ]));
                const sortedContexts = sourceContexts.sort((a, b)=>{
                    const priorityA = priorityMap.get(a.contextId) ?? 0;
                    const priorityB = priorityMap.get(b.contextId) ?? 0;
                    return priorityB - priorityA; // Higher priority first
                });
                for (const context of sortedContexts.reverse()){
                    Object.assign(mergedData, context.data);
                }
            } else {
                // Simple merge without precedence
                for (const context of sourceContexts){
                    Object.assign(mergedData, context.data);
                }
            }
            return this.buildContext(targetNodeId, mergedData, targetScope);
        }
        checkHierarchicalAccess(requestingNodeId, targetContext) {
            // Check parent-child relationships
            const accessibleContexts = this.getAccessibleContexts(requestingNodeId);
            if (accessibleContexts.isFailure) return false;
            return accessibleContexts.value.some((access)=>access.context.nodeId.equals(targetContext.nodeId) && access.accessGranted);
        }
        validateAccessLevel(requested, available) {
            const levels = {
                \"read\": 1,
                \"write\": 2,
                \"read-write\": 2,
                \"execute\": 3
            };
            return levels[requested] <= levels[available];
        }
        /**
       * Check if context data contains references to a nested model
       */ hasNestedModelReferences(contextData, targetModelId) {
            // Check various possible locations where nested model references might exist
            // Check various possible locations where nested model references might exist
            // Check direct nestedModelId reference
            if (contextData.nestedModelId === targetModelId) {
                return true;
            }
            // Check in execution memory parent models array
            if (contextData.executionMemory && contextData.executionMemory.parentModels) {
                if (Array.isArray(contextData.executionMemory.parentModels) && contextData.executionMemory.parentModels.includes(targetModelId)) {
                    return true;
                }
            }
            // Check in nested model outputs (for FunctionModelContainerContext)
            if (contextData.nestedModelOutputs) {
                if (contextData.nestedModelOutputs[targetModelId]) {
                    return true;
                }
            }
            // Check in orchestration state nested models
            if (contextData.orchestrationState && contextData.orchestrationState.nestedModels) {
                if (Array.isArray(contextData.orchestrationState.nestedModels) && contextData.orchestrationState.nestedModels.includes(targetModelId)) {
                    return true;
                }
            }
            return false;
        }
        constructor(){
            this.nodeHierarchy = new Map();
            this.parentChildRelations = new Map();
            this.siblingGroups = new Map();
            this.contexts = new Map();
            this.contextCounter = 0;
        }
    }"

    [0m [90m 628 |[39m         services[33m.[39mforEach(service [33m=>[39m {
     [90m 629 |[39m           [36mconst[39m serviceString [33m=[39m service[33m.[39mconstructor[33m.[39mtoString()[33m;[39m
    [31m[1m>[22m[39m[90m 630 |[39m           expect(serviceString)[33m.[39mnot[33m.[39mtoMatch([35m/http\.|https\.|fetch|axios|request/[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 631 |[39m           expect(serviceString)[33m.[39mnot[33m.[39mtoMatch([35m/socket\.|ws\.|websocket/i[39m)[33m;[39m
     [90m 632 |[39m         })[33m;[39m
     [90m 633 |[39m       })[33m;[39m[0m

      at toMatch (tests/unit/domain/services/clean-architecture-compliance.test.ts:630:37)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/domain/services/clean-architecture-compliance.test.ts:628:18)

FAIL tests/unit/domain/services/workflow-orchestration-service.test.ts
  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should execute tether nodes with mock implementation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "Executing Tether Node: Test Tether"

    Number of calls: 0

    [0m [90m 482 |[39m       [90m// Assert[39m
     [90m 483 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 484 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 485 |[39m         expect[33m.[39mstringContaining([32m'Executing Tether Node: Test Tether'[39m)
     [90m 486 |[39m       )[33m;[39m
     [90m 487 |[39m       [0m

      at Object.toHaveBeenCalledWith (tests/unit/domain/services/workflow-orchestration-service.test.ts:484:26)

  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should execute KB nodes with mock implementation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "Processing KB Node: Test KB"

    Number of calls: 0

    [0m [90m 531 |[39m       [90m// Assert[39m
     [90m 532 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 533 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 534 |[39m         expect[33m.[39mstringContaining([32m'Processing KB Node: Test KB'[39m)
     [90m 535 |[39m       )[33m;[39m
     [90m 536 |[39m       [0m

      at Object.toHaveBeenCalledWith (tests/unit/domain/services/workflow-orchestration-service.test.ts:533:26)

  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should handle action execution in different modes

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 0

    [0m [90m 575 |[39m       [90m// Assert[39m
     [90m 576 |[39m       expect(result)[33m.[39mtoBeValidResult()[33m;[39m
    [31m[1m>[22m[39m[90m 577 |[39m       expect(consoleSpy)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m [90m// All 3 actions executed (original + 2 new ones)[39m
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 578 |[39m       
     [90m 579 |[39m       [90m// Cleanup[39m
     [90m 580 |[39m       consoleSpy[33m.[39mmockRestore()[33m;[39m[0m

      at Object.toHaveBeenCalledTimes (tests/unit/domain/services/workflow-orchestration-service.test.ts:577:26)


Test Suites: 16 failed, 77 passed, 93 total
Tests:       150 failed, 2484 passed, 2634 total
Snapshots:   0 total
Time:        28.799 s
Ran all test suites.
{"numFailedTestSuites":16,"numFailedTests":150,"numPassedTestSuites":77,"numPassedTests":2484,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":93,"numTotalTests":2634,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1756394049453,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["ModelRecoveryService","Recovery Eligibility Assessment","AssessRecoveryEligibility_ValidDeletedModel_ShouldAllowRecovery"],"duration":22,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelRecoveryService Recovery Eligibility Assessment AssessRecoveryEligibility_ValidDeletedModel_ShouldAllowRecovery should assess recovery eligibility for recently deleted model","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394053225,"status":"passed","title":"should assess recovery eligibility for recently deleted model"},{"ancestorTitles":["ModelRecoveryService","Recovery Eligibility Assessment","AssessRecoveryEligibility_ExpiredDeletionWindow_ShouldRestrictRecovery"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelRecoveryService Recovery Eligibility Assessment AssessRecoveryEligibility_ExpiredDeletionWindow_ShouldRestrictRecovery should restrict recovery when deletion window has expired","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394053247,"status":"passed","title":"should restrict recovery when deletion window has expired"},{"ancestorTitles":["ModelRecoveryService","Recovery Eligibility Assessment","AssessRecoveryEligibility_WithIntegrityViolations_ShouldRequireRepair"],"duration":11,"failing":false,"failureDetails":[{"matcherResult":{"actual":{"repairActions":[{"action":"REPAIR_BROKEN_REFERENCE","target":"ref-node-1","complexity":"LOW"},{"action":"REPAIR_BROKEN_REFERENCE","target":"ref-node-2","complexity":"LOW"}],"estimatedRepairTime":"2 hours","manualInterventionRequired":true},"expected":{"sample":{"repairActions":{"sample":[{"sample":{"action":"RESTORE_MISSING_DEPENDENCY","target":"dependency-model-456","complexity":"MEDIUM"},"inverse":false},{"sample":{"action":"REPAIR_BROKEN_REFERENCE","target":"ref-node-1","complexity":"LOW"},"inverse":false}],"inverse":false},"estimatedRepairTime":{"sample":{},"inverse":false},"manualInterventionRequired":true},"inverse":false},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 9\n+ Received  + 9\n\n- ObjectContaining {\n-   \"estimatedRepairTime\": StringMatching /\\d+\\s*(hours?|days?)/,\n+ Object {\n+   \"estimatedRepairTime\": \"2 hours\",\n    \"manualInterventionRequired\": true,\n-   \"repairActions\": ArrayContaining [\n-     ObjectContaining {\n-       \"action\": \"RESTORE_MISSING_DEPENDENCY\",\n-       \"complexity\": \"MEDIUM\",\n-       \"target\": \"dependency-model-456\",\n-     },\n-     ObjectContaining {\n+   \"repairActions\": Array [\n+     Object {\n        \"action\": \"REPAIR_BROKEN_REFERENCE\",\n        \"complexity\": \"LOW\",\n        \"target\": \"ref-node-1\",\n+     },\n+     Object {\n+       \"action\": \"REPAIR_BROKEN_REFERENCE\",\n+       \"complexity\": \"LOW\",\n+       \"target\": \"ref-node-2\",\n      },\n    ],\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 9\n+ Received  + 9\n\n- ObjectContaining {\n-   \"estimatedRepairTime\": StringMatching /\\d+\\s*(hours?|days?)/,\n+ Object {\n+   \"estimatedRepairTime\": \"2 hours\",\n    \"manualInterventionRequired\": true,\n-   \"repairActions\": ArrayContaining [\n-     ObjectContaining {\n-       \"action\": \"RESTORE_MISSING_DEPENDENCY\",\n-       \"complexity\": \"MEDIUM\",\n-       \"target\": \"dependency-model-456\",\n-     },\n-     ObjectContaining {\n+   \"repairActions\": Array [\n+     Object {\n        \"action\": \"REPAIR_BROKEN_REFERENCE\",\n        \"complexity\": \"LOW\",\n        \"target\": \"ref-node-1\",\n+     },\n+     Object {\n+       \"action\": \"REPAIR_BROKEN_REFERENCE\",\n+       \"complexity\": \"LOW\",\n+       \"target\": \"ref-node-2\",\n      },\n    ],\n  }\n    at Object.toEqual (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts:237:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ModelRecoveryService Recovery Eligibility Assessment AssessRecoveryEligibility_WithIntegrityViolations_ShouldRequireRepair should identify integrity violations and provide repair plan","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394053251,"status":"failed","title":"should identify integrity violations and provide repair plan"},{"ancestorTitles":["ModelRecoveryService","Recovery Eligibility Assessment","AssessRecoveryEligibility_InsufficientPermissions_ShouldDenyAccess"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelRecoveryService Recovery Eligibility Assessment AssessRecoveryEligibility_InsufficientPermissions_ShouldDenyAccess should deny recovery for users without sufficient permissions","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394053290,"status":"passed","title":"should deny recovery for users without sufficient permissions"},{"ancestorTitles":["ModelRecoveryService","Model Recovery Coordination","CoordinateModelRecovery_ValidEligibleModel_ShouldExecuteRecovery"],"duration":7,"failing":false,"failureDetails":[{"matcherResult":{"actual":{"recoveryExecuted":true,"recoveryDetails":{"recoveryTimestamp":{},"recoveredBy":"admin-456","originalDeletionData":{"deletedAt":{},"deletedBy":"temp-deleter"},"restoredState":{"modelId":"recoverable-model-123","name":"Recoverable Model","status":"published","isDeleted":false}},"versioningActions":{"newVersionCreated":false,"version":"2.3.1","versionReason":"No version changes required"},"dependencyActions":{"integrityValidated":true,"referencesRestored":true,"dependenciesReconciled":true},"auditData":{"recoveryMetadata":{"reason":"Project reactivation - business requirement","recoveredBy":"admin-456","recoveryComplexity":"LOW","stakeholdersNotified":true}},"domainEvents":[{"aggregateId":"recoverable-model-123","eventVersion":1,"occurredAt":{},"eventId":"00000001-0000-4000-8000-000000010000","restoredBy":"admin-456","restoredAt":{},"reason":"Project reactivation - business requirement"},{"aggregateId":"recoverable-model-123","eventVersion":1,"occurredAt":{},"eventId":"00000002-0000-4000-8000-000000020000","restoredBy":"admin-456","restoredAt":{},"reason":"Project reactivation - business requirement","targetStatus":"published"}]},"expected":{"sample":{"recoveryExecuted":true,"recoveryDetails":{"sample":{"recoveryTimestamp":{"inverse":false},"recoveredBy":"admin-456","originalDeletionData":{"sample":{"deletedAt":{"inverse":false},"deletedBy":"temp-deleter"},"inverse":false},"restoredState":{"sample":{"modelId":"recoverable-model-123","name":"Recoverable Model","status":"published","isDeleted":false},"inverse":false}},"inverse":false},"versioningActions":{"sample":{"newVersionCreated":true,"version":"2.3.2","versionReason":"Model recovery restoration"},"inverse":false},"dependencyActions":{"sample":{"integrityValidated":true,"referencesRestored":true,"dependenciesReconciled":true},"inverse":false},"auditData":{"sample":{"recoveryMetadata":{"sample":{"reason":"Project reactivation - business requirement","recoveredBy":"admin-456","recoveryComplexity":"LOW","stakeholdersNotified":true},"inverse":false}},"inverse":false},"domainEvents":{"sample":[{"inverse":false},{"inverse":false}],"inverse":false}},"inverse":false},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 16\n+ Received  + 35\n\n- ObjectContaining {\n-   \"auditData\": ObjectContaining {\n-     \"recoveryMetadata\": ObjectContaining {\n+ Object {\n+   \"auditData\": Object {\n+     \"recoveryMetadata\": Object {\n        \"reason\": \"Project reactivation - business requirement\",\n        \"recoveredBy\": \"admin-456\",\n        \"recoveryComplexity\": \"LOW\",\n        \"stakeholdersNotified\": true,\n      },\n    },\n-   \"dependencyActions\": ObjectContaining {\n+   \"dependencyActions\": Object {\n      \"dependenciesReconciled\": true,\n      \"integrityValidated\": true,\n      \"referencesRestored\": true,\n    },\n-   \"domainEvents\": ArrayContaining [\n-     Any<ModelUndeletedEvent>,\n-     Any<ModelRestoredEvent>,\n+   \"domainEvents\": Array [\n+     Object {\n+       \"aggregateId\": \"recoverable-model-123\",\n+       \"eventId\": \"00000001-0000-4000-8000-000000010000\",\n+       \"eventType\": \"ModelUndeleted\",\n+       \"eventVersion\": 1,\n+       \"occurredAt\": \"2025-08-28T15:14:13.294Z\",\n+       \"reason\": \"Project reactivation - business requirement\",\n+       \"restoredAt\": \"2025-08-28T15:14:13.294Z\",\n+       \"restoredBy\": \"admin-456\",\n+     },\n+     Object {\n+       \"aggregateId\": \"recoverable-model-123\",\n+       \"eventId\": \"00000002-0000-4000-8000-000000020000\",\n+       \"eventType\": \"ModelRestored\",\n+       \"eventVersion\": 1,\n+       \"occurredAt\": \"2025-08-28T15:14:13.294Z\",\n+       \"reason\": \"Project reactivation - business requirement\",\n+       \"restoredAt\": \"2025-08-28T15:14:13.294Z\",\n+       \"restoredBy\": \"admin-456\",\n+       \"targetStatus\": \"published\",\n+     },\n    ],\n-   \"recoveryDetails\": ObjectContaining {\n-     \"originalDeletionData\": ObjectContaining {\n-       \"deletedAt\": Any<Date>,\n+   \"recoveryDetails\": Object {\n+     \"originalDeletionData\": Object {\n+       \"deletedAt\": 2025-08-28T15:14:13.293Z,\n        \"deletedBy\": \"temp-deleter\",\n      },\n      \"recoveredBy\": \"admin-456\",\n-     \"recoveryTimestamp\": Any<Date>,\n-     \"restoredState\": ObjectContaining {\n+     \"recoveryTimestamp\": 2025-08-28T15:14:13.294Z,\n+     \"restoredState\": Object {\n        \"isDeleted\": false,\n        \"modelId\": \"recoverable-model-123\",\n        \"name\": \"Recoverable Model\",\n        \"status\": \"published\",\n      },\n    },\n    \"recoveryExecuted\": true,\n-   \"versioningActions\": ObjectContaining {\n-     \"newVersionCreated\": true,\n-     \"version\": \"2.3.2\",\n-     \"versionReason\": \"Model recovery restoration\",\n+   \"versioningActions\": Object {\n+     \"newVersionCreated\": false,\n+     \"version\": \"2.3.1\",\n+     \"versionReason\": \"No version changes required\",\n    },\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 16\n+ Received  + 35\n\n- ObjectContaining {\n-   \"auditData\": ObjectContaining {\n-     \"recoveryMetadata\": ObjectContaining {\n+ Object {\n+   \"auditData\": Object {\n+     \"recoveryMetadata\": Object {\n        \"reason\": \"Project reactivation - business requirement\",\n        \"recoveredBy\": \"admin-456\",\n        \"recoveryComplexity\": \"LOW\",\n        \"stakeholdersNotified\": true,\n      },\n    },\n-   \"dependencyActions\": ObjectContaining {\n+   \"dependencyActions\": Object {\n      \"dependenciesReconciled\": true,\n      \"integrityValidated\": true,\n      \"referencesRestored\": true,\n    },\n-   \"domainEvents\": ArrayContaining [\n-     Any<ModelUndeletedEvent>,\n-     Any<ModelRestoredEvent>,\n+   \"domainEvents\": Array [\n+     Object {\n+       \"aggregateId\": \"recoverable-model-123\",\n+       \"eventId\": \"00000001-0000-4000-8000-000000010000\",\n+       \"eventType\": \"ModelUndeleted\",\n+       \"eventVersion\": 1,\n+       \"occurredAt\": \"2025-08-28T15:14:13.294Z\",\n+       \"reason\": \"Project reactivation - business requirement\",\n+       \"restoredAt\": \"2025-08-28T15:14:13.294Z\",\n+       \"restoredBy\": \"admin-456\",\n+     },\n+     Object {\n+       \"aggregateId\": \"recoverable-model-123\",\n+       \"eventId\": \"00000002-0000-4000-8000-000000020000\",\n+       \"eventType\": \"ModelRestored\",\n+       \"eventVersion\": 1,\n+       \"occurredAt\": \"2025-08-28T15:14:13.294Z\",\n+       \"reason\": \"Project reactivation - business requirement\",\n+       \"restoredAt\": \"2025-08-28T15:14:13.294Z\",\n+       \"restoredBy\": \"admin-456\",\n+       \"targetStatus\": \"published\",\n+     },\n    ],\n-   \"recoveryDetails\": ObjectContaining {\n-     \"originalDeletionData\": ObjectContaining {\n-       \"deletedAt\": Any<Date>,\n+   \"recoveryDetails\": Object {\n+     \"originalDeletionData\": Object {\n+       \"deletedAt\": 2025-08-28T15:14:13.293Z,\n        \"deletedBy\": \"temp-deleter\",\n      },\n      \"recoveredBy\": \"admin-456\",\n-     \"recoveryTimestamp\": Any<Date>,\n-     \"restoredState\": ObjectContaining {\n+     \"recoveryTimestamp\": 2025-08-28T15:14:13.294Z,\n+     \"restoredState\": Object {\n        \"isDeleted\": false,\n        \"modelId\": \"recoverable-model-123\",\n        \"name\": \"Recoverable Model\",\n        \"status\": \"published\",\n      },\n    },\n    \"recoveryExecuted\": true,\n-   \"versioningActions\": ObjectContaining {\n-     \"newVersionCreated\": true,\n-     \"version\": \"2.3.2\",\n-     \"versionReason\": \"Model recovery restoration\",\n+   \"versioningActions\": Object {\n+     \"newVersionCreated\": false,\n+     \"version\": \"2.3.1\",\n+     \"versionReason\": \"No version changes required\",\n    },\n  }\n    at Object.toEqual (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts:307:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ModelRecoveryService Model Recovery Coordination CoordinateModelRecovery_ValidEligibleModel_ShouldExecuteRecovery should coordinate complete model recovery process","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053292,"status":"failed","title":"should coordinate complete model recovery process"},{"ancestorTitles":["ModelRecoveryService","Model Recovery Coordination","CoordinateModelRecovery_WithDependencyRepair_ShouldRepairAndRestore"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelRecoveryService Model Recovery Coordination CoordinateModelRecovery_WithDependencyRepair_ShouldRepairAndRestore should coordinate recovery with dependency repair actions","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394053300,"status":"passed","title":"should coordinate recovery with dependency repair actions"},{"ancestorTitles":["ModelRecoveryService","Model Recovery Coordination","CoordinateModelRecovery_WithVersionConflicts_ShouldResolveAndRestore"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts:479:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ModelRecoveryService Model Recovery Coordination CoordinateModelRecovery_WithVersionConflicts_ShouldResolveAndRestore should resolve version conflicts during recovery process","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053303,"status":"failed","title":"should resolve version conflicts during recovery process"},{"ancestorTitles":["ModelRecoveryService","Advanced Recovery Scenarios","CoordinateCascadingRecovery_WithDependentModels_ShouldRecoverHierarchy"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelRecoveryService Advanced Recovery Scenarios CoordinateCascadingRecovery_WithDependentModels_ShouldRecoverHierarchy should coordinate cascading recovery of model hierarchy","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394053306,"status":"passed","title":"should coordinate cascading recovery of model hierarchy"},{"ancestorTitles":["ModelRecoveryService","Advanced Recovery Scenarios","CoordinatePartialRecovery_WithSelectiveRestoration_ShouldRecoverComponents"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelRecoveryService Advanced Recovery Scenarios CoordinatePartialRecovery_WithSelectiveRestoration_ShouldRecoverComponents should coordinate partial recovery of specific model components","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053310,"status":"passed","title":"should coordinate partial recovery of specific model components"},{"ancestorTitles":["ModelRecoveryService","Recovery Validation and Quality Assurance","ValidateRecoveryIntegrity_PostRecovery_ShouldEnsureModelIntegrity"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"actual":{"integrityValidationPassed":true,"validationResults":{"modelStateValidation":{"isValid":true,"modelNotDeleted":false,"requiredPropertiesPresent":true,"metadataIntact":true},"dependencyValidation":{"integrityMaintained":true,"referencesValid":true,"dependenciesResolved":true},"businessRuleValidation":{"allRulesSatisfied":true,"noViolationsDetected":true},"dataConsistencyValidation":{"dataConsistent":true,"noCorruptionDetected":true,"auditTrailComplete":true}},"qualityMetrics":{"recoverySuccessRate":100,"dataPreservationRate":100,"integrityScore":100,"performanceImpact":"MINIMAL"}},"expected":{"sample":{"integrityValidationPassed":true,"validationResults":{"sample":{"modelStateValidation":{"sample":{"isValid":true,"modelNotDeleted":true,"requiredPropertiesPresent":true,"metadataIntact":true},"inverse":false},"dependencyValidation":{"sample":{"integrityMaintained":true,"referencesValid":true,"dependenciesResolved":true},"inverse":false},"businessRuleValidation":{"sample":{"allRulesSatisfied":true,"noViolationsDetected":true},"inverse":false},"dataConsistencyValidation":{"sample":{"dataConsistent":true,"noCorruptionDetected":true,"auditTrailComplete":true},"inverse":false}},"inverse":false},"qualityMetrics":{"sample":{"recoverySuccessRate":100,"dataPreservationRate":100,"integrityScore":100,"performanceImpact":"MINIMAL"},"inverse":false}},"inverse":false},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 8\n+ Received  + 8\n\n- ObjectContaining {\n+ Object {\n    \"integrityValidationPassed\": true,\n-   \"qualityMetrics\": ObjectContaining {\n+   \"qualityMetrics\": Object {\n      \"dataPreservationRate\": 100,\n      \"integrityScore\": 100,\n      \"performanceImpact\": \"MINIMAL\",\n      \"recoverySuccessRate\": 100,\n    },\n-   \"validationResults\": ObjectContaining {\n-     \"businessRuleValidation\": ObjectContaining {\n+   \"validationResults\": Object {\n+     \"businessRuleValidation\": Object {\n        \"allRulesSatisfied\": true,\n        \"noViolationsDetected\": true,\n      },\n-     \"dataConsistencyValidation\": ObjectContaining {\n+     \"dataConsistencyValidation\": Object {\n        \"auditTrailComplete\": true,\n        \"dataConsistent\": true,\n        \"noCorruptionDetected\": true,\n      },\n-     \"dependencyValidation\": ObjectContaining {\n+     \"dependencyValidation\": Object {\n        \"dependenciesResolved\": true,\n        \"integrityMaintained\": true,\n        \"referencesValid\": true,\n      },\n-     \"modelStateValidation\": ObjectContaining {\n+     \"modelStateValidation\": Object {\n        \"isValid\": true,\n        \"metadataIntact\": true,\n-       \"modelNotDeleted\": true,\n+       \"modelNotDeleted\": false,\n        \"requiredPropertiesPresent\": true,\n      },\n    },\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 8\n+ Received  + 8\n\n- ObjectContaining {\n+ Object {\n    \"integrityValidationPassed\": true,\n-   \"qualityMetrics\": ObjectContaining {\n+   \"qualityMetrics\": Object {\n      \"dataPreservationRate\": 100,\n      \"integrityScore\": 100,\n      \"performanceImpact\": \"MINIMAL\",\n      \"recoverySuccessRate\": 100,\n    },\n-   \"validationResults\": ObjectContaining {\n-     \"businessRuleValidation\": ObjectContaining {\n+   \"validationResults\": Object {\n+     \"businessRuleValidation\": Object {\n        \"allRulesSatisfied\": true,\n        \"noViolationsDetected\": true,\n      },\n-     \"dataConsistencyValidation\": ObjectContaining {\n+     \"dataConsistencyValidation\": Object {\n        \"auditTrailComplete\": true,\n        \"dataConsistent\": true,\n        \"noCorruptionDetected\": true,\n      },\n-     \"dependencyValidation\": ObjectContaining {\n+     \"dependencyValidation\": Object {\n        \"dependenciesResolved\": true,\n        \"integrityMaintained\": true,\n        \"referencesValid\": true,\n      },\n-     \"modelStateValidation\": ObjectContaining {\n+     \"modelStateValidation\": Object {\n        \"isValid\": true,\n        \"metadataIntact\": true,\n-       \"modelNotDeleted\": true,\n+       \"modelNotDeleted\": false,\n        \"requiredPropertiesPresent\": true,\n      },\n    },\n  }\n    at Object.toEqual (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts:659:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ModelRecoveryService Recovery Validation and Quality Assurance ValidateRecoveryIntegrity_PostRecovery_ShouldEnsureModelIntegrity should validate complete model integrity after recovery","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053314,"status":"failed","title":"should validate complete model integrity after recovery"},{"ancestorTitles":["ModelRecoveryService","Recovery Validation and Quality Assurance","ValidateRecoveryIntegrity_WithIssues_ShouldIdentifyProblems"],"duration":6,"failing":false,"failureDetails":[{"matcherResult":{"actual":{"dependencyIssues":{"brokenReferences":["ref-issue-1"]}},"expected":{"sample":{"dependencyIssues":{"sample":{"brokenReferences":["ref-issue-1"]},"inverse":false},"dataConsistencyIssues":{"sample":{"inconsistentFields":["metadata-mismatch-field"]},"inverse":false}},"inverse":false},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 2\n\n- ObjectContaining {\n-   \"dataConsistencyIssues\": ObjectContaining {\n-     \"inconsistentFields\": Array [\n-       \"metadata-mismatch-field\",\n-     ],\n-   },\n-   \"dependencyIssues\": ObjectContaining {\n+ Object {\n+   \"dependencyIssues\": Object {\n      \"brokenReferences\": Array [\n        \"ref-issue-1\",\n      ],\n    },\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 2\n\n- ObjectContaining {\n-   \"dataConsistencyIssues\": ObjectContaining {\n-     \"inconsistentFields\": Array [\n-       \"metadata-mismatch-field\",\n-     ],\n-   },\n-   \"dependencyIssues\": ObjectContaining {\n+ Object {\n+   \"dependencyIssues\": Object {\n      \"brokenReferences\": Array [\n        \"ref-issue-1\",\n      ],\n    },\n  }\n    at Object.toEqual (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts:721:45)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ModelRecoveryService Recovery Validation and Quality Assurance ValidateRecoveryIntegrity_WithIssues_ShouldIdentifyProblems should identify and report integrity issues post-recovery","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053318,"status":"failed","title":"should identify and report integrity issues post-recovery"},{"ancestorTitles":["ModelRecoveryService","Clean Architecture Recovery Service Compliance","RecoveryServiceCoordination_ShouldUseOnlyDomainDependencies"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"actual":"undefined","expected":"function","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"function\"\nReceived: \"undefined\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"function\"\nReceived: \"undefined\"\n    at toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts:770:58)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts:767:22)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"ModelRecoveryService Clean Architecture Recovery Service Compliance RecoveryServiceCoordination_ShouldUseOnlyDomainDependencies should coordinate recovery using only domain services and entities","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394053325,"status":"failed","title":"should coordinate recovery using only domain services and entities"},{"ancestorTitles":["ModelRecoveryService","Clean Architecture Recovery Service Compliance","DomainEventGeneration_ForRecovery_ShouldFollowEventSourcingPatterns"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"actual":{"aggregateId":"recoverable-model-123","restoredBy":"event-tester","restoredAt":"2025-08-28T15:14:13.331Z","reason":"Domain event testing"},"expected":{"sample":{"modelId":"recoverable-model-123","restoredBy":"event-tester","restoredAt":{"inverse":false}},"inverse":false},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 4\n\n- ObjectContaining {\n-   \"modelId\": \"recoverable-model-123\",\n-   \"restoredAt\": Any<Date>,\n+ Object {\n+   \"aggregateId\": \"recoverable-model-123\",\n+   \"reason\": \"Domain event testing\",\n+   \"restoredAt\": \"2025-08-28T15:14:13.331Z\",\n    \"restoredBy\": \"event-tester\",\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 4\n\n- ObjectContaining {\n-   \"modelId\": \"recoverable-model-123\",\n-   \"restoredAt\": Any<Date>,\n+ Object {\n+   \"aggregateId\": \"recoverable-model-123\",\n+   \"reason\": \"Domain event testing\",\n+   \"restoredAt\": \"2025-08-28T15:14:13.331Z\",\n    \"restoredBy\": \"event-tester\",\n  }\n    at Object.toEqual (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts:807:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ModelRecoveryService Clean Architecture Recovery Service Compliance DomainEventGeneration_ForRecovery_ShouldFollowEventSourcingPatterns should generate appropriate domain events for recovery operations","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394053330,"status":"failed","title":"should generate appropriate domain events for recovery operations"},{"ancestorTitles":["ModelRecoveryService","Clean Architecture Recovery Service Compliance","ErrorHandling_ShouldUseResultPattern"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts:838:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ModelRecoveryService Clean Architecture Recovery Service Compliance ErrorHandling_ShouldUseResultPattern should use Result pattern for error handling throughout recovery coordination","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053334,"status":"failed","title":"should use Result pattern for error handling throughout recovery coordination"}],"endTime":1756394053431,"message":"  ‚óè ModelRecoveryService ‚Ä∫ Recovery Eligibility Assessment ‚Ä∫ AssessRecoveryEligibility_WithIntegrityViolations_ShouldRequireRepair ‚Ä∫ should identify integrity violations and provide repair plan\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 9\n    + Received  + 9\n\n    - ObjectContaining {\n    -   \"estimatedRepairTime\": StringMatching /\\d+\\s*(hours?|days?)/,\n    + Object {\n    +   \"estimatedRepairTime\": \"2 hours\",\n        \"manualInterventionRequired\": true,\n    -   \"repairActions\": ArrayContaining [\n    -     ObjectContaining {\n    -       \"action\": \"RESTORE_MISSING_DEPENDENCY\",\n    -       \"complexity\": \"MEDIUM\",\n    -       \"target\": \"dependency-model-456\",\n    -     },\n    -     ObjectContaining {\n    +   \"repairActions\": Array [\n    +     Object {\n            \"action\": \"REPAIR_BROKEN_REFERENCE\",\n            \"complexity\": \"LOW\",\n            \"target\": \"ref-node-1\",\n    +     },\n    +     Object {\n    +       \"action\": \"REPAIR_BROKEN_REFERENCE\",\n    +       \"complexity\": \"LOW\",\n    +       \"target\": \"ref-node-2\",\n          },\n        ],\n      }\n\n    \u001b[0m \u001b[90m 235 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39meligibilityChecks\u001b[33m.\u001b[39mdependencyIntegrity\u001b[33m.\u001b[39mpassed)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 236 |\u001b[39m         \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 237 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mrepairPlan)\u001b[33m.\u001b[39mtoEqual(\n     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 238 |\u001b[39m           expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 239 |\u001b[39m             repairActions\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39marrayContaining([\n     \u001b[90m 240 |\u001b[39m               expect\u001b[33m.\u001b[39mobjectContaining({\u001b[0m\n\n      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:237:41)\n\n  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_ValidEligibleModel_ShouldExecuteRecovery ‚Ä∫ should coordinate complete model recovery process\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 16\n    + Received  + 35\n\n    - ObjectContaining {\n    -   \"auditData\": ObjectContaining {\n    -     \"recoveryMetadata\": ObjectContaining {\n    + Object {\n    +   \"auditData\": Object {\n    +     \"recoveryMetadata\": Object {\n            \"reason\": \"Project reactivation - business requirement\",\n            \"recoveredBy\": \"admin-456\",\n            \"recoveryComplexity\": \"LOW\",\n            \"stakeholdersNotified\": true,\n          },\n        },\n    -   \"dependencyActions\": ObjectContaining {\n    +   \"dependencyActions\": Object {\n          \"dependenciesReconciled\": true,\n          \"integrityValidated\": true,\n          \"referencesRestored\": true,\n        },\n    -   \"domainEvents\": ArrayContaining [\n    -     Any<ModelUndeletedEvent>,\n    -     Any<ModelRestoredEvent>,\n    +   \"domainEvents\": Array [\n    +     Object {\n    +       \"aggregateId\": \"recoverable-model-123\",\n    +       \"eventId\": \"00000001-0000-4000-8000-000000010000\",\n    +       \"eventType\": \"ModelUndeleted\",\n    +       \"eventVersion\": 1,\n    +       \"occurredAt\": \"2025-08-28T15:14:13.294Z\",\n    +       \"reason\": \"Project reactivation - business requirement\",\n    +       \"restoredAt\": \"2025-08-28T15:14:13.294Z\",\n    +       \"restoredBy\": \"admin-456\",\n    +     },\n    +     Object {\n    +       \"aggregateId\": \"recoverable-model-123\",\n    +       \"eventId\": \"00000002-0000-4000-8000-000000020000\",\n    +       \"eventType\": \"ModelRestored\",\n    +       \"eventVersion\": 1,\n    +       \"occurredAt\": \"2025-08-28T15:14:13.294Z\",\n    +       \"reason\": \"Project reactivation - business requirement\",\n    +       \"restoredAt\": \"2025-08-28T15:14:13.294Z\",\n    +       \"restoredBy\": \"admin-456\",\n    +       \"targetStatus\": \"published\",\n    +     },\n        ],\n    -   \"recoveryDetails\": ObjectContaining {\n    -     \"originalDeletionData\": ObjectContaining {\n    -       \"deletedAt\": Any<Date>,\n    +   \"recoveryDetails\": Object {\n    +     \"originalDeletionData\": Object {\n    +       \"deletedAt\": 2025-08-28T15:14:13.293Z,\n            \"deletedBy\": \"temp-deleter\",\n          },\n          \"recoveredBy\": \"admin-456\",\n    -     \"recoveryTimestamp\": Any<Date>,\n    -     \"restoredState\": ObjectContaining {\n    +     \"recoveryTimestamp\": 2025-08-28T15:14:13.294Z,\n    +     \"restoredState\": Object {\n            \"isDeleted\": false,\n            \"modelId\": \"recoverable-model-123\",\n            \"name\": \"Recoverable Model\",\n            \"status\": \"published\",\n          },\n        },\n        \"recoveryExecuted\": true,\n    -   \"versioningActions\": ObjectContaining {\n    -     \"newVersionCreated\": true,\n    -     \"version\": \"2.3.2\",\n    -     \"versionReason\": \"Model recovery restoration\",\n    +   \"versioningActions\": Object {\n    +     \"newVersionCreated\": false,\n    +     \"version\": \"2.3.1\",\n    +     \"versionReason\": \"No version changes required\",\n        },\n      }\n\n    \u001b[0m \u001b[90m 305 |\u001b[39m         \u001b[90m// Assert\u001b[39m\n     \u001b[90m 306 |\u001b[39m         expect(result\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 307 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoEqual(\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 308 |\u001b[39m           expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 309 |\u001b[39m             recoveryExecuted\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 310 |\u001b[39m             recoveryDetails\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39mobjectContaining({\u001b[0m\n\n      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:307:30)\n\n  ‚óè ModelRecoveryService ‚Ä∫ Model Recovery Coordination ‚Ä∫ CoordinateModelRecovery_WithVersionConflicts_ShouldResolveAndRestore ‚Ä∫ should resolve version conflicts during recovery process\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 477 |\u001b[39m\n     \u001b[90m 478 |\u001b[39m         \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 479 |\u001b[39m         expect(result\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 480 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mversioningActions)\u001b[33m.\u001b[39mtoEqual(\n     \u001b[90m 481 |\u001b[39m           expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 482 |\u001b[39m             versionConflictsDetected\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/model-recovery-service.test.ts:479:34)\n\n  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_PostRecovery_ShouldEnsureModelIntegrity ‚Ä∫ should validate complete model integrity after recovery\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 8\n    + Received  + 8\n\n    - ObjectContaining {\n    + Object {\n        \"integrityValidationPassed\": true,\n    -   \"qualityMetrics\": ObjectContaining {\n    +   \"qualityMetrics\": Object {\n          \"dataPreservationRate\": 100,\n          \"integrityScore\": 100,\n          \"performanceImpact\": \"MINIMAL\",\n          \"recoverySuccessRate\": 100,\n        },\n    -   \"validationResults\": ObjectContaining {\n    -     \"businessRuleValidation\": ObjectContaining {\n    +   \"validationResults\": Object {\n    +     \"businessRuleValidation\": Object {\n            \"allRulesSatisfied\": true,\n            \"noViolationsDetected\": true,\n          },\n    -     \"dataConsistencyValidation\": ObjectContaining {\n    +     \"dataConsistencyValidation\": Object {\n            \"auditTrailComplete\": true,\n            \"dataConsistent\": true,\n            \"noCorruptionDetected\": true,\n          },\n    -     \"dependencyValidation\": ObjectContaining {\n    +     \"dependencyValidation\": Object {\n            \"dependenciesResolved\": true,\n            \"integrityMaintained\": true,\n            \"referencesValid\": true,\n          },\n    -     \"modelStateValidation\": ObjectContaining {\n    +     \"modelStateValidation\": Object {\n            \"isValid\": true,\n            \"metadataIntact\": true,\n    -       \"modelNotDeleted\": true,\n    +       \"modelNotDeleted\": false,\n            \"requiredPropertiesPresent\": true,\n          },\n        },\n      }\n\n    \u001b[0m \u001b[90m 657 |\u001b[39m         \u001b[90m// Assert\u001b[39m\n     \u001b[90m 658 |\u001b[39m         expect(result\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 659 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoEqual(\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 660 |\u001b[39m           expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 661 |\u001b[39m             integrityValidationPassed\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 662 |\u001b[39m             validationResults\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39mobjectContaining({\u001b[0m\n\n      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:659:30)\n\n  ‚óè ModelRecoveryService ‚Ä∫ Recovery Validation and Quality Assurance ‚Ä∫ ValidateRecoveryIntegrity_WithIssues_ShouldIdentifyProblems ‚Ä∫ should identify and report integrity issues post-recovery\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 7\n    + Received  + 2\n\n    - ObjectContaining {\n    -   \"dataConsistencyIssues\": ObjectContaining {\n    -     \"inconsistentFields\": Array [\n    -       \"metadata-mismatch-field\",\n    -     ],\n    -   },\n    -   \"dependencyIssues\": ObjectContaining {\n    + Object {\n    +   \"dependencyIssues\": Object {\n          \"brokenReferences\": Array [\n            \"ref-issue-1\",\n          ],\n        },\n      }\n\n    \u001b[0m \u001b[90m 719 |\u001b[39m         expect(result\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 720 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mintegrityValidationPassed)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 721 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mdetectedIssues)\u001b[33m.\u001b[39mtoEqual(\n     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 722 |\u001b[39m           expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 723 |\u001b[39m             dependencyIssues\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 724 |\u001b[39m               brokenReferences\u001b[33m:\u001b[39m [\u001b[32m'ref-issue-1'\u001b[39m]\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:721:45)\n\n  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ RecoveryServiceCoordination_ShouldUseOnlyDomainDependencies ‚Ä∫ should coordinate recovery using only domain services and entities\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"function\"\n    Received: \"undefined\"\n\n    \u001b[0m \u001b[90m 768 |\u001b[39m           expect(dep)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 769 |\u001b[39m           \u001b[90m// Verify these are domain services, not infrastructure implementations\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 770 |\u001b[39m           expect(\u001b[36mtypeof\u001b[39m dep\u001b[33m.\u001b[39mvalidateDependencyIntegrity)\u001b[33m.\u001b[39mtoBe(\u001b[32m'function'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 771 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 772 |\u001b[39m\n     \u001b[90m 773 |\u001b[39m         \u001b[90m// Verify versioning service methods\u001b[39m\u001b[0m\n\n      at toBe (tests/unit/domain/services/model-recovery-service.test.ts:770:58)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/domain/services/model-recovery-service.test.ts:767:22)\n\n  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ DomainEventGeneration_ForRecovery_ShouldFollowEventSourcingPatterns ‚Ä∫ should generate appropriate domain events for recovery operations\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 4\n\n    - ObjectContaining {\n    -   \"modelId\": \"recoverable-model-123\",\n    -   \"restoredAt\": Any<Date>,\n    + Object {\n    +   \"aggregateId\": \"recoverable-model-123\",\n    +   \"reason\": \"Domain event testing\",\n    +   \"restoredAt\": \"2025-08-28T15:14:13.331Z\",\n        \"restoredBy\": \"event-tester\",\n      }\n\n    \u001b[0m \u001b[90m 805 |\u001b[39m         expect(undeletedEvent)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 806 |\u001b[39m         expect(undeletedEvent\u001b[33m.\u001b[39maggregateId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'recoverable-model-123'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 807 |\u001b[39m         expect(undeletedEvent\u001b[33m.\u001b[39mgetEventData())\u001b[33m.\u001b[39mtoEqual(\n     \u001b[90m     |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 808 |\u001b[39m           expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 809 |\u001b[39m             modelId\u001b[33m:\u001b[39m \u001b[32m'recoverable-model-123'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 810 |\u001b[39m             restoredBy\u001b[33m:\u001b[39m \u001b[32m'event-tester'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toEqual (tests/unit/domain/services/model-recovery-service.test.ts:807:47)\n\n  ‚óè ModelRecoveryService ‚Ä∫ Clean Architecture Recovery Service Compliance ‚Ä∫ ErrorHandling_ShouldUseResultPattern ‚Ä∫ should use Result pattern for error handling throughout recovery coordination\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 836 |\u001b[39m\n     \u001b[90m 837 |\u001b[39m         \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 838 |\u001b[39m         expect(result\u001b[33m.\u001b[39misFailure)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 839 |\u001b[39m         expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Dependency validation service unavailable'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 840 |\u001b[39m         \n     \u001b[90m 841 |\u001b[39m         \u001b[90m// Verify no partial state changes occurred\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/model-recovery-service.test.ts:838:34)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-recovery-service.test.ts","startTime":1756394051695,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Focused User Workflows - E2E Test Suite","PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","BasicWorkflowCreation_E2E"],"duration":16,"failing":false,"failureDetails":[{"matcherResult":{"expected":"00000001-0000-4000-8000-000000010000","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"00000001-0000-4000-8000-000000010000\"\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"00000001-0000-4000-8000-000000010000\"\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\focused-user-workflows.e2e.test.ts:351:44)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Focused User Workflows - E2E Test Suite PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 BasicWorkflowCreation_E2E should_ExecuteBasicWorkflowChain_WithExistingUseCases","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053449,"status":"failed","title":"should_ExecuteBasicWorkflowChain_WithExistingUseCases"},{"ancestorTitles":["Focused User Workflows - E2E Test Suite","PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","DependencyEnforcement_E2E"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"not found\"\nReceived string:    \"Valid position coordinates are required\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"not found\"\nReceived string:    \"Valid position coordinates are required\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\focused-user-workflows.e2e.test.ts:458:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Focused User Workflows - E2E Test Suite PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 DependencyEnforcement_E2E should_PreventInvalidOperations_WithProperErrorMessages","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053486,"status":"failed","title":"should_PreventInvalidOperations_WithProperErrorMessages"},{"ancestorTitles":["Focused User Workflows - E2E Test Suite","MODEL LIFECYCLE WORKFLOWS","ModelVersioning_E2E"],"duration":26,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Focused User Workflows - E2E Test Suite MODEL LIFECYCLE WORKFLOWS ModelVersioning_E2E should_CreateModelVersions_WhenWorkflowCompleted","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053489,"status":"passed","title":"should_CreateModelVersions_WhenWorkflowCompleted"},{"ancestorTitles":["Focused User Workflows - E2E Test Suite","WORKFLOW VALIDATION","StructuralValidation_E2E"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Focused User Workflows - E2E Test Suite WORKFLOW VALIDATION StructuralValidation_E2E should_ValidateWorkflowStructure_BeforePublication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053516,"status":"passed","title":"should_ValidateWorkflowStructure_BeforePublication"},{"ancestorTitles":["Focused User Workflows - E2E Test Suite","INTEGRATION WITH EXISTING ARCHITECTURE","CleanArchitectureCompliance_E2E"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"expected":"00000004-0000-4000-8000-000000040000","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"00000004-0000-4000-8000-000000040000\"\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"00000004-0000-4000-8000-000000040000\"\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\focused-user-workflows.e2e.test.ts:582:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Focused User Workflows - E2E Test Suite INTEGRATION WITH EXISTING ARCHITECTURE CleanArchitectureCompliance_E2E should_MaintainArchitecturalBoundaries_ThroughoutWorkflow","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053518,"status":"failed","title":"should_MaintainArchitecturalBoundaries_ThroughoutWorkflow"}],"endTime":1756394053589,"message":"  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ BasicWorkflowCreation_E2E ‚Ä∫ should_ExecuteBasicWorkflowChain_WithExistingUseCases\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"00000001-0000-4000-8000-000000010000\"\n    Received: undefined\n\n    \u001b[0m \u001b[90m 349 |\u001b[39m         \u001b[36mconst\u001b[39m createdModel \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m mockModelRepository\u001b[33m.\u001b[39mfindById(modelId)\u001b[33m;\u001b[39m\n     \u001b[90m 350 |\u001b[39m         expect(createdModel\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 351 |\u001b[39m         expect(createdModel\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mmodelId)\u001b[33m.\u001b[39mtoBe(modelId)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 352 |\u001b[39m\n     \u001b[90m 353 |\u001b[39m         \u001b[90m// UC-002: Add Container Node \u001b[39m\n     \u001b[90m 354 |\u001b[39m         \u001b[36mconst\u001b[39m containerResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m addContainerUseCase\u001b[33m.\u001b[39mexecute({\u001b[0m\n\n      at Object.toBe (tests/e2e/focused-user-workflows.e2e.test.ts:351:44)\n\n  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyEnforcement_E2E ‚Ä∫ should_PreventInvalidOperations_WithProperErrorMessages\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"not found\"\n    Received string:    \"Valid position coordinates are required\"\n\n    \u001b[0m \u001b[90m 456 |\u001b[39m\n     \u001b[90m 457 |\u001b[39m         expect(addContainerResult\u001b[33m.\u001b[39misFailure)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 458 |\u001b[39m         expect(addContainerResult\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'not found'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 459 |\u001b[39m\n     \u001b[90m 460 |\u001b[39m         \u001b[90m// Test adding action to non-existent container\u001b[39m\n     \u001b[90m 461 |\u001b[39m         \u001b[36mconst\u001b[39m createResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createModelUseCase\u001b[33m.\u001b[39mexecute({\u001b[0m\n\n      at Object.toContain (tests/e2e/focused-user-workflows.e2e.test.ts:458:42)\n\n  ‚óè Focused User Workflows - E2E Test Suite ‚Ä∫ INTEGRATION WITH EXISTING ARCHITECTURE ‚Ä∫ CleanArchitectureCompliance_E2E ‚Ä∫ should_MaintainArchitecturalBoundaries_ThroughoutWorkflow\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"00000004-0000-4000-8000-000000040000\"\n    Received: undefined\n\n    \u001b[0m \u001b[90m 580 |\u001b[39m         \u001b[36mconst\u001b[39m storedModel \u001b[33m=\u001b[39m mockModelRepository\u001b[33m.\u001b[39mgetModel(modelId)\u001b[33m;\u001b[39m\n     \u001b[90m 581 |\u001b[39m         expect(storedModel)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 582 |\u001b[39m         expect(storedModel\u001b[33m.\u001b[39mmodelId)\u001b[33m.\u001b[39mtoBe(modelId)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 583 |\u001b[39m\n     \u001b[90m 584 |\u001b[39m         \u001b[90m// Verify domain events were published (event-driven architecture)\u001b[39m\n     \u001b[90m 585 |\u001b[39m         \u001b[36mconst\u001b[39m events \u001b[33m=\u001b[39m mockEventBus\u001b[33m.\u001b[39mgetAllEvents()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/e2e/focused-user-workflows.e2e.test.ts:582:37)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\focused-user-workflows.e2e.test.ts","startTime":1756394051778,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ModelVersioningService","Version Creation"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Creation should create major version successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053444,"status":"passed","title":"should create major version successfully"},{"ancestorTitles":["ModelVersioningService","Version Creation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Creation should create minor version successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053454,"status":"passed","title":"should create minor version successfully"},{"ancestorTitles":["ModelVersioningService","Version Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Creation should create patch version successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053456,"status":"passed","title":"should create patch version successfully"},{"ancestorTitles":["ModelVersioningService","Version Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Creation should reject invalid version type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053458,"status":"passed","title":"should reject invalid version type"},{"ancestorTitles":["ModelVersioningService","Version Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Creation should handle version creation from higher starting version","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053459,"status":"passed","title":"should handle version creation from higher starting version"},{"ancestorTitles":["ModelVersioningService","Version Creation"],"duration":20,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Creation should handle models with prerelease versions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053461,"status":"passed","title":"should handle models with prerelease versions"},{"ancestorTitles":["ModelVersioningService","Version Comparison"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Comparison should correctly identify newer version","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053481,"status":"passed","title":"should correctly identify newer version"},{"ancestorTitles":["ModelVersioningService","Version Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Comparison should correctly identify older version","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053483,"status":"passed","title":"should correctly identify older version"},{"ancestorTitles":["ModelVersioningService","Version Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Comparison should correctly identify equal versions","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053484,"status":"passed","title":"should correctly identify equal versions"},{"ancestorTitles":["ModelVersioningService","Version Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Comparison should handle complex version comparisons","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053485,"status":"passed","title":"should handle complex version comparisons"},{"ancestorTitles":["ModelVersioningService","Model Comparison"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Model Comparison should detect no changes between identical models","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394053487,"status":"passed","title":"should detect no changes between identical models"},{"ancestorTitles":["ModelVersioningService","Model Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Model Comparison should detect added nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053489,"status":"passed","title":"should detect added nodes"},{"ancestorTitles":["ModelVersioningService","Model Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Model Comparison should detect removed nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053490,"status":"passed","title":"should detect removed nodes"},{"ancestorTitles":["ModelVersioningService","Model Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Model Comparison should detect metadata changes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053491,"status":"passed","title":"should detect metadata changes"},{"ancestorTitles":["ModelVersioningService","Model Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Model Comparison should handle complex model differences","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053492,"status":"passed","title":"should handle complex model differences"},{"ancestorTitles":["ModelVersioningService","Version Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Validation should allow valid version increments","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053493,"status":"passed","title":"should allow valid version increments"},{"ancestorTitles":["ModelVersioningService","Version Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Validation should reject older target versions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053494,"status":"passed","title":"should reject older target versions"},{"ancestorTitles":["ModelVersioningService","Version Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Validation should reject equal target versions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053494,"status":"passed","title":"should reject equal target versions"},{"ancestorTitles":["ModelVersioningService","Version Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Validation should reject major version with non-zero minor/patch","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053495,"status":"passed","title":"should reject major version with non-zero minor/patch"},{"ancestorTitles":["ModelVersioningService","Version Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Validation should reject minor version with non-zero patch","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053496,"status":"passed","title":"should reject minor version with non-zero patch"},{"ancestorTitles":["ModelVersioningService","Version Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version Validation should reject skipped version numbers","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053497,"status":"passed","title":"should reject skipped version numbers"},{"ancestorTitles":["ModelVersioningService","Model Merging"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Model Merging should indicate merge not implemented","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053500,"status":"passed","title":"should indicate merge not implemented"},{"ancestorTitles":["ModelVersioningService","Version History"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version History should return empty version history","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053500,"status":"passed","title":"should return empty version history"},{"ancestorTitles":["ModelVersioningService","Version History"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Version History should handle version history for any model ID","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053502,"status":"passed","title":"should handle version history for any model ID"},{"ancestorTitles":["ModelVersioningService","Error Handling"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Error Handling should handle invalid model gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053503,"status":"passed","title":"should handle invalid model gracefully"},{"ancestorTitles":["ModelVersioningService","Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Error Handling should handle comparison errors gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053507,"status":"passed","title":"should handle comparison errors gracefully"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Complete State Capture"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Complete State Capture captureModelSnapshot_ComplexModel_CapturesAllNodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053508,"status":"passed","title":"captureModelSnapshot_ComplexModel_CapturesAllNodes"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Complete State Capture"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Complete State Capture captureModelSnapshot_WithActionNodes_CapturesActionConfiguration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053509,"status":"passed","title":"captureModelSnapshot_WithActionNodes_CapturesActionConfiguration"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Complete State Capture"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Complete State Capture captureModelSnapshot_WithDependencies_CapturesRelationships","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053510,"status":"passed","title":"captureModelSnapshot_WithDependencies_CapturesRelationships"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Complete State Capture"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Complete State Capture captureModelSnapshot_WithExecutionContext_CapturesRuntimeState","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053515,"status":"passed","title":"captureModelSnapshot_WithExecutionContext_CapturesRuntimeState"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Versioned State Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Versioned State Validation validateSnapshot_ValidModel_PassesValidation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053518,"status":"passed","title":"validateSnapshot_ValidModel_PassesValidation"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Versioned State Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Versioned State Validation validateSnapshot_CorruptedData_FailsValidation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053518,"status":"passed","title":"validateSnapshot_CorruptedData_FailsValidation"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Versioned State Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Versioned State Validation validateSnapshot_MissingRequiredNodes_FailsValidation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053519,"status":"passed","title":"validateSnapshot_MissingRequiredNodes_FailsValidation"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Version Change Analysis"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [\"0000006a-0000-4000-8000-0000006a0000\"]","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [\"0000006a-0000-4000-8000-0000006a0000\"]\n    at Object.toHaveLength (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-versioning-service.test.ts:935:36)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"ModelVersioningService Domain Service Coordination Version Change Analysis analyzeChanges_NodePropertyModification_DetectsSpecificChanges","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053520,"status":"failed","title":"analyzeChanges_NodePropertyModification_DetectsSpecificChanges"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Version Change Analysis"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected value: \"00000073-0000-4000-8000-000000730000\"\nReceived array: []","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected value: \"00000073-0000-4000-8000-000000730000\"\nReceived array: []\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-versioning-service.test.ts:1018:39)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"ModelVersioningService Domain Service Coordination Version Change Analysis analyzeChanges_DependencyChanges_CategorizesDependencyModifications","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053558,"status":"failed","title":"analyzeChanges_DependencyChanges_CategorizesDependencyModifications"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Version Change Analysis"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Version Change Analysis analyzeChanges_MetadataEvolution_TracksMetadataHistory","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053560,"status":"passed","title":"analyzeChanges_MetadataEvolution_TracksMetadataHistory"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Change Significance Assessment"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Change Significance Assessment assessChangeSignificance_BreakingChanges_RecommendsMajorVersion","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053561,"status":"passed","title":"assessChangeSignificance_BreakingChanges_RecommendsMajorVersion"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Change Significance Assessment"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Change Significance Assessment assessChangeSignificance_BackwardCompatible_RecommendsMinorVersion","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053561,"status":"passed","title":"assessChangeSignificance_BackwardCompatible_RecommendsMinorVersion"},{"ancestorTitles":["ModelVersioningService","Domain Service Coordination","Change Significance Assessment"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Domain Service Coordination Change Significance Assessment assessChangeSignificance_BugFixes_RecommendsPatchVersion","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053563,"status":"passed","title":"assessChangeSignificance_BugFixes_RecommendsPatchVersion"},{"ancestorTitles":["ModelVersioningService","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Business Logic Integration should create versions for models with validation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053563,"status":"passed","title":"should create versions for models with validation"},{"ancestorTitles":["ModelVersioningService","Business Logic Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Business Logic Integration should handle complex model state transitions","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394053564,"status":"passed","title":"should handle complex model state transitions"},{"ancestorTitles":["ModelVersioningService","Metadata Change Detection"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelVersioningService Metadata Change Detection should detect all types of metadata changes","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394053566,"status":"passed","title":"should detect all types of metadata changes"}],"endTime":1756394053636,"message":"  ‚óè ModelVersioningService ‚Ä∫ Domain Service Coordination ‚Ä∫ Version Change Analysis ‚Ä∫ analyzeChanges_NodePropertyModification_DetectsSpecificChanges\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 0\n    Received length: 1\n    Received array:  [\"0000006a-0000-4000-8000-0000006a0000\"]\n\n    \u001b[0m \u001b[90m 933 |\u001b[39m         \u001b[36mconst\u001b[39m changes \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n     \u001b[90m 934 |\u001b[39m         expect(changes\u001b[33m.\u001b[39mmodifiedNodes)\u001b[33m.\u001b[39mtoContain(nodeId\u001b[33m.\u001b[39mvalue)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 935 |\u001b[39m         expect(changes\u001b[33m.\u001b[39maddedNodes)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 936 |\u001b[39m         expect(changes\u001b[33m.\u001b[39mremovedNodes)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 937 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 938 |\u001b[39m\u001b[0m\n\n      at Object.toHaveLength (tests/unit/domain/services/model-versioning-service.test.ts:935:36)\n\n  ‚óè ModelVersioningService ‚Ä∫ Domain Service Coordination ‚Ä∫ Version Change Analysis ‚Ä∫ analyzeChanges_DependencyChanges_CategorizesDependencyModifications\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected value: \"00000073-0000-4000-8000-000000730000\"\n    Received array: []\n\n    \u001b[0m \u001b[90m 1016 |\u001b[39m         expect(result\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 1017 |\u001b[39m         \u001b[36mconst\u001b[39m changes \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1018 |\u001b[39m         expect(changes\u001b[33m.\u001b[39mmodifiedNodes)\u001b[33m.\u001b[39mtoContain(node2Id\u001b[33m.\u001b[39mvalue)\u001b[33m;\u001b[39m\n     \u001b[90m      |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 1019 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 1020 |\u001b[39m\n     \u001b[90m 1021 |\u001b[39m       it(\u001b[32m'analyzeChanges_MetadataEvolution_TracksMetadataHistory'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toContain (tests/unit/domain/services/model-versioning-service.test.ts:1018:39)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-versioning-service.test.ts","startTime":1756394051955,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["NodeContextAccessService","context building and management","buildContext"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management buildContext should build context for node successfully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053449,"status":"passed","title":"should build context for node successfully"},{"ancestorTitles":["NodeContextAccessService","context building and management","buildContext"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management buildContext should build child context with proper inheritance","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053461,"status":"passed","title":"should build child context with proper inheritance"},{"ancestorTitles":["NodeContextAccessService","context building and management","buildContext"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management buildContext should handle different context scopes","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394053463,"status":"passed","title":"should handle different context scopes"},{"ancestorTitles":["NodeContextAccessService","context building and management","buildContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management buildContext should validate context data before building","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053465,"status":"passed","title":"should validate context data before building"},{"ancestorTitles":["NodeContextAccessService","context building and management","updateNodeContext"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management updateNodeContext should update existing context successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053466,"status":"passed","title":"should update existing context successfully"},{"ancestorTitles":["NodeContextAccessService","context building and management","updateNodeContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management updateNodeContext should merge updates with existing context data","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053477,"status":"passed","title":"should merge updates with existing context data"},{"ancestorTitles":["NodeContextAccessService","context building and management","updateNodeContext"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management updateNodeContext should reject updates to non-existent context","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053479,"status":"passed","title":"should reject updates to non-existent context"},{"ancestorTitles":["NodeContextAccessService","context building and management","updateNodeContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management updateNodeContext should handle concurrent updates gracefully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053479,"status":"passed","title":"should handle concurrent updates gracefully"},{"ancestorTitles":["NodeContextAccessService","context building and management","clearNodeContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management clearNodeContext should clear node context successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053481,"status":"passed","title":"should clear node context successfully"},{"ancestorTitles":["NodeContextAccessService","context building and management","clearNodeContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management clearNodeContext should clear child contexts when clearing parent","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053482,"status":"passed","title":"should clear child contexts when clearing parent"},{"ancestorTitles":["NodeContextAccessService","context building and management","clearNodeContext"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context building and management clearNodeContext should handle clearing non-existent context gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053483,"status":"passed","title":"should handle clearing non-existent context gracefully"},{"ancestorTitles":["NodeContextAccessService","context propagation and inheritance","propagateContext"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context propagation and inheritance propagateContext should propagate context from parent to child","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053483,"status":"passed","title":"should propagate context from parent to child"},{"ancestorTitles":["NodeContextAccessService","context propagation and inheritance","propagateContext"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'constant')\n    at Object.constant (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:328:49)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context propagation and inheritance propagateContext should handle override rules in context propagation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053485,"status":"failed","title":"should handle override rules in context propagation"},{"ancestorTitles":["NodeContextAccessService","context propagation and inheritance","propagateContext"],"duration":3,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at Object.toHaveLength (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:373:49)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context propagation and inheritance propagateContext should handle deep context propagation chains","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053518,"status":"failed","title":"should handle deep context propagation chains"},{"ancestorTitles":["NodeContextAccessService","context propagation and inheritance","propagateContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context propagation and inheritance propagateContext should reject propagation from non-existent context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053522,"status":"passed","title":"should reject propagation from non-existent context"},{"ancestorTitles":["NodeContextAccessService","context propagation and inheritance","getHierarchicalContext"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at Object.toHaveLength (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:423:37)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context propagation and inheritance getHierarchicalContext should return complete hierarchical context","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053523,"status":"failed","title":"should return complete hierarchical context"},{"ancestorTitles":["NodeContextAccessService","context propagation and inheritance","getHierarchicalContext"],"duration":2,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at Object.toHaveLength (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:449:37)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context propagation and inheritance getHierarchicalContext should return single level for nodes without parents","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053524,"status":"failed","title":"should return single level for nodes without parents"},{"ancestorTitles":["NodeContextAccessService","context propagation and inheritance","getHierarchicalContext"],"duration":2,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at Object.toHaveLength (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:479:37)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context propagation and inheritance getHierarchicalContext should handle deep hierarchies efficiently","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053526,"status":"failed","title":"should handle deep hierarchies efficiently"},{"ancestorTitles":["NodeContextAccessService","context propagation and inheritance","getHierarchicalContext"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Context not found\"\nReceived string:    \"Node context not found\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Context not found\"\nReceived string:    \"Node context not found\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:490:30)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context propagation and inheritance getHierarchicalContext should reject hierarchical request for non-existent node","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053528,"status":"failed","title":"should reject hierarchical request for non-existent node"},{"ancestorTitles":["NodeContextAccessService","context access control and validation","validateContextAccess"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:517:32)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context access control and validation validateContextAccess should validate read access successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053531,"status":"failed","title":"should validate read access successfully"},{"ancestorTitles":["NodeContextAccessService","context access control and validation","validateContextAccess"],"duration":2,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: Cannot set properties of undefined (setting 'accessLevel')\n    at Object.<anonymous> (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:533:82)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context access control and validation validateContextAccess should validate write access with proper permissions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053536,"status":"failed","title":"should validate write access with proper permissions"},{"ancestorTitles":["NodeContextAccessService","context access control and validation","validateContextAccess"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"expected":false,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:570:32)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context access control and validation validateContextAccess should deny access for insufficient permissions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053538,"status":"failed","title":"should deny access for insufficient permissions"},{"ancestorTitles":["NodeContextAccessService","context access control and validation","validateContextAccess"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:602:32)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context access control and validation validateContextAccess should handle cross-node access validation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053541,"status":"failed","title":"should handle cross-node access validation"},{"ancestorTitles":["NodeContextAccessService","context access control and validation","validateContextAccess"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nMatcher error: received value must not be null nor undefined\n\nReceived has value: undefined\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:630:45)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context access control and validation validateContextAccess should validate property-level access controls","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053544,"status":"failed","title":"should validate property-level access controls"},{"ancestorTitles":["NodeContextAccessService","context scope management","cloneContextScope"],"duration":6,"failing":false,"failureDetails":[{"matcherResult":{"message":"Expected [object Object] to be a successful Result","pass":false}}],"failureMessages":["Error: Expected [object Object] to be a successful Result\n    at Object.toBeValidResult (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:669:30)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context scope management cloneContextScope should clone context scope successfully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053545,"status":"failed","title":"should clone context scope successfully"},{"ancestorTitles":["NodeContextAccessService","context scope management","cloneContextScope"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: transformationRules is not iterable\n    at NodeContextAccessService.transformationRules [as cloneContextScope] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\services\\node-context-access-service.ts:839:26)\n    at Object.cloneContextScope (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:690:44)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context scope management cloneContextScope should handle cloning with transformation rules","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053551,"status":"failed","title":"should handle cloning with transformation rules"},{"ancestorTitles":["NodeContextAccessService","context scope management","cloneContextScope"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context scope management cloneContextScope should reject cloning non-existent context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053567,"status":"passed","title":"should reject cloning non-existent context"},{"ancestorTitles":["NodeContextAccessService","context scope management","mergeContextScopes"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context scope management mergeContextScopes should merge multiple context scopes successfully","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394053568,"status":"passed","title":"should merge multiple context scopes successfully"},{"ancestorTitles":["NodeContextAccessService","context scope management","mergeContextScopes"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: precedenceRules.map is not a function\n    at NodeContextAccessService.map [as mergeContextScopes] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\services\\node-context-access-service.ts:874:51)\n    at Object.mergeContextScopes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:784:44)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context scope management mergeContextScopes should handle merge conflicts with precedence rules","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053569,"status":"failed","title":"should handle merge conflicts with precedence rules"},{"ancestorTitles":["NodeContextAccessService","context scope management","mergeContextScopes"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService context scope management mergeContextScopes should handle merging with empty source list","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053570,"status":"passed","title":"should handle merging with empty source list"},{"ancestorTitles":["NodeContextAccessService","context scope management","mergeContextScopes"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"One or more source contexts not found\"\nReceived string:    \"No valid source contexts found\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"One or more source contexts not found\"\nReceived string:    \"No valid source contexts found\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:830:30)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService context scope management mergeContextScopes should handle merging with non-existent contexts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053571,"status":"failed","title":"should handle merging with non-existent contexts"},{"ancestorTitles":["NodeContextAccessService","error handling and edge cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService error handling and edge cases should handle concurrent context operations","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394053572,"status":"passed","title":"should handle concurrent context operations"},{"ancestorTitles":["NodeContextAccessService","error handling and edge cases"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"message":"Expected [object Object] to be a failed Result","pass":false}}],"failureMessages":["Error: Expected [object Object] to be a failed Result\n    at Object.toBeFailureResult (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:883:30)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService error handling and edge cases should handle circular reference prevention","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053575,"status":"failed","title":"should handle circular reference prevention"},{"ancestorTitles":["NodeContextAccessService","error handling and edge cases"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService error handling and edge cases should handle memory management for large contexts","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053576,"status":"passed","title":"should handle memory management for large contexts"},{"ancestorTitles":["NodeContextAccessService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeContextAccessService error handling and edge cases should handle malformed context data gracefully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053581,"status":"passed","title":"should handle malformed context data gracefully"},{"ancestorTitles":["NodeContextAccessService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":false,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts:973:51)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"NodeContextAccessService error handling and edge cases should maintain context isolation between different scopes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053582,"status":"failed","title":"should maintain context isolation between different scopes"}],"endTime":1756394053753,"message":"  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle override rules in context propagation\n\n    TypeError: Cannot read properties of undefined (reading 'constant')\n\n    \u001b[0m \u001b[90m 326 |\u001b[39m         expect(updatedChild)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 327 |\u001b[39m         expect(updatedChild\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39msetting)\u001b[33m.\u001b[39mtoBe(\u001b[32m'child-value'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Override allowed\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 328 |\u001b[39m         expect(updatedChild\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39minheritedData\u001b[33m.\u001b[39mconstant)\u001b[33m.\u001b[39mtoBe(\u001b[32m'unchangeable'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// No override\u001b[39m\n     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 329 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 330 |\u001b[39m\n     \u001b[90m 331 |\u001b[39m       it(\u001b[32m'should handle deep context propagation chains'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.constant (tests/unit/domain/services/node-context-access-service.test.ts:328:49)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ propagateContext ‚Ä∫ should handle deep context propagation chains\n\n    TypeError: expect(received).toHaveLength(expected)\n\n    Matcher error: received value must have a length property whose value must be a number\n\n    Received has value: undefined\n\n    \u001b[0m \u001b[90m 371 |\u001b[39m         \u001b[36mconst\u001b[39m hierarchicalResult \u001b[33m=\u001b[39m contextService\u001b[33m.\u001b[39mgetHierarchicalContext(childNodeId)\u001b[33m;\u001b[39m\n     \u001b[90m 372 |\u001b[39m         expect(hierarchicalResult)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 373 |\u001b[39m         expect(hierarchicalResult\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mlevels)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 374 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 375 |\u001b[39m\n     \u001b[90m 376 |\u001b[39m       it(\u001b[32m'should reject propagation from non-existent context'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:373:49)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return complete hierarchical context\n\n    TypeError: expect(received).toHaveLength(expected)\n\n    Matcher error: received value must have a length property whose value must be a number\n\n    Received has value: undefined\n\n    \u001b[0m \u001b[90m 421 |\u001b[39m         \u001b[36mconst\u001b[39m hierarchical \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n     \u001b[90m 422 |\u001b[39m         expect(hierarchical\u001b[33m.\u001b[39mnodeId)\u001b[33m.\u001b[39mtoEqual(childNodeId)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 423 |\u001b[39m         expect(hierarchical\u001b[33m.\u001b[39mlevels)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 424 |\u001b[39m         \n     \u001b[90m 425 |\u001b[39m         \u001b[90m// Verify level order (child -> parent -> grandparent)\u001b[39m\n     \u001b[90m 426 |\u001b[39m         expect(hierarchical\u001b[33m.\u001b[39mlevels[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mscope)\u001b[33m.\u001b[39mtoBe(\u001b[32m'execution'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:423:37)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should return single level for nodes without parents\n\n    TypeError: expect(received).toHaveLength(expected)\n\n    Matcher error: received value must have a length property whose value must be a number\n\n    Received has value: undefined\n\n    \u001b[0m \u001b[90m 447 |\u001b[39m         expect(hierarchicalResult)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 448 |\u001b[39m         \u001b[36mconst\u001b[39m hierarchical \u001b[33m=\u001b[39m hierarchicalResult\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 449 |\u001b[39m         expect(hierarchical\u001b[33m.\u001b[39mlevels)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 450 |\u001b[39m         expect(hierarchical\u001b[33m.\u001b[39mlevels[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mstandalone)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 451 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 452 |\u001b[39m\u001b[0m\n\n      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:449:37)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should handle deep hierarchies efficiently\n\n    TypeError: expect(received).toHaveLength(expected)\n\n    Matcher error: received value must have a length property whose value must be a number\n\n    Received has value: undefined\n\n    \u001b[0m \u001b[90m 477 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 478 |\u001b[39m         \u001b[36mconst\u001b[39m hierarchical \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 479 |\u001b[39m         expect(hierarchical\u001b[33m.\u001b[39mlevels)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 480 |\u001b[39m         expect(hierarchical\u001b[33m.\u001b[39mtotalLevels)\u001b[33m.\u001b[39mtoBe(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 481 |\u001b[39m         expect(hierarchical\u001b[33m.\u001b[39mmaxDepthReached)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 482 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveLength (tests/unit/domain/services/node-context-access-service.test.ts:479:37)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context propagation and inheritance ‚Ä∫ getHierarchicalContext ‚Ä∫ should reject hierarchical request for non-existent node\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Context not found\"\n    Received string:    \"Node context not found\"\n\n    \u001b[0m \u001b[90m 488 |\u001b[39m         \u001b[90m// Assert\u001b[39m\n     \u001b[90m 489 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeFailureResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 490 |\u001b[39m         expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Context not found'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 491 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 492 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 493 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:490:30)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate read access successfully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n    \u001b[0m \u001b[90m 515 |\u001b[39m         expect(validation)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 516 |\u001b[39m         \u001b[36mconst\u001b[39m access \u001b[33m=\u001b[39m validation\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 517 |\u001b[39m         expect(access\u001b[33m.\u001b[39mgranted)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 518 |\u001b[39m         expect(access\u001b[33m.\u001b[39mlevel)\u001b[33m.\u001b[39mtoBe(\u001b[32m'read'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 519 |\u001b[39m         expect(access\u001b[33m.\u001b[39maccessibleProperties)\u001b[33m.\u001b[39mtoContain(\u001b[32m'public'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 520 |\u001b[39m         expect(access\u001b[33m.\u001b[39mrestrictedProperties)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoContain(\u001b[32m'public'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:517:32)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate write access with proper permissions\n\n    TypeError: Cannot set properties of undefined (setting 'accessLevel')\n\n    \u001b[0m \u001b[90m 531 |\u001b[39m\n     \u001b[90m 532 |\u001b[39m         \u001b[90m// Update context to have write access level\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 533 |\u001b[39m         (contextService \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mcontexts\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(parentNodeId\u001b[33m.\u001b[39mtoString())\u001b[33m.\u001b[39maccessLevel \u001b[33m=\u001b[39m \u001b[32m'read-write'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 534 |\u001b[39m\n     \u001b[90m 535 |\u001b[39m         \u001b[90m// Act\u001b[39m\n     \u001b[90m 536 |\u001b[39m         \u001b[36mconst\u001b[39m validation \u001b[33m=\u001b[39m contextService\u001b[33m.\u001b[39mvalidateContextAccess(\u001b[0m\n\n      at Object.<anonymous> (tests/unit/domain/services/node-context-access-service.test.ts:533:82)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should deny access for insufficient permissions\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: undefined\n\n    \u001b[0m \u001b[90m 568 |\u001b[39m         expect(validation)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 569 |\u001b[39m         \u001b[36mconst\u001b[39m access \u001b[33m=\u001b[39m validation\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 570 |\u001b[39m         expect(access\u001b[33m.\u001b[39mgranted)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 571 |\u001b[39m         expect(access\u001b[33m.\u001b[39mdenialReason)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Insufficient permissions'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 572 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 573 |\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:570:32)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should handle cross-node access validation\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n    \u001b[0m \u001b[90m 600 |\u001b[39m         expect(validation)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 601 |\u001b[39m         \u001b[36mconst\u001b[39m access \u001b[33m=\u001b[39m validation\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 602 |\u001b[39m         expect(access\u001b[33m.\u001b[39mgranted)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Child should have read access to parent\u001b[39m\n     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 603 |\u001b[39m         expect(access\u001b[33m.\u001b[39minheritanceAllowed)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 604 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 605 |\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:602:32)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context access control and validation ‚Ä∫ validateContextAccess ‚Ä∫ should validate property-level access controls\n\n    expect(received).toContain(expected) // indexOf\n\n    Matcher error: received value must not be null nor undefined\n\n    Received has value: undefined\n\n    \u001b[0m \u001b[90m 628 |\u001b[39m         expect(validation)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 629 |\u001b[39m         \u001b[36mconst\u001b[39m access \u001b[33m=\u001b[39m validation\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 630 |\u001b[39m         expect(access\u001b[33m.\u001b[39maccessibleProperties)\u001b[33m.\u001b[39mtoContain(\u001b[32m'public'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 631 |\u001b[39m         \u001b[90m// protected and private access depends on relationship and permissions\u001b[39m\n     \u001b[90m 632 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 633 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:630:45)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should clone context scope successfully\n\n    Expected [object Object] to be a successful Result\n\n    \u001b[0m \u001b[90m 667 |\u001b[39m           nested\u001b[33m:\u001b[39m { value\u001b[33m:\u001b[39m \u001b[35m99\u001b[39m } \n     \u001b[90m 668 |\u001b[39m         })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 669 |\u001b[39m         expect(updateResult)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 670 |\u001b[39m         \n     \u001b[90m 671 |\u001b[39m         \u001b[36mconst\u001b[39m originalContext \u001b[33m=\u001b[39m contextService\u001b[33m.\u001b[39mgetNodeContext(parentNodeId)\u001b[33m;\u001b[39m\n     \u001b[90m 672 |\u001b[39m         expect(originalContext)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeValidResult (tests/unit/domain/services/node-context-access-service.test.ts:669:30)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ cloneContextScope ‚Ä∫ should handle cloning with transformation rules\n\n    TypeError: transformationRules is not iterable\n\n    \u001b[0m \u001b[90m 837 |\u001b[39m     \u001b[90m// Apply transformation rules if provided\u001b[39m\n     \u001b[90m 838 |\u001b[39m     \u001b[36mif\u001b[39m (transformationRules) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 839 |\u001b[39m       \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m rule \u001b[36mof\u001b[39m transformationRules) {\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 840 |\u001b[39m         \u001b[36mif\u001b[39m (rule\u001b[33m.\u001b[39minheritanceType \u001b[33m===\u001b[39m \u001b[32m'override'\u001b[39m \u001b[33m&&\u001b[39m rule\u001b[33m.\u001b[39mdefaultValue \u001b[33m!==\u001b[39m undefined) {\n     \u001b[90m 841 |\u001b[39m           clonedData[rule\u001b[33m.\u001b[39mpropertyName] \u001b[33m=\u001b[39m rule\u001b[33m.\u001b[39mdefaultValue\u001b[33m;\u001b[39m\n     \u001b[90m 842 |\u001b[39m         }\u001b[0m\n\n      at NodeContextAccessService.transformationRules [as cloneContextScope] (lib/domain/services/node-context-access-service.ts:839:26)\n      at Object.cloneContextScope (tests/unit/domain/services/node-context-access-service.test.ts:690:44)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merge conflicts with precedence rules\n\n    TypeError: precedenceRules.map is not a function\n\n    \u001b[0m \u001b[90m 872 |\u001b[39m     \n     \u001b[90m 873 |\u001b[39m     \u001b[36mif\u001b[39m (precedenceRules) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 874 |\u001b[39m       \u001b[36mconst\u001b[39m priorityMap \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mMap\u001b[39m(precedenceRules\u001b[33m.\u001b[39mmap(rule \u001b[33m=>\u001b[39m [rule\u001b[33m.\u001b[39mcontextId\u001b[33m,\u001b[39m rule\u001b[33m.\u001b[39mpriority]))\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 875 |\u001b[39m       \u001b[36mconst\u001b[39m sortedContexts \u001b[33m=\u001b[39m sourceContexts\u001b[33m.\u001b[39msort((a\u001b[33m,\u001b[39m b) \u001b[33m=>\u001b[39m {\n     \u001b[90m 876 |\u001b[39m         \u001b[36mconst\u001b[39m priorityA \u001b[33m=\u001b[39m priorityMap\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(a\u001b[33m.\u001b[39mcontextId) \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 877 |\u001b[39m         \u001b[36mconst\u001b[39m priorityB \u001b[33m=\u001b[39m priorityMap\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(b\u001b[33m.\u001b[39mcontextId) \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      at NodeContextAccessService.map [as mergeContextScopes] (lib/domain/services/node-context-access-service.ts:874:51)\n      at Object.mergeContextScopes (tests/unit/domain/services/node-context-access-service.test.ts:784:44)\n\n  ‚óè NodeContextAccessService ‚Ä∫ context scope management ‚Ä∫ mergeContextScopes ‚Ä∫ should handle merging with non-existent contexts\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"One or more source contexts not found\"\n    Received string:    \"No valid source contexts found\"\n\n    \u001b[0m \u001b[90m 828 |\u001b[39m         \u001b[90m// Assert\u001b[39m\n     \u001b[90m 829 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeFailureResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 830 |\u001b[39m         expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'One or more source contexts not found'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 831 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 832 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 833 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toContain (tests/unit/domain/services/node-context-access-service.test.ts:830:30)\n\n  ‚óè NodeContextAccessService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle circular reference prevention\n\n    Expected [object Object] to be a failed Result\n\n    \u001b[0m \u001b[90m 881 |\u001b[39m\n     \u001b[90m 882 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 883 |\u001b[39m       expect(circularResult)\u001b[33m.\u001b[39mtoBeFailureResult()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 884 |\u001b[39m       expect(circularResult\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Circular reference detected'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 885 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 886 |\u001b[39m\u001b[0m\n\n      at Object.toBeFailureResult (tests/unit/domain/services/node-context-access-service.test.ts:883:30)\n\n  ‚óè NodeContextAccessService ‚Ä∫ error handling and edge cases ‚Ä∫ should maintain context isolation between different scopes\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: undefined\n\n    \u001b[0m \u001b[90m 971 |\u001b[39m       \u001b[90m// Assert - Isolated scope should restrict access\u001b[39m\n     \u001b[90m 972 |\u001b[39m       expect(crossAccessValidation)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 973 |\u001b[39m       expect(crossAccessValidation\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mgranted)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 974 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 975 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 976 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/node-context-access-service.test.ts:973:51)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-context-access-service.test.ts","startTime":1756394051975,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Complex Dependency Graph Management Scenarios","Enterprise-Scale Graph Operations"],"duration":25,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Complex Dependency Graph Management Scenarios Enterprise-Scale Graph Operations should manage large-scale dependency graphs with 100+ nodes efficiently","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053549,"status":"passed","title":"should manage large-scale dependency graphs with 100+ nodes efficiently"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Complex Dependency Graph Management Scenarios","Enterprise-Scale Graph Operations"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Complex Dependency Graph Management Scenarios Enterprise-Scale Graph Operations should handle complex multi-path convergence patterns","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394053575,"status":"passed","title":"should handle complex multi-path convergence patterns"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Complex Dependency Graph Management Scenarios","Enterprise-Scale Graph Operations"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Complex Dependency Graph Management Scenarios Enterprise-Scale Graph Operations should manage branching and re-convergence in parallel execution paths","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053586,"status":"passed","title":"should manage branching and re-convergence in parallel execution paths"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Complex Dependency Graph Management Scenarios","Dynamic Graph Modification Scenarios"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Complex Dependency Graph Management Scenarios Dynamic Graph Modification Scenarios should handle real-time dependency updates without graph corruption","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394053591,"status":"passed","title":"should handle real-time dependency updates without graph corruption"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Complex Dependency Graph Management Scenarios","Dynamic Graph Modification Scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Complex Dependency Graph Management Scenarios Dynamic Graph Modification Scenarios should prevent dangerous dependency modifications that would create cycles","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053594,"status":"passed","title":"should prevent dangerous dependency modifications that would create cycles"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Advanced Circular Dependency Detection Algorithms","Complex Cycle Detection Scenarios"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Advanced Circular Dependency Detection Algorithms Complex Cycle Detection Scenarios should detect nested cycles within larger acyclic graph","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053597,"status":"passed","title":"should detect nested cycles within larger acyclic graph"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Advanced Circular Dependency Detection Algorithms","Complex Cycle Detection Scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Advanced Circular Dependency Detection Algorithms Complex Cycle Detection Scenarios should detect transitive cycles through complex dependency chains","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394053605,"status":"passed","title":"should detect transitive cycles through complex dependency chains"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Advanced Circular Dependency Detection Algorithms","Complex Cycle Detection Scenarios"],"duration":23,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Advanced Circular Dependency Detection Algorithms Complex Cycle Detection Scenarios should efficiently detect cycles in very large graphs (performance test)","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053607,"status":"passed","title":"should efficiently detect cycles in very large graphs (performance test)"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Advanced Circular Dependency Detection Algorithms","Cycle Impact Analysis"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Advanced Circular Dependency Detection Algorithms Cycle Impact Analysis should analyze impact scope of circular dependencies on execution paths","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394053630,"status":"passed","title":"should analyze impact scope of circular dependencies on execution paths"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Execution Order Optimization and Calculation","Parallel Execution Path Optimization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Execution Order Optimization and Calculation Parallel Execution Path Optimization should optimize execution paths for maximum parallelization opportunities","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053633,"status":"passed","title":"should optimize execution paths for maximum parallelization opportunities"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Execution Order Optimization and Calculation","Parallel Execution Path Optimization"],"duration":11,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 6\nReceived length: 7\nReceived array:  [\"8364a797-bda8-4bc2-88ec-c2c55410d335\", \"3a5db9a2-9218-4d8b-8857-ba5bd7cc75d7\", \"a3fe8f04-4e67-4f0c-8812-664ff8f265ce\", \"a6909d14-f0bd-4fa0-8862-df2b4974e0cb\", \"66edd6a5-8225-4549-881b-37bc14e9136b\", \"8fd6c4f1-0711-4b9f-8877-38209296e7e0\", \"f4287d78-4852-446d-8843-8516eb3c7b11\"]","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 6\nReceived length: 7\nReceived array:  [\"8364a797-bda8-4bc2-88ec-c2c55410d335\", \"3a5db9a2-9218-4d8b-8857-ba5bd7cc75d7\", \"a3fe8f04-4e67-4f0c-8812-664ff8f265ce\", \"a6909d14-f0bd-4fa0-8862-df2b4974e0cb\", \"66edd6a5-8225-4549-881b-37bc14e9136b\", \"8fd6c4f1-0711-4b9f-8877-38209296e7e0\", \"f4287d78-4852-446d-8843-8516eb3c7b11\"]\n    at Object.toHaveLength (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-dependency-service-uc010.test.ts:722:30)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"UC-010: Node Dependency Management - System Use Case Execution Order Optimization and Calculation Parallel Execution Path Optimization should identify critical path for execution time estimation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053634,"status":"failed","title":"should identify critical path for execution time estimation"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Execution Order Optimization and Calculation","Parallel Execution Path Optimization"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"actual":"fc1e788d-56b6-4197-8855-5736e652d52a","expected":"high-priority","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high-priority\"\nReceived: \"fc1e788d-56b6-4197-8855-5736e652d52a\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high-priority\"\nReceived: \"fc1e788d-56b6-4197-8855-5736e652d52a\"\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-dependency-service-uc010.test.ts:774:41)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"UC-010: Node Dependency Management - System Use Case Execution Order Optimization and Calculation Parallel Execution Path Optimization should handle execution priority metadata for path optimization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053678,"status":"failed","title":"should handle execution priority metadata for path optimization"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Execution Order Optimization and Calculation","Large-Scale Optimization Performance"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-dependency-service-uc010.test.ts:841:50)\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-dependency-service-uc010.test.ts:835:22)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-dependency-service-uc010.test.ts:834:26)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"UC-010: Node Dependency Management - System Use Case Execution Order Optimization and Calculation Large-Scale Optimization Performance should efficiently calculate execution order for enterprise-scale graphs","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053682,"status":"failed","title":"should efficiently calculate execution order for enterprise-scale graphs"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Clean Architecture Compliance with Complex Algorithms","Domain Service Boundary Validation"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"Expected [object Object] to be a successful Result","pass":false}}],"failureMessages":["Error: Expected [object Object] to be a successful Result\n    at Object.toBeValidResult (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-dependency-service-uc010.test.ts:896:33)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"UC-010: Node Dependency Management - System Use Case Clean Architecture Compliance with Complex Algorithms Domain Service Boundary Validation should maintain Clean Architecture principles during complex graph operations","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053688,"status":"failed","title":"should maintain Clean Architecture principles during complex graph operations"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Clean Architecture Compliance with Complex Algorithms","Domain Service Boundary Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Clean Architecture Compliance with Complex Algorithms Domain Service Boundary Validation should not depend on external infrastructure during algorithm execution","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053690,"status":"passed","title":"should not depend on external infrastructure during algorithm execution"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Clean Architecture Compliance with Complex Algorithms","Domain Service Boundary Validation"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"Expected [object Object] to be a failed Result","pass":false}}],"failureMessages":["Error: Expected [object Object] to be a failed Result\n    at Object.toBeFailureResult (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-dependency-service-uc010.test.ts:961:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"UC-010: Node Dependency Management - System Use Case Clean Architecture Compliance with Complex Algorithms Domain Service Boundary Validation should handle domain validation rules consistently across all operations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053691,"status":"failed","title":"should handle domain validation rules consistently across all operations"}],"endTime":1756394053777,"message":"  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Execution Order Optimization and Calculation ‚Ä∫ Parallel Execution Path Optimization ‚Ä∫ should identify critical path for execution time estimation\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 6\n    Received length: 7\n    Received array:  [\"8364a797-bda8-4bc2-88ec-c2c55410d335\", \"3a5db9a2-9218-4d8b-8857-ba5bd7cc75d7\", \"a3fe8f04-4e67-4f0c-8812-664ff8f265ce\", \"a6909d14-f0bd-4fa0-8862-df2b4974e0cb\", \"66edd6a5-8225-4549-881b-37bc14e9136b\", \"8fd6c4f1-0711-4b9f-8877-38209296e7e0\", \"f4287d78-4852-446d-8843-8516eb3c7b11\"]\n\n    \u001b[0m \u001b[90m 720 |\u001b[39m         \n     \u001b[90m 721 |\u001b[39m         \u001b[90m// Critical path should be the longest path (through slow nodes)\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 722 |\u001b[39m         expect(criticalPath)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m6\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// start -> slowA -> slowB -> slowC -> slowD -> slowEnd\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 723 |\u001b[39m         expect(criticalPath)\u001b[33m.\u001b[39mtoContain(start\u001b[33m.\u001b[39mnodeId\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n     \u001b[90m 724 |\u001b[39m         expect(criticalPath)\u001b[33m.\u001b[39mtoContain(slowA\u001b[33m.\u001b[39mnodeId\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n     \u001b[90m 725 |\u001b[39m         expect(criticalPath)\u001b[33m.\u001b[39mtoContain(slowB\u001b[33m.\u001b[39mnodeId\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveLength (tests/unit/domain/services/node-dependency-service-uc010.test.ts:722:30)\n\n  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Execution Order Optimization and Calculation ‚Ä∫ Parallel Execution Path Optimization ‚Ä∫ should handle execution priority metadata for path optimization\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"high-priority\"\n    Received: \"fc1e788d-56b6-4197-8855-5736e652d52a\"\n\n    \u001b[0m \u001b[90m 772 |\u001b[39m         \n     \u001b[90m 773 |\u001b[39m         \u001b[90m// Verify priority ordering within the same level\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 774 |\u001b[39m         expect(parallelPaths[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mnodeId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'high-priority'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Highest priority first\u001b[39m\n     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 775 |\u001b[39m         expect(parallelPaths[\u001b[35m1\u001b[39m]\u001b[33m.\u001b[39mnodeId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'medium-priority'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 776 |\u001b[39m         expect(parallelPaths[\u001b[35m2\u001b[39m]\u001b[33m.\u001b[39mnodeId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'low-priority'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Lowest priority last\u001b[39m\n     \u001b[90m 777 |\u001b[39m         \u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/node-dependency-service-uc010.test.ts:774:41)\n\n  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Execution Order Optimization and Calculation ‚Ä∫ Large-Scale Optimization Performance ‚Ä∫ should efficiently calculate execution order for enterprise-scale graphs\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 839 |\u001b[39m             \u001b[90m// Nodes at levels > 0 should be able to parallel within their level\u001b[39m\n     \u001b[90m 840 |\u001b[39m             \u001b[36mif\u001b[39m (levelIndex \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 841 |\u001b[39m               expect(path\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mcanExecuteInParallel)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 842 |\u001b[39m             }\n     \u001b[90m 843 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 844 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\n      at toBe (tests/unit/domain/services/node-dependency-service-uc010.test.ts:841:50)\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/node-dependency-service-uc010.test.ts:835:22)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/domain/services/node-dependency-service-uc010.test.ts:834:26)\n\n  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Clean Architecture Compliance with Complex Algorithms ‚Ä∫ Domain Service Boundary Validation ‚Ä∫ should maintain Clean Architecture principles during complex graph operations\n\n    Expected [object Object] to be a successful Result\n\n    \u001b[0m \u001b[90m 894 |\u001b[39m         expect(pathsResult)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 895 |\u001b[39m         expect(criticalResult)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 896 |\u001b[39m         expect(reachableResult)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 897 |\u001b[39m         \n     \u001b[90m 898 |\u001b[39m         \u001b[90m// Verify service returns domain objects and value objects only\u001b[39m\n     \u001b[90m 899 |\u001b[39m         expect(graphResult\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mnodes)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mMap\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeValidResult (tests/unit/domain/services/node-dependency-service-uc010.test.ts:896:33)\n\n  ‚óè UC-010: Node Dependency Management - System Use Case ‚Ä∫ Clean Architecture Compliance with Complex Algorithms ‚Ä∫ Domain Service Boundary Validation ‚Ä∫ should handle domain validation rules consistently across all operations\n\n    Expected [object Object] to be a failed Result\n\n    \u001b[0m \u001b[90m 959 |\u001b[39m         invalidNode\u001b[33m.\u001b[39maddDependency(\u001b[32m'non-existent-node'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 960 |\u001b[39m         \u001b[36mconst\u001b[39m invalidResult \u001b[33m=\u001b[39m dependencyService\u001b[33m.\u001b[39mbuildDependencyGraph([invalidNode])\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 961 |\u001b[39m         expect(invalidResult)\u001b[33m.\u001b[39mtoBeFailureResult()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 962 |\u001b[39m         expect(invalidResult\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'references non-existent dependency'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 963 |\u001b[39m\n     \u001b[90m 964 |\u001b[39m         \u001b[90m// Act & Assert - Service should handle all validation consistently\u001b[39m\u001b[0m\n\n      at Object.toBeFailureResult (tests/unit/domain/services/node-dependency-service-uc010.test.ts:961:31)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-dependency-service-uc010.test.ts","startTime":1756394051946,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","CompleteWorkflowCreation_E2E"],"duration":15,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'toString')\n    at Object.toString (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:524:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 CompleteWorkflowCreation_E2E should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053635,"status":"failed","title":"should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","CompleteWorkflowCreation_E2E"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"not found\"\nReceived string:    \"Node name is required\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"not found\"\nReceived string:    \"Node name is required\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:621:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 CompleteWorkflowCreation_E2E should_FailGracefully_WhenDependencyViolated","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053691,"status":"failed","title":"should_FailGracefully_WhenDependencyViolated"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","CompleteWorkflowCreation_E2E"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"must be published\"\nReceived string:    \"Valid environment is required (development, staging, production)\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"must be published\"\nReceived string:    \"Valid environment is required (development, staging, production)\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:650:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 CompleteWorkflowCreation_E2E should_EnforcePublicationPrerequisites_BeforeExecution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053694,"status":"failed","title":"should_EnforcePublicationPrerequisites_BeforeExecution"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","WorkflowVersioning_E2E"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:679:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 WorkflowVersioning_E2E should_CreateNewVersion_AfterSuccessfulExecution","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053696,"status":"failed","title":"should_CreateNewVersion_AfterSuccessfulExecution"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013","FractalExecution_E2E"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:743:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 FractalExecution_E2E should_CoordinateComplexExecution_WithMultipleOrchestrationServices","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053699,"status":"failed","title":"should_CoordinateComplexExecution_WithMultipleOrchestrationServices"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013","FractalExecution_E2E"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:890:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 FractalExecution_E2E should_HandleCascadingFailures_InComplexPipeline","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053701,"status":"failed","title":"should_HandleCascadingFailures_InComplexPipeline"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019","AIAgentLifecycle_E2E"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:966:45)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 AIAgentLifecycle_E2E should_ExecuteCompleteAIAgentWorkflow_WithRegistrationDiscoveryExecution","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053702,"status":"failed","title":"should_ExecuteCompleteAIAgentWorkflow_WithRegistrationDiscoveryExecution"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019","AIAgentLifecycle_E2E"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:1146:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 AIAgentLifecycle_E2E should_HandleAgentFailures_WithGracefulDegradation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053703,"status":"failed","title":"should_HandleAgentFailures_WithGracefulDegradation"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019","CrossFeatureLinking_E2E"],"duration":2,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:1209:55)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 CrossFeatureLinking_E2E should_IntegrateAcrossFeaturesWithLinkStrengthCalculation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053706,"status":"failed","title":"should_IntegrateAcrossFeaturesWithLinkStrengthCalculation"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019","CrossFeatureLinking_E2E"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:1353:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 CrossFeatureLinking_E2E should_PropagateErrorsAcrossCrossFeatureLinks","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053708,"status":"failed","title":"should_PropagateErrorsAcrossCrossFeatureLinks"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Error Recovery Across Dependency Boundaries","SystemWideRecovery_E2E"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:1490:51)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Error Recovery Across Dependency Boundaries SystemWideRecovery_E2E should_RecoverFromComplexFailureScenarios_AcrossMultipleLayers","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053710,"status":"failed","title":"should_RecoverFromComplexFailureScenarios_AcrossMultipleLayers"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","All Application Services Integration","CompleteSystemIntegration_E2E"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:1654:61)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite All Application Services Integration CompleteSystemIntegration_E2E should_CoordinateAllApplicationServices_InComplexWorkflow","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053711,"status":"failed","title":"should_CoordinateAllApplicationServices_InComplexWorkflow"},{"ancestorTitles":["Complete User Workflows - E2E Test Suite","Real User Scenarios with Actual Data Flows","ProductionLikeWorkflows_E2E"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts:2077:52)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflows - E2E Test Suite Real User Scenarios with Actual Data Flows ProductionLikeWorkflows_E2E should_ExecuteRealisticBusinessWorkflow_WithActualDataTransformations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053712,"status":"failed","title":"should_ExecuteRealisticBusinessWorkflow_WithActualDataTransformations"}],"endTime":1756394053843,"message":"  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed\n\n    TypeError: Cannot read properties of undefined (reading 'toString')\n\n    \u001b[0m \u001b[90m 522 |\u001b[39m         \u001b[36mconst\u001b[39m createdModel \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m mockRepository\u001b[33m.\u001b[39mfindById(modelId)\u001b[33m;\u001b[39m\n     \u001b[90m 523 |\u001b[39m         expect(createdModel\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 524 |\u001b[39m         expect(createdModel\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mname\u001b[33m.\u001b[39mtoString())\u001b[33m.\u001b[39mtoBe(workflowName)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 525 |\u001b[39m\n     \u001b[90m 526 |\u001b[39m         \u001b[90m// UC-002: Add Container Node (must create model before adding nodes)\u001b[39m\n     \u001b[90m 527 |\u001b[39m         \u001b[36mconst\u001b[39m addContainerResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m addContainerUseCase\u001b[33m.\u001b[39mexecute({\u001b[0m\n\n      at Object.toString (tests/e2e/comprehensive-user-workflows.e2e.test.ts:524:40)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"not found\"\n    Received string:    \"Node name is required\"\n\n    \u001b[0m \u001b[90m 619 |\u001b[39m         \u001b[90m// Assert: Dependency violation should be caught\u001b[39m\n     \u001b[90m 620 |\u001b[39m         expect(addContainerResult\u001b[33m.\u001b[39misFailure)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 621 |\u001b[39m         expect(addContainerResult\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'not found'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 622 |\u001b[39m\n     \u001b[90m 623 |\u001b[39m         \u001b[90m// Verify no side effects occurred\u001b[39m\n     \u001b[90m 624 |\u001b[39m         \u001b[36mconst\u001b[39m auditLogs \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m mockAuditRepository\u001b[33m.\u001b[39mfindByModelId(nonExistentModelId)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:621:42)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"must be published\"\n    Received string:    \"Valid environment is required (development, staging, production)\"\n\n    \u001b[0m \u001b[90m 648 |\u001b[39m         \u001b[90m// Assert: Execution should fail due to publication prerequisite\u001b[39m\n     \u001b[90m 649 |\u001b[39m         expect(executeResult\u001b[33m.\u001b[39misFailure)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 650 |\u001b[39m         expect(executeResult\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'must be published'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 651 |\u001b[39m\n     \u001b[90m 652 |\u001b[39m         \u001b[90m// Verify model status is still DRAFT\u001b[39m\n     \u001b[90m 653 |\u001b[39m         \u001b[36mconst\u001b[39m model \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m mockRepository\u001b[33m.\u001b[39mfindById(modelId)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toContain (tests/e2e/comprehensive-user-workflows.e2e.test.ts:650:37)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ WorkflowVersioning_E2E ‚Ä∫ should_CreateNewVersion_AfterSuccessfulExecution\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:679:41)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_CoordinateComplexExecution_WithMultipleOrchestrationServices\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:743:41)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Complex Execution Pipeline: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ FractalExecution_E2E ‚Ä∫ should_HandleCascadingFailures_InComplexPipeline\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:890:41)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_ExecuteCompleteAIAgentWorkflow_WithRegistrationDiscoveryExecution\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:966:45)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ AI Agent Workflow: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AIAgentLifecycle_E2E ‚Ä∫ should_HandleAgentFailures_WithGracefulDegradation\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 1144 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 1145 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1146 |\u001b[39m         expect(errorHandlingResult\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m      |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 1147 |\u001b[39m\n     \u001b[90m 1148 |\u001b[39m         \u001b[90m// Act: Execute with agent failure simulation\u001b[39m\n     \u001b[90m 1149 |\u001b[39m         \u001b[36mconst\u001b[39m containerResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m addContainerUseCase\u001b[33m.\u001b[39mexecute({\u001b[0m\n\n      at Object.toBe (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1146:47)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_IntegrateAcrossFeaturesWithLinkStrengthCalculation\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1209:55)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Cross-Feature Integration: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CrossFeatureLinking_E2E ‚Ä∫ should_PropagateErrorsAcrossCrossFeatureLinks\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1353:49)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Error Recovery Across Dependency Boundaries ‚Ä∫ SystemWideRecovery_E2E ‚Ä∫ should_RecoverFromComplexFailureScenarios_AcrossMultipleLayers\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1490:51)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ All Application Services Integration ‚Ä∫ CompleteSystemIntegration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InComplexWorkflow\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:1654:61)\n\n  ‚óè Complete User Workflows - E2E Test Suite ‚Ä∫ Real User Scenarios with Actual Data Flows ‚Ä∫ ProductionLikeWorkflows_E2E ‚Ä∫ should_ExecuteRealisticBusinessWorkflow_WithActualDataTransformations\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/comprehensive-user-workflows.e2e.test.ts:2077:52)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\comprehensive-user-workflows.e2e.test.ts","startTime":1756394051959,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Complete User Workflow Scenarios - E2E Test Suite","PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","CompleteModelLifecycleWorkflow_E2E"],"duration":10,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'toString')\n    at Object.toString (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\complete-user-workflow-scenarios.e2e.test.ts:689:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflow Scenarios - E2E Test Suite PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 CompleteModelLifecycleWorkflow_E2E should_ExecuteCompleteModelLifecycle_FromCreationToArchival","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053703,"status":"failed","title":"should_ExecuteCompleteModelLifecycle_FromCreationToArchival"},{"ancestorTitles":["Complete User Workflow Scenarios - E2E Test Suite","PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","DependencyViolationHandling_E2E"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"not found\"\nReceived string:    \"Valid position coordinates are required\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"not found\"\nReceived string:    \"Valid position coordinates are required\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\complete-user-workflow-scenarios.e2e.test.ts:883:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflow Scenarios - E2E Test Suite PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 DependencyViolationHandling_E2E should_PreventDependencyViolations_AndMaintainSystemIntegrity","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053758,"status":"failed","title":"should_PreventDependencyViolations_AndMaintainSystemIntegrity"},{"ancestorTitles":["Complete User Workflow Scenarios - E2E Test Suite","COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013","ComplexOrchestrationWorkflow_E2E"],"duration":2,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\complete-user-workflow-scenarios.e2e.test.ts:954:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflow Scenarios - E2E Test Suite COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ComplexOrchestrationWorkflow_E2E should_CoordinateAllOrchestrationServices_InComplexExecution","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053762,"status":"failed","title":"should_CoordinateAllOrchestrationServices_InComplexExecution"},{"ancestorTitles":["Complete User Workflow Scenarios - E2E Test Suite","COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013","ErrorRecoveryInComplexPipeline_E2E"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\complete-user-workflow-scenarios.e2e.test.ts:1168:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflow Scenarios - E2E Test Suite COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ErrorRecoveryInComplexPipeline_E2E should_RecoverFromFailures_AcrossComplexOrchestrationLayers","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053766,"status":"failed","title":"should_RecoverFromFailures_AcrossComplexOrchestrationLayers"},{"ancestorTitles":["Complete User Workflow Scenarios - E2E Test Suite","AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019","CompleteAgentWorkflow_E2E"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\complete-user-workflow-scenarios.e2e.test.ts:1265:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflow Scenarios - E2E Test Suite AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 CompleteAgentWorkflow_E2E should_ExecuteCompleteAgentWorkflow_FromRegistrationToExecution","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053767,"status":"failed","title":"should_ExecuteCompleteAgentWorkflow_FromRegistrationToExecution"},{"ancestorTitles":["Complete User Workflow Scenarios - E2E Test Suite","AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019","AgentIntegrationWithModels_E2E"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\complete-user-workflow-scenarios.e2e.test.ts:1421:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflow Scenarios - E2E Test Suite AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 AgentIntegrationWithModels_E2E should_IntegrateAgents_WithCompleteModelWorkflow","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053769,"status":"failed","title":"should_IntegrateAgents_WithCompleteModelWorkflow"},{"ancestorTitles":["Complete User Workflow Scenarios - E2E Test Suite","CROSS-FEATURE INTEGRATION: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019","CompleteCrossFeatureWorkflow_E2E"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\complete-user-workflow-scenarios.e2e.test.ts:1495:55)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflow Scenarios - E2E Test Suite CROSS-FEATURE INTEGRATION: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 CompleteCrossFeatureWorkflow_E2E should_ExecuteCompleteCrossFeatureIntegration_WithLinkingAndExecution","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053770,"status":"failed","title":"should_ExecuteCompleteCrossFeatureIntegration_WithLinkingAndExecution"},{"ancestorTitles":["Complete User Workflow Scenarios - E2E Test Suite","APPLICATION SERVICES COORDINATION","CompleteServiceOrchestration_E2E"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\complete-user-workflow-scenarios.e2e.test.ts:1744:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Complete User Workflow Scenarios - E2E Test Suite APPLICATION SERVICES COORDINATION CompleteServiceOrchestration_E2E should_CoordinateAllApplicationServices_InCompleteWorkflow","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053771,"status":"failed","title":"should_CoordinateAllApplicationServices_InCompleteWorkflow"}],"endTime":1756394053871,"message":"  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteModelLifecycleWorkflow_E2E ‚Ä∫ should_ExecuteCompleteModelLifecycle_FromCreationToArchival\n\n    TypeError: Cannot read properties of undefined (reading 'toString')\n\n    \u001b[0m \u001b[90m 687 |\u001b[39m         \u001b[36mconst\u001b[39m createdModel \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m mockModelRepository\u001b[33m.\u001b[39mfindById(modelId)\u001b[33m;\u001b[39m\n     \u001b[90m 688 |\u001b[39m         expect(createdModel\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 689 |\u001b[39m         expect(createdModel\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mname\u001b[33m.\u001b[39mtoString())\u001b[33m.\u001b[39mtoBe(\u001b[32m'Complete Lifecycle Model'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 690 |\u001b[39m\n     \u001b[90m 691 |\u001b[39m         \u001b[90m// PHASE 2: UC-002 - Add Container Node (IO Input)\u001b[39m\n     \u001b[90m 692 |\u001b[39m         \u001b[36mconst\u001b[39m inputNodeResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m addContainerUseCase\u001b[33m.\u001b[39mexecute({\u001b[0m\n\n      at Object.toString (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:689:40)\n\n  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ PRIMARY DEPENDENCY CHAIN: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ DependencyViolationHandling_E2E ‚Ä∫ should_PreventDependencyViolations_AndMaintainSystemIntegrity\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"not found\"\n    Received string:    \"Valid position coordinates are required\"\n\n    \u001b[0m \u001b[90m 881 |\u001b[39m\n     \u001b[90m 882 |\u001b[39m         expect(addNodeResult\u001b[33m.\u001b[39misFailure)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 883 |\u001b[39m         expect(addNodeResult\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'not found'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 884 |\u001b[39m\n     \u001b[90m 885 |\u001b[39m         \u001b[90m// Test UC-003 dependency violation (add action to non-existent container)\u001b[39m\n     \u001b[90m 886 |\u001b[39m         \u001b[36mconst\u001b[39m createResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createModelUseCase\u001b[33m.\u001b[39mexecute({\u001b[0m\n\n      at Object.toContain (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:883:37)\n\n  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ComplexOrchestrationWorkflow_E2E ‚Ä∫ should_CoordinateAllOrchestrationServices_InComplexExecution\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:954:49)\n\n  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ COMPLEX EXECUTION PIPELINE: UC-005 coordinating UC-010,011,012,013 ‚Ä∫ ErrorRecoveryInComplexPipeline_E2E ‚Ä∫ should_RecoverFromFailures_AcrossComplexOrchestrationLayers\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1168:37)\n\n  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ CompleteAgentWorkflow_E2E ‚Ä∫ should_ExecuteCompleteAgentWorkflow_FromRegistrationToExecution\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 1263 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 1264 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1265 |\u001b[39m         expect(agent1Registration\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m      |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 1266 |\u001b[39m         expect(agent1Registration\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39magentId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'test-agent-processing'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 1267 |\u001b[39m\n     \u001b[90m 1268 |\u001b[39m         \u001b[36mconst\u001b[39m agent2Registration \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m registerAgentUseCase\u001b[33m.\u001b[39mexecute({\u001b[0m\n\n      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1265:46)\n\n  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ AI AGENT WORKFLOW: UC-017‚ÜíUC-018‚ÜíUC-019 ‚Ä∫ AgentIntegrationWithModels_E2E ‚Ä∫ should_IntegrateAgents_WithCompleteModelWorkflow\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1421:37)\n\n  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ CROSS-FEATURE INTEGRATION: UC-014‚ÜíUC-015, UC-003‚ÜíUC-014, UC-005‚ÜíUC-019 ‚Ä∫ CompleteCrossFeatureWorkflow_E2E ‚Ä∫ should_ExecuteCompleteCrossFeatureIntegration_WithLinkingAndExecution\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1495:55)\n\n  ‚óè Complete User Workflow Scenarios - E2E Test Suite ‚Ä∫ APPLICATION SERVICES COORDINATION ‚Ä∫ CompleteServiceOrchestration_E2E ‚Ä∫ should_CoordinateAllApplicationServices_InCompleteWorkflow\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 1742 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 1743 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1744 |\u001b[39m         expect(modelManagementResult\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m      |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 1745 |\u001b[39m         \u001b[36mconst\u001b[39m orchestrationModelId \u001b[33m=\u001b[39m modelManagementResult\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mmodelId\u001b[33m;\u001b[39m\n     \u001b[90m 1746 |\u001b[39m\n     \u001b[90m 1747 |\u001b[39m         \u001b[90m// PHASE 2: AI Agent Management Service coordination\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/e2e/complete-user-workflow-scenarios.e2e.test.ts:1744:49)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\complete-user-workflow-scenarios.e2e.test.ts","startTime":1756394051685,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Primary User Workflow Chain - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","CompleteWorkflowCreation_E2E"],"duration":3,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'toString')\n    at Object.toString (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\primary-workflow-chain.e2e.test.ts:338:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Primary User Workflow Chain - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 CompleteWorkflowCreation_E2E should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053829,"status":"failed","title":"should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed"},{"ancestorTitles":["Primary User Workflow Chain - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","CompleteWorkflowCreation_E2E"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"not found\"\nReceived string:    \"Invalid node type specified\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"not found\"\nReceived string:    \"Invalid node type specified\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\primary-workflow-chain.e2e.test.ts:430:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Primary User Workflow Chain - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 CompleteWorkflowCreation_E2E should_FailGracefully_WhenDependencyViolated","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053850,"status":"failed","title":"should_FailGracefully_WhenDependencyViolated"},{"ancestorTitles":["Primary User Workflow Chain - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","CompleteWorkflowCreation_E2E"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"must be published\"\nReceived string:    \"Valid environment is required (development, staging, production)\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"must be published\"\nReceived string:    \"Valid environment is required (development, staging, production)\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\primary-workflow-chain.e2e.test.ts:459:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Primary User Workflow Chain - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 CompleteWorkflowCreation_E2E should_EnforcePublicationPrerequisites_BeforeExecution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053851,"status":"failed","title":"should_EnforcePublicationPrerequisites_BeforeExecution"},{"ancestorTitles":["Primary User Workflow Chain - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","CompleteWorkflowCreation_E2E"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\primary-workflow-chain.e2e.test.ts:487:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Primary User Workflow Chain - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 CompleteWorkflowCreation_E2E should_ValidateWorkflowStructure_BeforePublishing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053853,"status":"failed","title":"should_ValidateWorkflowStructure_BeforePublishing"},{"ancestorTitles":["Primary User Workflow Chain - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","CompleteWorkflowCreation_E2E"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\primary-workflow-chain.e2e.test.ts:549:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Primary User Workflow Chain - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 CompleteWorkflowCreation_E2E should_HandleComplexWorkflow_WithMultipleNodesAndActions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053854,"status":"failed","title":"should_HandleComplexWorkflow_WithMultipleNodesAndActions"},{"ancestorTitles":["Primary User Workflow Chain - E2E Test Suite","Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005","ErrorRecovery_E2E"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\primary-workflow-chain.e2e.test.ts:640:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Primary User Workflow Chain - E2E Test Suite Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ErrorRecovery_E2E should_RecoverFromTransientFailures_DuringExecution","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053857,"status":"failed","title":"should_RecoverFromTransientFailures_DuringExecution"},{"ancestorTitles":["Primary User Workflow Chain - E2E Test Suite","Architectural Compliance Validation","CleanArchitectureCompliance_E2E"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at Object.value (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\primary-workflow-chain.e2e.test.ts:702:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Primary User Workflow Chain - E2E Test Suite Architectural Compliance Validation CleanArchitectureCompliance_E2E should_MaintainLayerSeparation_ThroughoutWorkflow","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053857,"status":"failed","title":"should_MaintainLayerSeparation_ThroughoutWorkflow"}],"endTime":1756394053919,"message":"  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ExecuteFullPrimaryChain_WhenAllDependenciesSucceed\n\n    TypeError: Cannot read properties of undefined (reading 'toString')\n\n    \u001b[0m \u001b[90m 336 |\u001b[39m         \u001b[36mconst\u001b[39m createdModel \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m mockRepository\u001b[33m.\u001b[39mfindById(modelId)\u001b[33m;\u001b[39m\n     \u001b[90m 337 |\u001b[39m         expect(createdModel\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 338 |\u001b[39m         expect(createdModel\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mname\u001b[33m.\u001b[39mtoString())\u001b[33m.\u001b[39mtoBe(workflowName)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 339 |\u001b[39m\n     \u001b[90m 340 |\u001b[39m         \u001b[90m// UC-002: Add Container Node (must create model before adding nodes)\u001b[39m\n     \u001b[90m 341 |\u001b[39m         \u001b[36mconst\u001b[39m addContainerResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m addContainerUseCase\u001b[33m.\u001b[39mexecute({\u001b[0m\n\n      at Object.toString (tests/e2e/primary-workflow-chain.e2e.test.ts:338:40)\n\n  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_FailGracefully_WhenDependencyViolated\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"not found\"\n    Received string:    \"Invalid node type specified\"\n\n    \u001b[0m \u001b[90m 428 |\u001b[39m         \u001b[90m// Assert: Dependency violation should be caught\u001b[39m\n     \u001b[90m 429 |\u001b[39m         expect(addContainerResult\u001b[33m.\u001b[39misFailure)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 430 |\u001b[39m         expect(addContainerResult\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'not found'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 431 |\u001b[39m\n     \u001b[90m 432 |\u001b[39m         \u001b[90m// Verify no side effects occurred\u001b[39m\n     \u001b[90m 433 |\u001b[39m         \u001b[36mconst\u001b[39m auditLogs \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m mockAuditRepository\u001b[33m.\u001b[39mfindByModelId(nonExistentModelId)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:430:42)\n\n  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_EnforcePublicationPrerequisites_BeforeExecution\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"must be published\"\n    Received string:    \"Valid environment is required (development, staging, production)\"\n\n    \u001b[0m \u001b[90m 457 |\u001b[39m         \u001b[90m// Assert: Execution should fail due to publication prerequisite\u001b[39m\n     \u001b[90m 458 |\u001b[39m         expect(executeResult\u001b[33m.\u001b[39misFailure)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 459 |\u001b[39m         expect(executeResult\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'must be published'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 460 |\u001b[39m\n     \u001b[90m 461 |\u001b[39m         \u001b[90m// Verify model status is still DRAFT\u001b[39m\n     \u001b[90m 462 |\u001b[39m         \u001b[36mconst\u001b[39m model \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m mockRepository\u001b[33m.\u001b[39mfindById(modelId)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toContain (tests/e2e/primary-workflow-chain.e2e.test.ts:459:37)\n\n  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_ValidateWorkflowStructure_BeforePublishing\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 485 |\u001b[39m\n     \u001b[90m 486 |\u001b[39m         \u001b[90m// Assert: Validation should fail for empty workflow\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 487 |\u001b[39m         expect(validateResult\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// The operation succeeds\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 488 |\u001b[39m         expect(validateResult\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39misValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// But validation reports invalid\u001b[39m\n     \u001b[90m 489 |\u001b[39m\n     \u001b[90m 490 |\u001b[39m         \u001b[90m// Try to publish with validation enforcement\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/e2e/primary-workflow-chain.e2e.test.ts:487:42)\n\n  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ CompleteWorkflowCreation_E2E ‚Ä∫ should_HandleComplexWorkflow_WithMultipleNodesAndActions\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:549:47)\n\n  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Primary Dependency Chain: UC-001‚ÜíUC-002‚ÜíUC-003‚ÜíUC-004‚ÜíUC-005 ‚Ä∫ ErrorRecovery_E2E ‚Ä∫ should_RecoverFromTransientFailures_DuringExecution\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:640:37)\n\n  ‚óè Primary User Workflow Chain - E2E Test Suite ‚Ä∫ Architectural Compliance Validation ‚Ä∫ CleanArchitectureCompliance_E2E ‚Ä∫ should_MaintainLayerSeparation_ThroughoutWorkflow\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at Object.value (tests/e2e/primary-workflow-chain.e2e.test.ts:702:41)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\e2e\\primary-workflow-chain.e2e.test.ts","startTime":1756394053459,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModel - Archive Lifecycle","archive() - State Transition Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle archive() - State Transition Rules should archive a DRAFT model successfully","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394053890,"status":"passed","title":"should archive a DRAFT model successfully"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","archive() - State Transition Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle archive() - State Transition Rules should archive a PUBLISHED model successfully","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394053893,"status":"passed","title":"should archive a PUBLISHED model successfully"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","archive() - State Transition Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle archive() - State Transition Rules should fail to archive already ARCHIVED model","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394053895,"status":"passed","title":"should fail to archive already ARCHIVED model"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","archive() - Audit Trail Requirements"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle archive() - Audit Trail Requirements should update the updatedAt timestamp when archiving","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394053896,"status":"passed","title":"should update the updatedAt timestamp when archiving"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","archive() - Audit Trail Requirements"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle archive() - Audit Trail Requirements should preserve original creation metadata when archiving","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394053898,"status":"passed","title":"should preserve original creation metadata when archiving"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","archive() - Data Preservation Requirements"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle archive() - Data Preservation Requirements should preserve all node and action data when archiving","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394053900,"status":"passed","title":"should preserve all node and action data when archiving"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","archive() - Data Preservation Requirements"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle archive() - Data Preservation Requirements should preserve version history when archiving","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394053902,"status":"passed","title":"should preserve version history when archiving"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archived Model - Modification Prevention"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle Archived Model - Modification Prevention should prevent publishing archived model","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394053903,"status":"passed","title":"should prevent publishing archived model"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archived Model - Modification Prevention"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle Archived Model - Modification Prevention should prevent name updates on archived model","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394053909,"status":"passed","title":"should prevent name updates on archived model"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archived Model - Modification Prevention"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle Archived Model - Modification Prevention should prevent description updates on archived model","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394053911,"status":"passed","title":"should prevent description updates on archived model"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archived Model - Modification Prevention"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle Archived Model - Modification Prevention should prevent node additions to archived model","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394053912,"status":"passed","title":"should prevent node additions to archived model"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archived Model - Soft Delete Integration"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"actual":"draft","expected":"archived","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"archived\"\nReceived: \"draft\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"archived\"\nReceived: \"draft\"\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\function-model-archive.test.ts:264:28)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"FunctionModel - Archive Lifecycle Archived Model - Soft Delete Integration should set status to ARCHIVED when soft deleting","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394053914,"status":"failed","title":"should set status to ARCHIVED when soft deleting"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archived Model - Soft Delete Integration"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":"draft","expected":"archived","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"archived\"\nReceived: \"draft\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"archived\"\nReceived: \"draft\"\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\function-model-archive.test.ts:276:28)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"FunctionModel - Archive Lifecycle Archived Model - Soft Delete Integration should handle soft delete without deletedBy parameter","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053927,"status":"failed","title":"should handle soft delete without deletedBy parameter"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archived Model - Soft Delete Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle Archived Model - Soft Delete Integration should prevent double soft delete","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394053929,"status":"passed","title":"should prevent double soft delete"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archive - Business Rule Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle Archive - Business Rule Validation should maintain referential integrity after archiving","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394053930,"status":"passed","title":"should maintain referential integrity after archiving"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archive - Business Rule Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle Archive - Business Rule Validation should support statistical analysis on archived models","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394053931,"status":"passed","title":"should support statistical analysis on archived models"},{"ancestorTitles":["FunctionModel - Archive Lifecycle","Archive - Business Rule Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Archive Lifecycle Archive - Business Rule Validation should support workflow validation on archived models for audit purposes","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394053933,"status":"passed","title":"should support workflow validation on archived models for audit purposes"}],"endTime":1756394053952,"message":"  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should set status to ARCHIVED when soft deleting\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"archived\"\n    Received: \"draft\"\n\n    \u001b[0m \u001b[90m 262 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n     \u001b[90m 263 |\u001b[39m       expect(result\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 264 |\u001b[39m       expect(model\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[33mModelStatus\u001b[39m\u001b[33m.\u001b[39m\u001b[33mARCHIVED\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 265 |\u001b[39m       expect(model\u001b[33m.\u001b[39misDeleted())\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 266 |\u001b[39m       expect(model\u001b[33m.\u001b[39mdeletedAt)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 267 |\u001b[39m       expect(model\u001b[33m.\u001b[39mdeletedBy)\u001b[33m.\u001b[39mtoBe(\u001b[32m'test-user'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:264:28)\n\n  ‚óè FunctionModel - Archive Lifecycle ‚Ä∫ Archived Model - Soft Delete Integration ‚Ä∫ should handle soft delete without deletedBy parameter\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"archived\"\n    Received: \"draft\"\n\n    \u001b[0m \u001b[90m 274 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n     \u001b[90m 275 |\u001b[39m       expect(result\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 276 |\u001b[39m       expect(model\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[33mModelStatus\u001b[39m\u001b[33m.\u001b[39m\u001b[33mARCHIVED\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 277 |\u001b[39m       expect(model\u001b[33m.\u001b[39misDeleted())\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 278 |\u001b[39m       expect(model\u001b[33m.\u001b[39mdeletedAt)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 279 |\u001b[39m       expect(model\u001b[33m.\u001b[39mdeletedBy)\u001b[33m.\u001b[39mtoBeUndefined()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/entities/function-model-archive.test.ts:276:28)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\function-model-archive.test.ts","startTime":1756394053663,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Successful Archive Operations"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\nExpected number of calls: 1\nReceived number of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\nExpected number of calls: 1\nReceived number of calls: 0\n    at Object.toHaveBeenCalledTimes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\use-cases\\archive-function-model-use-case.test.ts:130:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ArchiveFunctionModelUseCase - UC-008 Successful Archive Operations should successfully archive a DRAFT model","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394053877,"status":"failed","title":"should successfully archive a DRAFT model"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Successful Archive Operations"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\use-cases\\archive-function-model-use-case.test.ts:141:39)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"ArchiveFunctionModelUseCase - UC-008 Successful Archive Operations should successfully archive a PUBLISHED model with warnings","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053898,"status":"failed","title":"should successfully archive a PUBLISHED model with warnings"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Successful Archive Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Successful Archive Operations should handle cross-feature link cleanup when requested","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053910,"status":"passed","title":"should handle cross-feature link cleanup when requested"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Archive Validation and Business Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Archive Validation and Business Rules should fail to archive already archived model","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053912,"status":"passed","title":"should fail to archive already archived model"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Archive Validation and Business Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Archive Validation and Business Rules should enforce permission checks for archive operation","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053915,"status":"passed","title":"should enforce permission checks for archive operation"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Archive Validation and Business Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Archive Validation and Business Rules should allow editors to archive models","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053916,"status":"passed","title":"should allow editors to archive models"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Dependency Validation and Risk Assessment"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"blocking dependencies\"\nReceived string:    \"Pre-archive validation failed: Cannot read properties of undefined (reading 'length')\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"blocking dependencies\"\nReceived string:    \"Pre-archive validation failed: Cannot read properties of undefined (reading 'length')\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\use-cases\\archive-function-model-use-case.test.ts:313:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ArchiveFunctionModelUseCase - UC-008 Dependency Validation and Risk Assessment should block archive when circular dependencies exist","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053918,"status":"failed","title":"should block archive when circular dependencies exist"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Dependency Validation and Risk Assessment"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"High-risk archival blocked by policy\"\nReceived string:    \"Failed to archive function model: Cannot read properties of undefined (reading 'isFailure')\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"High-risk archival blocked by policy\"\nReceived string:    \"Failed to archive function model: Cannot read properties of undefined (reading 'isFailure')\"\n    at Object.toContain (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\use-cases\\archive-function-model-use-case.test.ts:347:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ArchiveFunctionModelUseCase - UC-008 Dependency Validation and Risk Assessment should assess high risk and block when enforceRiskAssessment is true","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053920,"status":"failed","title":"should assess high risk and block when enforceRiskAssessment is true"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Dependency Validation and Risk Assessment"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Dependency Validation and Risk Assessment should allow high risk archival when enforceRiskAssessment is false","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053923,"status":"passed","title":"should allow high risk archival when enforceRiskAssessment is false"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Command Validation"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Command Validation should fail with empty modelId","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053925,"status":"passed","title":"should fail with empty modelId"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Command Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Command Validation should fail with empty userId","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053931,"status":"passed","title":"should fail with empty userId"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Command Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Command Validation should fail when reason exceeds maximum length","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053933,"status":"passed","title":"should fail when reason exceeds maximum length"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Command Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Command Validation should handle model not found","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053934,"status":"passed","title":"should handle model not found"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Event Publishing and Audit Trail"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\use-cases\\archive-function-model-use-case.test.ts:471:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ArchiveFunctionModelUseCase - UC-008 Event Publishing and Audit Trail should publish ModelArchived event with complete audit data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053935,"status":"failed","title":"should publish ModelArchived event with complete audit data"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Event Publishing and Audit Trail"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Event Publishing and Audit Trail should continue operation even if event publishing fails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053936,"status":"passed","title":"should continue operation even if event publishing fails"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Complex Integration Scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Complex Integration Scenarios should handle model with complex node structure and dependencies","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053943,"status":"passed","title":"should handle model with complex node structure and dependencies"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Complex Integration Scenarios"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Complex Integration Scenarios should provide comprehensive dependency impact assessment","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053945,"status":"passed","title":"should provide comprehensive dependency impact assessment"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Error Handling and Resilience"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Error Handling and Resilience should handle repository save failures gracefully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053949,"status":"passed","title":"should handle repository save failures gracefully"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Error Handling and Resilience"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Error Handling and Resilience should handle cross-feature link cleanup failures gracefully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053950,"status":"passed","title":"should handle cross-feature link cleanup failures gracefully"},{"ancestorTitles":["ArchiveFunctionModelUseCase - UC-008","Error Handling and Resilience"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ArchiveFunctionModelUseCase - UC-008 Error Handling and Resilience should handle unexpected errors during execution","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053956,"status":"passed","title":"should handle unexpected errors during execution"}],"endTime":1756394054024,"message":"  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Successful Archive Operations ‚Ä∫ should successfully archive a DRAFT model\n\n    expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\n    Expected number of calls: 1\n    Received number of calls: 0\n\n    \u001b[0m \u001b[90m 128 |\u001b[39m\n     \u001b[90m 129 |\u001b[39m       expect(mockRepository\u001b[33m.\u001b[39msave)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 130 |\u001b[39m       expect(mockEventBus\u001b[33m.\u001b[39mpublish)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 131 |\u001b[39m       \n     \u001b[90m 132 |\u001b[39m       \u001b[90m// Verify event data\u001b[39m\n     \u001b[90m 133 |\u001b[39m       \u001b[36mconst\u001b[39m publishCall \u001b[33m=\u001b[39m mockEventBus\u001b[33m.\u001b[39mpublish\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls[\u001b[35m0\u001b[39m][\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledTimes (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:130:36)\n\n  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Successful Archive Operations ‚Ä∫ should successfully archive a PUBLISHED model with warnings\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 139 |\u001b[39m       \u001b[90m// Arrange - publish the model first\u001b[39m\n     \u001b[90m 140 |\u001b[39m       \u001b[36mconst\u001b[39m publishResult \u001b[33m=\u001b[39m testModel\u001b[33m.\u001b[39mpublish()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m       expect(publishResult\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 142 |\u001b[39m\n     \u001b[90m 143 |\u001b[39m       \u001b[36mconst\u001b[39m command\u001b[33m:\u001b[39m \u001b[33mArchiveModelCommand\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m 144 |\u001b[39m         modelId\u001b[33m:\u001b[39m \u001b[32m'test-archive-model-id'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:141:39)\n\n  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Dependency Validation and Risk Assessment ‚Ä∫ should block archive when circular dependencies exist\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"blocking dependencies\"\n    Received string:    \"Pre-archive validation failed: Cannot read properties of undefined (reading 'length')\"\n\n    \u001b[0m \u001b[90m 311 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n     \u001b[90m 312 |\u001b[39m       expect(result\u001b[33m.\u001b[39misFailure)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 313 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'blocking dependencies'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 314 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Circular dependency detected'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 315 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 316 |\u001b[39m\u001b[0m\n\n      at Object.toContain (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:313:28)\n\n  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Dependency Validation and Risk Assessment ‚Ä∫ should assess high risk and block when enforceRiskAssessment is true\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"High-risk archival blocked by policy\"\n    Received string:    \"Failed to archive function model: Cannot read properties of undefined (reading 'isFailure')\"\n\n    \u001b[0m \u001b[90m 345 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n     \u001b[90m 346 |\u001b[39m       expect(result\u001b[33m.\u001b[39misFailure)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 347 |\u001b[39m       expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'High-risk archival blocked by policy'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 348 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 349 |\u001b[39m\n     \u001b[90m 350 |\u001b[39m     it(\u001b[32m'should allow high risk archival when enforceRiskAssessment is false'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toContain (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:347:28)\n\n  ‚óè ArchiveFunctionModelUseCase - UC-008 ‚Ä∫ Event Publishing and Audit Trail ‚Ä∫ should publish ModelArchived event with complete audit data\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 469 |\u001b[39m\n     \u001b[90m 470 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 471 |\u001b[39m       expect(result\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 472 |\u001b[39m       expect(mockEventBus\u001b[33m.\u001b[39mpublish)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 473 |\u001b[39m       \n     \u001b[90m 474 |\u001b[39m       \u001b[36mconst\u001b[39m eventCall \u001b[33m=\u001b[39m mockEventBus\u001b[33m.\u001b[39mpublish\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls[\u001b[35m0\u001b[39m][\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/use-cases/archive-function-model-use-case.test.ts:471:32)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\use-cases\\archive-function-model-use-case.test.ts","startTime":1756394053635,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ActionNodeOrchestrationService","action orchestration planning","orchestrateNodeActions"],"duration":27,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeOrchestrationService action orchestration planning orchestrateNodeActions should orchestrate single action successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053462,"status":"passed","title":"should orchestrate single action successfully"},{"ancestorTitles":["ActionNodeOrchestrationService","action orchestration planning","orchestrateNodeActions"],"duration":49,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeOrchestrationService action orchestration planning orchestrateNodeActions should orchestrate multiple actions in execution order","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053490,"status":"passed","title":"should orchestrate multiple actions in execution order"},{"ancestorTitles":["ActionNodeOrchestrationService","action orchestration planning","orchestrateNodeActions"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeOrchestrationService action orchestration planning orchestrateNodeActions should handle empty actions array","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053539,"status":"passed","title":"should handle empty actions array"},{"ancestorTitles":["ActionNodeOrchestrationService","action orchestration planning","orchestrateNodeActions"],"duration":27,"failing":false,"failureDetails":[{"matcherResult":{"expected":{"executionId":"test-exec","parameters":{"userId":"user-123","environment":"test"}},"message":"expect(received).toEqual(expected) // deep equality\n\nExpected: {\"executionId\": \"test-exec\", \"parameters\": {\"environment\": \"test\", \"userId\": \"user-123\"}}\nReceived: undefined","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: {\"executionId\": \"test-exec\", \"parameters\": {\"environment\": \"test\", \"userId\": \"user-123\"}}\nReceived: undefined\n    at Object.toEqual (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:133:62)"],"fullName":"ActionNodeOrchestrationService action orchestration planning orchestrateNodeActions should propagate context to all actions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053541,"status":"failed","title":"should propagate context to all actions"},{"ancestorTitles":["ActionNodeOrchestrationService","action orchestration planning","optimizeActionOrder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeOrchestrationService action orchestration planning optimizeActionOrder should optimize execution order based on dependencies","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053590,"status":"passed","title":"should optimize execution order based on dependencies"},{"ancestorTitles":["ActionNodeOrchestrationService","action orchestration planning","optimizeActionOrder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeOrchestrationService action orchestration planning optimizeActionOrder should handle actions with same execution order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053592,"status":"passed","title":"should handle actions with same execution order"},{"ancestorTitles":["ActionNodeOrchestrationService","action orchestration planning","optimizeActionOrder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeOrchestrationService action orchestration planning optimizeActionOrder should handle empty actions array in optimization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053593,"status":"passed","title":"should handle empty actions array in optimization"},{"ancestorTitles":["ActionNodeOrchestrationService","parallel execution coordination","coordinateParallelActions"],"duration":15,"failing":false,"failureDetails":[{"matcherResult":{"expected":"parallel-group-1","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"parallel-group-1\"\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"parallel-group-1\"\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:252:40)"],"fullName":"ActionNodeOrchestrationService parallel execution coordination coordinateParallelActions should coordinate parallel actions successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053595,"status":"failed","title":"should coordinate parallel actions successfully"},{"ancestorTitles":["ActionNodeOrchestrationService","parallel execution coordination","coordinateParallelActions"],"duration":44,"failing":false,"failureDetails":[{"matcherResult":{"expected":5,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 5\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:288:48)"],"fullName":"ActionNodeOrchestrationService parallel execution coordination coordinateParallelActions should respect max concurrency limits","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053611,"status":"failed","title":"should respect max concurrency limits"},{"ancestorTitles":["ActionNodeOrchestrationService","parallel execution coordination","coordinateParallelActions"],"duration":14,"failing":false,"failureDetails":[{"matcherResult":{"expected":2,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:328:48)"],"fullName":"ActionNodeOrchestrationService parallel execution coordination coordinateParallelActions should handle parallel execution failures with different strategies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053655,"status":"failed","title":"should handle parallel execution failures with different strategies"},{"ancestorTitles":["ActionNodeOrchestrationService","parallel execution coordination","coordinateParallelActions"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":0,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:350:48)"],"fullName":"ActionNodeOrchestrationService parallel execution coordination coordinateParallelActions should handle empty parallel group","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053669,"status":"failed","title":"should handle empty parallel group"},{"ancestorTitles":["ActionNodeOrchestrationService","sequential execution coordination","sequenceActionExecution"],"duration":31,"failing":false,"failureDetails":[{"matcherResult":{"expected":2,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:387:47)"],"fullName":"ActionNodeOrchestrationService sequential execution coordination sequenceActionExecution should execute actions sequentially in order","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053670,"status":"failed","title":"should execute actions sequentially in order"},{"ancestorTitles":["ActionNodeOrchestrationService","sequential execution coordination","sequenceActionExecution"],"duration":48,"failing":false,"failureDetails":[{"matcherResult":{"expected":false,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:434:52)"],"fullName":"ActionNodeOrchestrationService sequential execution coordination sequenceActionExecution should stop on first failure in sequential execution","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053701,"status":"failed","title":"should stop on first failure in sequential execution"},{"ancestorTitles":["ActionNodeOrchestrationService","sequential execution coordination","sequenceActionExecution"],"duration":30,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeDefined()\n\nReceived: undefined","pass":false}}],"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.toBeDefined (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:469:47)"],"fullName":"ActionNodeOrchestrationService sequential execution coordination sequenceActionExecution should pass context between sequential actions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053749,"status":"failed","title":"should pass context between sequential actions"},{"ancestorTitles":["ActionNodeOrchestrationService","sequential execution coordination","sequenceActionExecution"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":0,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:480:47)"],"fullName":"ActionNodeOrchestrationService sequential execution coordination sequenceActionExecution should handle empty sequential actions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053779,"status":"failed","title":"should handle empty sequential actions"},{"ancestorTitles":["ActionNodeOrchestrationService","conditional execution evaluation","evaluateConditionalActions"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":1,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:515:52)"],"fullName":"ActionNodeOrchestrationService conditional execution evaluation evaluateConditionalActions should evaluate and execute conditional actions based on criteria","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053781,"status":"failed","title":"should evaluate and execute conditional actions based on criteria"},{"ancestorTitles":["ActionNodeOrchestrationService","conditional execution evaluation","evaluateConditionalActions"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"expected":0,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:547:51)"],"fullName":"ActionNodeOrchestrationService conditional execution evaluation evaluateConditionalActions should skip conditional actions when conditions not met","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053782,"status":"failed","title":"should skip conditional actions when conditions not met"},{"ancestorTitles":["ActionNodeOrchestrationService","conditional execution evaluation","evaluateConditionalActions"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"expected":3,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:593:52)"],"fullName":"ActionNodeOrchestrationService conditional execution evaluation evaluateConditionalActions should handle complex conditional logic","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053784,"status":"failed","title":"should handle complex conditional logic"},{"ancestorTitles":["ActionNodeOrchestrationService","conditional execution evaluation","evaluateConditionalActions"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":0,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:605:52)"],"fullName":"ActionNodeOrchestrationService conditional execution evaluation evaluateConditionalActions should handle empty conditional evaluations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053786,"status":"failed","title":"should handle empty conditional evaluations"},{"ancestorTitles":["ActionNodeOrchestrationService","action failure handling","handleActionFailures"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":1,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:638:45)"],"fullName":"ActionNodeOrchestrationService action failure handling handleActionFailures should handle action failures with retry strategy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053788,"status":"failed","title":"should handle action failures with retry strategy"},{"ancestorTitles":["ActionNodeOrchestrationService","action failure handling","handleActionFailures"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":0,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:666:47)"],"fullName":"ActionNodeOrchestrationService action failure handling handleActionFailures should escalate failures after max retries exceeded","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053789,"status":"failed","title":"should escalate failures after max retries exceeded"},{"ancestorTitles":["ActionNodeOrchestrationService","action failure handling","handleActionFailures"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":2,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:697:45)"],"fullName":"ActionNodeOrchestrationService action failure handling handleActionFailures should handle multiple failure types simultaneously","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053790,"status":"failed","title":"should handle multiple failure types simultaneously"},{"ancestorTitles":["ActionNodeOrchestrationService","action failure handling","handleActionFailures"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":0,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:709:45)"],"fullName":"ActionNodeOrchestrationService action failure handling handleActionFailures should handle empty failures array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053791,"status":"failed","title":"should handle empty failures array"},{"ancestorTitles":["ActionNodeOrchestrationService","dependency validation","validateActionDependencies"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:743:36)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"ActionNodeOrchestrationService dependency validation validateActionDependencies should validate action dependencies successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053792,"status":"failed","title":"should validate action dependencies successfully"},{"ancestorTitles":["ActionNodeOrchestrationService","dependency validation","validateActionDependencies"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":false,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:774:36)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"ActionNodeOrchestrationService dependency validation validateActionDependencies should detect circular dependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053798,"status":"failed","title":"should detect circular dependencies"},{"ancestorTitles":["ActionNodeOrchestrationService","dependency validation","validateActionDependencies"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"expected":false,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:799:36)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"ActionNodeOrchestrationService dependency validation validateActionDependencies should detect unresolved dependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053800,"status":"failed","title":"should detect unresolved dependencies"},{"ancestorTitles":["ActionNodeOrchestrationService","dependency validation","validateActionDependencies"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:815:38)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"ActionNodeOrchestrationService dependency validation validateActionDependencies should handle empty dependencies gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053801,"status":"failed","title":"should handle empty dependencies gracefully"},{"ancestorTitles":["ActionNodeOrchestrationService","progress monitoring","monitorActionProgress"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeDefined()\n\nReceived: undefined","pass":false}}],"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.toBeDefined (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:843:46)"],"fullName":"ActionNodeOrchestrationService progress monitoring monitorActionProgress should monitor action progress successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053803,"status":"failed","title":"should monitor action progress successfully"},{"ancestorTitles":["ActionNodeOrchestrationService","progress monitoring","monitorActionProgress"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":0,"expected":1,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:882:49)"],"fullName":"ActionNodeOrchestrationService progress monitoring monitorActionProgress should calculate accurate progress percentages","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053805,"status":"failed","title":"should calculate accurate progress percentages"},{"ancestorTitles":["ActionNodeOrchestrationService","progress monitoring","monitorActionProgress"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeOrchestrationService progress monitoring monitorActionProgress should handle empty actions in progress monitoring","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053806,"status":"passed","title":"should handle empty actions in progress monitoring"},{"ancestorTitles":["ActionNodeOrchestrationService","error handling and edge cases"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: Cannot set property actionId of #<ActionNode> which has only a getter\n    at Object.<anonymous> (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts:909:40)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"ActionNodeOrchestrationService error handling and edge cases should handle malformed actions gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053807,"status":"failed","title":"should handle malformed actions gracefully"},{"ancestorTitles":["ActionNodeOrchestrationService","error handling and edge cases"],"duration":20,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeOrchestrationService error handling and edge cases should handle concurrent orchestration requests","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053807,"status":"passed","title":"should handle concurrent orchestration requests"},{"ancestorTitles":["ActionNodeOrchestrationService","error handling and edge cases"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeOrchestrationService error handling and edge cases should handle resource cleanup after orchestration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053827,"status":"passed","title":"should handle resource cleanup after orchestration"}],"endTime":1756394054064,"message":"  ‚óè ActionNodeOrchestrationService ‚Ä∫ action orchestration planning ‚Ä∫ orchestrateNodeActions ‚Ä∫ should propagate context to all actions\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: {\"executionId\": \"test-exec\", \"parameters\": {\"environment\": \"test\", \"userId\": \"user-123\"}}\n    Received: undefined\n\n    \u001b[0m \u001b[90m 131 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 132 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mcontextPropagation)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 133 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mcontextPropagation[\u001b[32m'test-exec'\u001b[39m])\u001b[33m.\u001b[39mtoEqual(context)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 134 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 135 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 136 |\u001b[39m\u001b[0m\n\n      at Object.toEqual (tests/unit/domain/services/action-node-orchestration-service.test.ts:133:62)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should coordinate parallel actions successfully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"parallel-group-1\"\n    Received: undefined\n\n    \u001b[0m \u001b[90m 250 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 251 |\u001b[39m         \u001b[36mconst\u001b[39m parallelResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 252 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mgroupId)\u001b[33m.\u001b[39mtoBe(\u001b[32m'parallel-group-1'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 253 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mexecutedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 254 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mfailedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 255 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mtotalExecutionTime)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:252:40)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should respect max concurrency limits\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 5\n    Received: undefined\n\n    \u001b[0m \u001b[90m 286 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 287 |\u001b[39m         \u001b[36mconst\u001b[39m parallelResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 288 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mexecutedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 289 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mfailedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 290 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mconcurrencyRespected)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 291 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:288:48)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle parallel execution failures with different strategies\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: undefined\n\n    \u001b[0m \u001b[90m 326 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 327 |\u001b[39m         \u001b[36mconst\u001b[39m parallelResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 328 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mexecutedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Both attempted\u001b[39m\n     \u001b[90m     |\u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 329 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mfailedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// One failed\u001b[39m\n     \u001b[90m 330 |\u001b[39m         \n     \u001b[90m 331 |\u001b[39m         \u001b[90m// Cleanup\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:328:48)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ parallel execution coordination ‚Ä∫ coordinateParallelActions ‚Ä∫ should handle empty parallel group\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: undefined\n\n    \u001b[0m \u001b[90m 348 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 349 |\u001b[39m         \u001b[36mconst\u001b[39m parallelResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 350 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mexecutedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 351 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mfailedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 352 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 353 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:350:48)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should execute actions sequentially in order\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: undefined\n\n    \u001b[0m \u001b[90m 385 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 386 |\u001b[39m         \u001b[36mconst\u001b[39m sequentialResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 387 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mtotalActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 388 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mcompletedSequence)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 389 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mfailurePoint)\u001b[33m.\u001b[39mtoBeUndefined()\u001b[33m;\u001b[39m\n     \u001b[90m 390 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mexecutionOrder)\u001b[33m.\u001b[39mtoEqual([\u001b[32m'First Sequential'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Second Sequential'\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:387:47)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should stop on first failure in sequential execution\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: undefined\n\n    \u001b[0m \u001b[90m 432 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 433 |\u001b[39m         \u001b[36mconst\u001b[39m sequentialResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 434 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mcompletedSequence)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 435 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mfailurePoint)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Failed at second action (index 1)\u001b[39m\n     \u001b[90m 436 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mexecutionOrder)\u001b[33m.\u001b[39mtoEqual([\u001b[32m'Good Action'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Bad Action'\u001b[39m])\u001b[33m;\u001b[39m\n     \u001b[90m 437 |\u001b[39m         \u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:434:52)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should pass context between sequential actions\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 467 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 468 |\u001b[39m         \u001b[36mconst\u001b[39m sequentialResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 469 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mcontextChain)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 470 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mcontextChain)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 471 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 472 |\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:469:47)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ sequential execution coordination ‚Ä∫ sequenceActionExecution ‚Ä∫ should handle empty sequential actions\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: undefined\n\n    \u001b[0m \u001b[90m 478 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 479 |\u001b[39m         \u001b[36mconst\u001b[39m sequentialResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 480 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mtotalActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 481 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mcompletedSequence)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 482 |\u001b[39m         expect(sequentialResult\u001b[33m.\u001b[39mexecutionOrder)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m 483 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:480:47)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should evaluate and execute conditional actions based on criteria\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: undefined\n\n    \u001b[0m \u001b[90m 513 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 514 |\u001b[39m         \u001b[36mconst\u001b[39m conditionalResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 515 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mtotalEvaluations)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 516 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mexecutedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 517 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mskippedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 518 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mevaluationResults)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:515:52)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should skip conditional actions when conditions not met\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: undefined\n\n    \u001b[0m \u001b[90m 545 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 546 |\u001b[39m         \u001b[36mconst\u001b[39m conditionalResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 547 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mexecutedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 548 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mskippedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 549 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mevaluationResults[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mexecuted)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 550 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mevaluationResults[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mskipReason)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:547:51)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle complex conditional logic\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 3\n    Received: undefined\n\n    \u001b[0m \u001b[90m 591 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 592 |\u001b[39m         \u001b[36mconst\u001b[39m conditionalResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 593 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mtotalEvaluations)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 594 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mexecutedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 595 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mskippedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 596 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:593:52)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ conditional execution evaluation ‚Ä∫ evaluateConditionalActions ‚Ä∫ should handle empty conditional evaluations\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: undefined\n\n    \u001b[0m \u001b[90m 603 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 604 |\u001b[39m         \u001b[36mconst\u001b[39m conditionalResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 605 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mtotalEvaluations)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 606 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mexecutedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 607 |\u001b[39m         expect(conditionalResult\u001b[33m.\u001b[39mskippedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 608 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:605:52)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle action failures with retry strategy\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: undefined\n\n    \u001b[0m \u001b[90m 636 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 637 |\u001b[39m         \u001b[36mconst\u001b[39m failureResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 638 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mtotalFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 639 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mretriedFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 640 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mpermanentFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 641 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mrecoveryActions)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:638:45)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should escalate failures after max retries exceeded\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: undefined\n\n    \u001b[0m \u001b[90m 664 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 665 |\u001b[39m         \u001b[36mconst\u001b[39m failureResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 666 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mretriedFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 667 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mpermanentFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 668 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mescalatedFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 669 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:666:47)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle multiple failure types simultaneously\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: undefined\n\n    \u001b[0m \u001b[90m 695 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 696 |\u001b[39m         \u001b[36mconst\u001b[39m failureResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 697 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mtotalFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 698 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mretriedFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 699 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mpermanentFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 700 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:697:45)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ action failure handling ‚Ä∫ handleActionFailures ‚Ä∫ should handle empty failures array\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: undefined\n\n    \u001b[0m \u001b[90m 707 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 708 |\u001b[39m         \u001b[36mconst\u001b[39m failureResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 709 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mtotalFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 710 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mretriedFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 711 |\u001b[39m         expect(failureResult\u001b[33m.\u001b[39mpermanentFailures)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 712 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:709:45)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should validate action dependencies successfully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n    \u001b[0m \u001b[90m 741 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 742 |\u001b[39m         \u001b[36mconst\u001b[39m validation \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 743 |\u001b[39m         expect(validation\u001b[33m.\u001b[39misValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 744 |\u001b[39m         expect(validation\u001b[33m.\u001b[39mcircularDependencies)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m 745 |\u001b[39m         expect(validation\u001b[33m.\u001b[39munresolvedDependencies)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m 746 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:743:36)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect circular dependencies\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: undefined\n\n    \u001b[0m \u001b[90m 772 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 773 |\u001b[39m         \u001b[36mconst\u001b[39m validation \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 774 |\u001b[39m         expect(validation\u001b[33m.\u001b[39misValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 775 |\u001b[39m         expect(validation\u001b[33m.\u001b[39mcircularDependencies)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 776 |\u001b[39m         expect(validation\u001b[33m.\u001b[39mcircularDependencies[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoContain(action1\u001b[33m.\u001b[39mactionId\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n     \u001b[90m 777 |\u001b[39m         expect(validation\u001b[33m.\u001b[39mcircularDependencies[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoContain(action2\u001b[33m.\u001b[39mactionId\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:774:36)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should detect unresolved dependencies\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: undefined\n\n    \u001b[0m \u001b[90m 797 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n     \u001b[90m 798 |\u001b[39m         \u001b[36mconst\u001b[39m validation \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 799 |\u001b[39m         expect(validation\u001b[33m.\u001b[39misValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 800 |\u001b[39m         expect(validation\u001b[33m.\u001b[39munresolvedDependencies)\u001b[33m.\u001b[39mtoContain(nonExistentActionId\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n     \u001b[90m 801 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 802 |\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:799:36)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ dependency validation ‚Ä∫ validateActionDependencies ‚Ä∫ should handle empty dependencies gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n    \u001b[0m \u001b[90m 813 |\u001b[39m         \u001b[90m// Assert\u001b[39m\n     \u001b[90m 814 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 815 |\u001b[39m         expect(result\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39misValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 816 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 817 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 818 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:815:38)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should monitor action progress successfully\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 841 |\u001b[39m         expect(progressResult\u001b[33m.\u001b[39mcompletedActions)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 842 |\u001b[39m         expect(progressResult\u001b[33m.\u001b[39minProgressActions)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 843 |\u001b[39m         expect(progressResult\u001b[33m.\u001b[39mfailedActions)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 844 |\u001b[39m         expect(progressResult\u001b[33m.\u001b[39moverallProgress)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 845 |\u001b[39m         expect(progressResult\u001b[33m.\u001b[39moverallProgress)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(\u001b[35m100\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 846 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (tests/unit/domain/services/action-node-orchestration-service.test.ts:843:46)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ progress monitoring ‚Ä∫ monitorActionProgress ‚Ä∫ should calculate accurate progress percentages\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n    \u001b[0m \u001b[90m 880 |\u001b[39m         \u001b[36mconst\u001b[39m progressResult \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\n     \u001b[90m 881 |\u001b[39m         expect(progressResult\u001b[33m.\u001b[39mtotalActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 882 |\u001b[39m         expect(progressResult\u001b[33m.\u001b[39mcompletedActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 883 |\u001b[39m         expect(progressResult\u001b[33m.\u001b[39minProgressActions)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 884 |\u001b[39m         expect(progressResult\u001b[33m.\u001b[39moverallProgress)\u001b[33m.\u001b[39mtoBeCloseTo(\u001b[35m33.33\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 1/3 completed\u001b[39m\n     \u001b[90m 885 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/action-node-orchestration-service.test.ts:882:49)\n\n  ‚óè ActionNodeOrchestrationService ‚Ä∫ error handling and edge cases ‚Ä∫ should handle malformed actions gracefully\n\n    TypeError: Cannot set property actionId of #<ActionNode> which has only a getter\n\n    \u001b[0m \u001b[90m 907 |\u001b[39m       \n     \u001b[90m 908 |\u001b[39m       \u001b[90m// Corrupt the action by clearing critical properties\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 909 |\u001b[39m       (malformedAction \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mactionId \u001b[33m=\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 910 |\u001b[39m       \n     \u001b[90m 911 |\u001b[39m       \u001b[90m// Act\u001b[39m\n     \u001b[90m 912 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m orchestrationService\u001b[33m.\u001b[39morchestrateNodeActions([malformedAction]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/unit/domain/services/action-node-orchestration-service.test.ts:909:40)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-orchestration-service.test.ts","startTime":1756394051739,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Archive Dependency Validation Services","NodeDependencyService - Pre-Archive Validation"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-archive-dependency-validation.test.ts:72:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Archive Dependency Validation Services NodeDependencyService - Pre-Archive Validation should validate no circular dependencies exist before archiving","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054095,"status":"failed","title":"should validate no circular dependencies exist before archiving"},{"ancestorTitles":["Archive Dependency Validation Services","NodeDependencyService - Pre-Archive Validation"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-archive-dependency-validation.test.ts:120:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Archive Dependency Validation Services NodeDependencyService - Pre-Archive Validation should detect circular dependencies that prevent safe archiving","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394054115,"status":"failed","title":"should detect circular dependencies that prevent safe archiving"},{"ancestorTitles":["Archive Dependency Validation Services","NodeDependencyService - Pre-Archive Validation"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-archive-dependency-validation.test.ts:187:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Archive Dependency Validation Services NodeDependencyService - Pre-Archive Validation should calculate execution order for safe archival documentation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054116,"status":"failed","title":"should calculate execution order for safe archival documentation"},{"ancestorTitles":["Archive Dependency Validation Services","NodeDependencyService - Pre-Archive Validation"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-archive-dependency-validation.test.ts:245:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Archive Dependency Validation Services NodeDependencyService - Pre-Archive Validation should validate dependency graph structure for archival integrity","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054118,"status":"failed","title":"should validate dependency graph structure for archival integrity"},{"ancestorTitles":["Archive Dependency Validation Services","NodeDependencyService - Pre-Archive Validation"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-archive-dependency-validation.test.ts:311:36)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Archive Dependency Validation Services NodeDependencyService - Pre-Archive Validation should detect orphaned nodes before archival to ensure data completeness","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054119,"status":"failed","title":"should detect orphaned nodes before archival to ensure data completeness"},{"ancestorTitles":["Archive Dependency Validation Services","CrossFeatureLinkingService - Cross-Model Reference Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Archive Dependency Validation Services CrossFeatureLinkingService - Cross-Model Reference Validation should validate no active cross-feature links prevent archiving","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054120,"status":"passed","title":"should validate no active cross-feature links prevent archiving"},{"ancestorTitles":["Archive Dependency Validation Services","CrossFeatureLinkingService - Cross-Model Reference Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Archive Dependency Validation Services CrossFeatureLinkingService - Cross-Model Reference Validation should detect relationship cycles that could complicate archival","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054122,"status":"passed","title":"should detect relationship cycles that could complicate archival"},{"ancestorTitles":["Archive Dependency Validation Services","CrossFeatureLinkingService - Cross-Model Reference Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Archive Dependency Validation Services CrossFeatureLinkingService - Cross-Model Reference Validation should calculate network metrics for archival impact assessment","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054124,"status":"passed","title":"should calculate network metrics for archival impact assessment"},{"ancestorTitles":["Archive Dependency Validation Services","CrossFeatureLinkingService - Cross-Model Reference Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Archive Dependency Validation Services CrossFeatureLinkingService - Cross-Model Reference Validation should validate link constraints before archival to ensure referential integrity","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054126,"status":"passed","title":"should validate link constraints before archival to ensure referential integrity"},{"ancestorTitles":["Archive Dependency Validation Services","CrossFeatureLinkingService - Cross-Model Reference Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Archive Dependency Validation Services CrossFeatureLinkingService - Cross-Model Reference Validation should support safe link removal during archival process","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054126,"status":"passed","title":"should support safe link removal during archival process"},{"ancestorTitles":["Archive Dependency Validation Services","CrossFeatureLinkingService - Cross-Model Reference Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Archive Dependency Validation Services CrossFeatureLinkingService - Cross-Model Reference Validation should calculate link strength for archival prioritization","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394054128,"status":"passed","title":"should calculate link strength for archival prioritization"},{"ancestorTitles":["Archive Dependency Validation Services","Integrated Archive Dependency Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Archive Dependency Validation Services Integrated Archive Dependency Validation should validate both internal and external dependencies before archival","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394054130,"status":"passed","title":"should validate both internal and external dependencies before archival"},{"ancestorTitles":["Archive Dependency Validation Services","Integrated Archive Dependency Validation"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Archive Dependency Validation Services Integrated Archive Dependency Validation should provide comprehensive pre-archival validation report","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054132,"status":"passed","title":"should provide comprehensive pre-archival validation report"}],"endTime":1756394054190,"message":"  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should validate no circular dependencies exist before archiving\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 70 |\u001b[39m\n     \u001b[90m 71 |\u001b[39m       expect(nodeA\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 72 |\u001b[39m       expect(nodeB\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 73 |\u001b[39m       expect(nodeC\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 74 |\u001b[39m\n     \u001b[90m 75 |\u001b[39m       \u001b[36mconst\u001b[39m nodes \u001b[33m=\u001b[39m [nodeA\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m nodeB\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m nodeC\u001b[33m.\u001b[39mvalue]\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:72:31)\n\n  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should detect circular dependencies that prevent safe archiving\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 118 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 119 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 120 |\u001b[39m       expect(nodeA\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 121 |\u001b[39m       expect(nodeB\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 122 |\u001b[39m\n     \u001b[90m 123 |\u001b[39m       \u001b[36mconst\u001b[39m nodes \u001b[33m=\u001b[39m [nodeA\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m nodeB\u001b[33m.\u001b[39mvalue]\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:120:31)\n\n  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should calculate execution order for safe archival documentation\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 185 |\u001b[39m\n     \u001b[90m 186 |\u001b[39m       expect(nodeA\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 187 |\u001b[39m       expect(nodeB\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 188 |\u001b[39m       expect(nodeC\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 189 |\u001b[39m\n     \u001b[90m 190 |\u001b[39m       \u001b[36mconst\u001b[39m nodes \u001b[33m=\u001b[39m [nodeC\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m nodeA\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m nodeB\u001b[33m.\u001b[39mvalue]\u001b[33m;\u001b[39m \u001b[90m// Intentionally unordered\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:187:31)\n\n  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should validate dependency graph structure for archival integrity\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 243 |\u001b[39m\n     \u001b[90m 244 |\u001b[39m       expect(nodeA\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 245 |\u001b[39m       expect(nodeB\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 246 |\u001b[39m\n     \u001b[90m 247 |\u001b[39m       \u001b[36mconst\u001b[39m nodes \u001b[33m=\u001b[39m [nodeA\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m nodeB\u001b[33m.\u001b[39mvalue]\u001b[33m;\u001b[39m\n     \u001b[90m 248 |\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:245:31)\n\n  ‚óè Archive Dependency Validation Services ‚Ä∫ NodeDependencyService - Pre-Archive Validation ‚Ä∫ should detect orphaned nodes before archival to ensure data completeness\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 309 |\u001b[39m       expect(nodeA\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 310 |\u001b[39m       expect(nodeB\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 311 |\u001b[39m       expect(nodeOrphan\u001b[33m.\u001b[39misSuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 312 |\u001b[39m\n     \u001b[90m 313 |\u001b[39m       \u001b[36mconst\u001b[39m nodes \u001b[33m=\u001b[39m [nodeA\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m nodeB\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m nodeOrphan\u001b[33m.\u001b[39mvalue]\u001b[33m;\u001b[39m\n     \u001b[90m 314 |\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/model-archive-dependency-validation.test.ts:311:36)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-archive-dependency-validation.test.ts","startTime":1756394053804,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Model Version Change Detection","Node Addition Detection"],"duration":3,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:120:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Node Addition Detection detectNodeAdditions_SingleNewNode_IdentifiesAddition","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054093,"status":"failed","title":"detectNodeAdditions_SingleNewNode_IdentifiesAddition"},{"ancestorTitles":["Model Version Change Detection","Node Addition Detection"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:143:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Node Addition Detection detectNodeAdditions_MultipleNewNodes_IdentifiesAllAdditions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054121,"status":"failed","title":"detectNodeAdditions_MultipleNewNodes_IdentifiesAllAdditions"},{"ancestorTitles":["Model Version Change Detection","Node Addition Detection"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:169:27)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Node Addition Detection detectNodeAdditions_DifferentNodeTypes_CategorizesByType","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054122,"status":"failed","title":"detectNodeAdditions_DifferentNodeTypes_CategorizesByType"},{"ancestorTitles":["Model Version Change Detection","Node Removal Detection"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:196:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Node Removal Detection detectNodeRemovals_SingleRemovedNode_IdentifiesRemoval","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054125,"status":"failed","title":"detectNodeRemovals_SingleRemovedNode_IdentifiesRemoval"},{"ancestorTitles":["Model Version Change Detection","Node Removal Detection"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:220:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Node Removal Detection detectNodeRemovals_CriticalNodeRemoval_IdentifiesImpact","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054127,"status":"failed","title":"detectNodeRemovals_CriticalNodeRemoval_IdentifiesImpact"},{"ancestorTitles":["Model Version Change Detection","Node Property Modification Detection"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Model Version Change Detection Node Property Modification Detection detectPropertyChanges_NameModification_IdentifiesChange","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054128,"status":"passed","title":"detectPropertyChanges_NameModification_IdentifiesChange"},{"ancestorTitles":["Model Version Change Detection","Node Property Modification Detection"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:386:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Node Property Modification Detection detectPropertyChanges_MetadataEvolution_TracksMetadataChanges","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054136,"status":"failed","title":"detectPropertyChanges_MetadataEvolution_TracksMetadataChanges"},{"ancestorTitles":["Model Version Change Detection","Node Property Modification Detection"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:407:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Node Property Modification Detection detectPropertyChanges_DependencyModification_IdentifiesDependencyChanges","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054140,"status":"failed","title":"detectPropertyChanges_DependencyModification_IdentifiesDependencyChanges"},{"ancestorTitles":["Model Version Change Detection","Complex Change Scenarios"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:434:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Complex Change Scenarios detectComplexChanges_MultipleChangeTypes_CategorizeCorrectly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054141,"status":"failed","title":"detectComplexChanges_MultipleChangeTypes_CategorizeCorrectly"},{"ancestorTitles":["Model Version Change Detection","Complex Change Scenarios"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:466:27)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Complex Change Scenarios detectComplexChanges_WorkflowRestructuring_IdentifiesStructuralChanges","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054142,"status":"failed","title":"detectComplexChanges_WorkflowRestructuring_IdentifiesStructuralChanges"},{"ancestorTitles":["Model Version Change Detection","Change Analysis Performance"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:71:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:513:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Change Analysis Performance analyzeChanges_LargeModel_CompletesWithinTimeLimit","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054143,"status":"failed","title":"analyzeChanges_LargeModel_CompletesWithinTimeLimit"},{"ancestorTitles":["Model Version Change Detection","Change Analysis Performance"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:543:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Change Analysis Performance analyzeChanges_DeepNesting_HandlesComplexity","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054144,"status":"failed","title":"analyzeChanges_DeepNesting_HandlesComplexity"},{"ancestorTitles":["Model Version Change Detection","Business Rule Validation"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:584:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Business Rule Validation validateChanges_BreakingChange_RecommendsMajorVersion","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054145,"status":"failed","title":"validateChanges_BreakingChange_RecommendsMajorVersion"},{"ancestorTitles":["Model Version Change Detection","Business Rule Validation"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Cannot get value from failed result\n    at Result.get value [as value] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\shared\\result.ts:18:13)\n    at C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:52:11\n    at Array.forEach (<anonymous>)\n    at forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:29:17)\n    at Object.createModelWithNodes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts:611:25)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Model Version Change Detection Business Rule Validation validateChanges_BackwardCompatibleAddition_RecommendsMinorVersion","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054146,"status":"failed","title":"validateChanges_BackwardCompatibleAddition_RecommendsMinorVersion"}],"endTime":1756394054204,"message":"  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_SingleNewNode_IdentifiesAddition\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:120:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_MultipleNewNodes_IdentifiesAllAdditions\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:143:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Node Addition Detection ‚Ä∫ detectNodeAdditions_DifferentNodeTypes_CategorizesByType\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:169:27)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Node Removal Detection ‚Ä∫ detectNodeRemovals_SingleRemovedNode_IdentifiesRemoval\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:196:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Node Removal Detection ‚Ä∫ detectNodeRemovals_CriticalNodeRemoval_IdentifiesImpact\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:220:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Node Property Modification Detection ‚Ä∫ detectPropertyChanges_MetadataEvolution_TracksMetadataChanges\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:386:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Node Property Modification Detection ‚Ä∫ detectPropertyChanges_DependencyModification_IdentifiesDependencyChanges\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:407:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Complex Change Scenarios ‚Ä∫ detectComplexChanges_MultipleChangeTypes_CategorizeCorrectly\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:434:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Complex Change Scenarios ‚Ä∫ detectComplexChanges_WorkflowRestructuring_IdentifiesStructuralChanges\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:466:27)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Change Analysis Performance ‚Ä∫ analyzeChanges_LargeModel_CompletesWithinTimeLimit\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:71:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:513:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Change Analysis Performance ‚Ä∫ analyzeChanges_DeepNesting_HandlesComplexity\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:543:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Business Rule Validation ‚Ä∫ validateChanges_BreakingChange_RecommendsMajorVersion\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:584:25)\n\n  ‚óè Model Version Change Detection ‚Ä∫ Business Rule Validation ‚Ä∫ validateChanges_BackwardCompatibleAddition_RecommendsMinorVersion\n\n    Cannot get value from failed result\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mpublic\u001b[39m \u001b[36mget\u001b[39m value()\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m {\n     \u001b[90m 17 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_isSuccess) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Cannot get value from failed result'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m     }\n     \u001b[90m 20 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_value\u001b[33m!\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\n      at Result.get value [as value] (lib/domain/shared/result.ts:18:13)\n      at tests/unit/domain/services/model-version-change-detection.test.ts:52:11\n          at Array.forEach (<anonymous>)\n      at forEach (tests/unit/domain/services/model-version-change-detection.test.ts:29:17)\n      at Object.createModelWithNodes (tests/unit/domain/services/model-version-change-detection.test.ts:611:25)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\model-version-change-detection.test.ts","startTime":1756394053778,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","workflow orchestration error handling","model validation failures"],"duration":22,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Handling and Recovery Patterns - UC-005 workflow orchestration error handling model validation failures should handle invalid model gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053610,"status":"passed","title":"should handle invalid model gracefully"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","workflow orchestration error handling","model validation failures"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Handling and Recovery Patterns - UC-005 workflow orchestration error handling model validation failures should handle circular dependency errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053632,"status":"passed","title":"should handle circular dependency errors"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","workflow orchestration error handling","model validation failures"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Handling and Recovery Patterns - UC-005 workflow orchestration error handling model validation failures should handle missing node references","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053635,"status":"passed","title":"should handle missing node references"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","workflow orchestration error handling","execution state recovery"],"duration":114,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Handling and Recovery Patterns - UC-005 workflow orchestration error handling execution state recovery should recover from paused execution state","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053637,"status":"passed","title":"should recover from paused execution state"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","workflow orchestration error handling","execution state recovery"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Handling and Recovery Patterns - UC-005 workflow orchestration error handling execution state recovery should handle corrupted execution state","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053752,"status":"passed","title":"should handle corrupted execution state"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","workflow orchestration error handling","execution state recovery"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Handling and Recovery Patterns - UC-005 workflow orchestration error handling execution state recovery should handle concurrent state modifications","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053859,"status":"passed","title":"should handle concurrent state modifications"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","workflow orchestration error handling","node execution failure handling"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Handling and Recovery Patterns - UC-005 workflow orchestration error handling node execution failure handling should handle critical node failures","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053971,"status":"passed","title":"should handle critical node failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","workflow orchestration error handling","node execution failure handling"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Error Handling and Recovery Patterns - UC-005 workflow orchestration error handling node execution failure handling should continue execution after non-critical failures","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394053973,"status":"passed","title":"should continue execution after non-critical failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","action execution error handling","execution lifecycle errors"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"message":"Expected [object Object] to be a failed Result","pass":false}}],"failureMessages":["Error: Expected [object Object] to be a failed Result\n    at Object.toBeFailureResult (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:305:24)"],"fullName":"Error Handling and Recovery Patterns - UC-005 action execution error handling execution lifecycle errors should handle execution start failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394053976,"status":"failed","title":"should handle execution start failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","action execution error handling","execution lifecycle errors"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 action execution error handling execution lifecycle errors should handle execution timeout scenarios","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054008,"status":"failed","title":"should handle execution timeout scenarios"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","action execution error handling","execution lifecycle errors"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 action execution error handling execution lifecycle errors should handle resource exhaustion gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054021,"status":"failed","title":"should handle resource exhaustion gracefully"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","action execution error handling","retry mechanism failures"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 action execution error handling retry mechanism failures should handle retry exhaustion","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054022,"status":"failed","title":"should handle retry exhaustion"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","action execution error handling","retry mechanism failures"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 action execution error handling retry mechanism failures should handle retry policy evaluation failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054023,"status":"failed","title":"should handle retry policy evaluation failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","action execution error handling","retry mechanism failures"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 action execution error handling retry mechanism failures should handle exponential backoff calculation errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054024,"status":"failed","title":"should handle exponential backoff calculation errors"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","action execution error handling","metrics and monitoring errors"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 action execution error handling metrics and monitoring errors should handle metrics corruption recovery","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054025,"status":"failed","title":"should handle metrics corruption recovery"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","action execution error handling","metrics and monitoring errors"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 action execution error handling metrics and monitoring errors should handle invalid resource usage data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054026,"status":"failed","title":"should handle invalid resource usage data"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","fractal orchestration error handling","planning failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 fractal orchestration error handling planning failures should handle invalid model structure","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054028,"status":"failed","title":"should handle invalid model structure"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","fractal orchestration error handling","planning failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 fractal orchestration error handling planning failures should handle extremely deep nesting","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054029,"status":"failed","title":"should handle extremely deep nesting"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","fractal orchestration error handling","planning failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 fractal orchestration error handling planning failures should handle context initialization failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054030,"status":"failed","title":"should handle context initialization failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","fractal orchestration error handling","execution coordination failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 fractal orchestration error handling execution coordination failures should handle level coordination failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054031,"status":"failed","title":"should handle level coordination failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","fractal orchestration error handling","execution coordination failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 fractal orchestration error handling execution coordination failures should handle vertical nesting failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054032,"status":"failed","title":"should handle vertical nesting failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","fractal orchestration error handling","execution coordination failures"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 fractal orchestration error handling execution coordination failures should handle horizontal scaling failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054032,"status":"failed","title":"should handle horizontal scaling failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","fractal orchestration error handling","context propagation failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 fractal orchestration error handling context propagation failures should handle context transformation errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054034,"status":"failed","title":"should handle context transformation errors"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","fractal orchestration error handling","context propagation failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 fractal orchestration error handling context propagation failures should handle consistency validation failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054035,"status":"failed","title":"should handle consistency validation failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","context access error handling","context building failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 context access error handling context building failures should handle invalid node ID formats","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054036,"status":"failed","title":"should handle invalid node ID formats"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","context access error handling","context building failures"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 context access error handling context building failures should handle memory constraints","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054042,"status":"failed","title":"should handle memory constraints"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","context access error handling","context building failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 context access error handling context building failures should handle concurrent context operations conflicts","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054044,"status":"failed","title":"should handle concurrent context operations conflicts"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","context access error handling","access control failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 context access error handling access control failures should handle permission validation errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054045,"status":"failed","title":"should handle permission validation errors"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","context access error handling","access control failures"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 context access error handling access control failures should handle circular reference detection failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054046,"status":"failed","title":"should handle circular reference detection failures"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","context access error handling","scope management failures"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 context access error handling scope management failures should handle scope isolation violations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054046,"status":"failed","title":"should handle scope isolation violations"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","integrated error recovery scenarios","cascading failure recovery"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 integrated error recovery scenarios cascading failure recovery should handle workflow -> action -> context failure cascade","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054047,"status":"failed","title":"should handle workflow -> action -> context failure cascade"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","integrated error recovery scenarios","cascading failure recovery"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 integrated error recovery scenarios cascading failure recovery should maintain system stability under high error rates","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054048,"status":"failed","title":"should maintain system stability under high error rates"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","integrated error recovery scenarios","resource cleanup after errors"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 integrated error recovery scenarios resource cleanup after errors should clean up resources after workflow failure","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054049,"status":"failed","title":"should clean up resources after workflow failure"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","integrated error recovery scenarios","resource cleanup after errors"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 integrated error recovery scenarios resource cleanup after errors should prevent memory leaks in long-running error scenarios","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054050,"status":"failed","title":"should prevent memory leaks in long-running error scenarios"},{"ancestorTitles":["Error Handling and Recovery Patterns - UC-005","integrated error recovery scenarios","service coordination error handling"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["Error: Invalid node ID: Invalid node ID\n    at IONodeBuilder.build (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:239:13)\n    at Object.build [as createCompleteWorkflow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\utils\\test-fixtures.ts:869:8)\n    at Object.createCompleteWorkflow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts:84:31)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Error Handling and Recovery Patterns - UC-005 integrated error recovery scenarios service coordination error handling should handle inter-service communication failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054051,"status":"failed","title":"should handle inter-service communication failures"}],"endTime":1756394054305,"message":"  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution start failures\n\n    Expected [object Object] to be a failed Result\n\n    \u001b[0m \u001b[90m 303 |\u001b[39m\n     \u001b[90m 304 |\u001b[39m         \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 305 |\u001b[39m         expect(result)\u001b[33m.\u001b[39mtoBeFailureResult()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 306 |\u001b[39m         expect(result\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Failed to start execution'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 307 |\u001b[39m         expect(actionExecutionService\u001b[33m.\u001b[39misExecuting(testActionId))\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 308 |\u001b[39m         \u001b[0m\n\n      at Object.toBeFailureResult (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:305:24)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle execution timeout scenarios\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ execution lifecycle errors ‚Ä∫ should handle resource exhaustion gracefully\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry exhaustion\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle retry policy evaluation failures\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ retry mechanism failures ‚Ä∫ should handle exponential backoff calculation errors\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle metrics corruption recovery\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ action execution error handling ‚Ä∫ metrics and monitoring errors ‚Ä∫ should handle invalid resource usage data\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle invalid model structure\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle extremely deep nesting\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ planning failures ‚Ä∫ should handle context initialization failures\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle level coordination failures\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle vertical nesting failures\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ execution coordination failures ‚Ä∫ should handle horizontal scaling failures\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle context transformation errors\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ fractal orchestration error handling ‚Ä∫ context propagation failures ‚Ä∫ should handle consistency validation failures\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle invalid node ID formats\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle memory constraints\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ context building failures ‚Ä∫ should handle concurrent context operations conflicts\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle permission validation errors\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ access control failures ‚Ä∫ should handle circular reference detection failures\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ context access error handling ‚Ä∫ scope management failures ‚Ä∫ should handle scope isolation violations\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should handle workflow -> action -> context failure cascade\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ cascading failure recovery ‚Ä∫ should maintain system stability under high error rates\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should clean up resources after workflow failure\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ resource cleanup after errors ‚Ä∫ should prevent memory leaks in long-running error scenarios\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n\n  ‚óè Error Handling and Recovery Patterns - UC-005 ‚Ä∫ integrated error recovery scenarios ‚Ä∫ service coordination error handling ‚Ä∫ should handle inter-service communication failures\n\n    Invalid node ID: Invalid node ID\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m     \n     \u001b[90m 238 |\u001b[39m     \u001b[36mif\u001b[39m (nodeIdResult\u001b[33m.\u001b[39misFailure) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Invalid node ID: ${nodeIdResult.error}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m     }\n     \u001b[90m 241 |\u001b[39m     \n     \u001b[90m 242 |\u001b[39m     \u001b[36mif\u001b[39m (positionResult\u001b[33m.\u001b[39misFailure) {\u001b[0m\n\n      at IONodeBuilder.build (tests/utils/test-fixtures.ts:239:13)\n      at Object.build [as createCompleteWorkflow] (tests/utils/test-fixtures.ts:869:8)\n      at Object.createCompleteWorkflow (tests/unit/domain/services/error-handling-recovery-patterns.test.ts:84:31)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\error-handling-recovery-patterns.test.ts","startTime":1756394051924,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Clean Architecture Compliance - UC-005","dependency inversion principle compliance","service dependency injection"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 dependency inversion principle compliance service dependency injection should inject dependencies through constructor (not service locator)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053454,"status":"passed","title":"should inject dependencies through constructor (not service locator)"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","dependency inversion principle compliance","service dependency injection"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 dependency inversion principle compliance service dependency injection should not instantiate dependencies internally","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394053464,"status":"passed","title":"should not instantiate dependencies internally"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","dependency inversion principle compliance","service dependency injection"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 dependency inversion principle compliance service dependency injection should depend on abstractions, not concretions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053469,"status":"passed","title":"should depend on abstractions, not concretions"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","dependency inversion principle compliance","no reverse dependencies"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 dependency inversion principle compliance no reverse dependencies should not import infrastructure or framework code","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053471,"status":"passed","title":"should not import infrastructure or framework code"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","dependency inversion principle compliance","no reverse dependencies"],"duration":122,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 dependency inversion principle compliance no reverse dependencies should not directly access external systems","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053473,"status":"passed","title":"should not directly access external systems"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","dependency inversion principle compliance","no reverse dependencies"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 dependency inversion principle compliance no reverse dependencies should not contain framework-specific code","invocations":1,"location":null,"numPassingAsserts":30,"retryReasons":[],"startAt":1756394053595,"status":"passed","title":"should not contain framework-specific code"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","result pattern compliance","consistent result pattern usage"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 result pattern compliance consistent result pattern usage should return Result objects from all public methods","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053600,"status":"passed","title":"should return Result objects from all public methods"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","result pattern compliance","consistent result pattern usage"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 result pattern compliance consistent result pattern usage should not throw exceptions for business logic failures","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394053611,"status":"passed","title":"should not throw exceptions for business logic failures"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","result pattern compliance","consistent result pattern usage"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 result pattern compliance consistent result pattern usage should provide meaningful error messages in failure Results","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053612,"status":"passed","title":"should provide meaningful error messages in failure Results"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","result pattern compliance","error propagation through Result pattern"],"duration":103,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of null (reading 'length')\n    at ActionNodeOrchestrationService.length [as optimizeActionOrder] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\lib\\domain\\services\\action-node-orchestration-service.ts:183:17)\n    at optimizeActionOrder (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:237:59)\n    at Object.<anonymous> (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\expect@30.0.5\\node_modules\\expect\\build\\index.js:1824:9)\n    at Object.throwingMatcher [as toThrow] (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\expect@30.0.5\\node_modules\\expect\\build\\index.js:2235:93)\n    at Object.toThrow (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:239:16)"],"fullName":"Clean Architecture Compliance - UC-005 result pattern compliance error propagation through Result pattern should propagate errors through Result chains without exceptions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053614,"status":"failed","title":"should propagate errors through Result chains without exceptions"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","result pattern compliance","error propagation through Result pattern"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 result pattern compliance error propagation through Result pattern should maintain Result pattern consistency in nested operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053750,"status":"passed","title":"should maintain Result pattern consistency in nested operations"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","layer separation compliance","domain layer purity"],"duration":113,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 layer separation compliance domain layer purity should contain only business logic in domain services","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394053765,"status":"passed","title":"should contain only business logic in domain services"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","layer separation compliance","domain layer purity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 layer separation compliance domain layer purity should not contain persistence logic","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053878,"status":"passed","title":"should not contain persistence logic"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","layer separation compliance","domain layer purity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 layer separation compliance domain layer purity should not contain UI or presentation logic","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053880,"status":"passed","title":"should not contain UI or presentation logic"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","layer separation compliance","business rule encapsulation"],"duration":130,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 layer separation compliance business rule encapsulation should encapsulate workflow orchestration rules","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053882,"status":"passed","title":"should encapsulate workflow orchestration rules"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","layer separation compliance","business rule encapsulation"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveProperty(path)\n\nExpected path: \"granted\"\nReceived path: []\n\nReceived value: {\"accessLevel\": \"read\", \"isValid\": false, \"reason\": \"Target context not found\"}","pass":false}}],"failureMessages":["Error: expect(received).toHaveProperty(path)\n\nExpected path: \"granted\"\nReceived path: []\n\nReceived value: {\"accessLevel\": \"read\", \"isValid\": false, \"reason\": \"Target context not found\"}\n    at Object.toHaveProperty (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:427:36)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Clean Architecture Compliance - UC-005 layer separation compliance business rule encapsulation should enforce context access rules","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054013,"status":"failed","title":"should enforce context access rules"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","layer separation compliance","business rule encapsulation"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveProperty(path, value)\n\nExpected path: \"executedActions\"\nReceived path: []\n\nExpected value: 0\nReceived value: []","pass":false}}],"failureMessages":["Error: expect(received).toHaveProperty(path, value)\n\nExpected path: \"executedActions\"\nReceived path: []\n\nExpected value: 0\nReceived value: []\n    at Object.toHaveProperty (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:451:38)"],"fullName":"Clean Architecture Compliance - UC-005 layer separation compliance business rule encapsulation should enforce execution mode rules","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394054021,"status":"failed","title":"should enforce execution mode rules"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","interface segregation compliance","focused service interfaces"],"duration":2,"failing":false,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:485:90)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:473:18)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Clean Architecture Compliance - UC-005 interface segregation compliance focused service interfaces should have cohesive method groupings","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054022,"status":"failed","title":"should have cohesive method groupings"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","interface segregation compliance","focused service interfaces"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 interface segregation compliance focused service interfaces should not mix unrelated concerns","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054024,"status":"passed","title":"should not mix unrelated concerns"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","interface segregation compliance","minimal interface dependencies"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 interface segregation compliance minimal interface dependencies should require minimal dependencies for operation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054026,"status":"passed","title":"should require minimal dependencies for operation"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","single responsibility principle compliance","service responsibility boundaries"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"actual":10,"expected":15,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 15\nReceived: 10","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 15\nReceived: 10\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:562:47)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Clean Architecture Compliance - UC-005 single responsibility principle compliance service responsibility boundaries WorkflowOrchestrationService should only handle workflow execution","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054027,"status":"failed","title":"WorkflowOrchestrationService should only handle workflow execution"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","single responsibility principle compliance","service responsibility boundaries"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":6,"expected":13,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 13\nReceived: 6","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 13\nReceived: 6\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:583:48)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Clean Architecture Compliance - UC-005 single responsibility principle compliance service responsibility boundaries ActionNodeExecutionService should only handle individual action execution","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054029,"status":"failed","title":"ActionNodeExecutionService should only handle individual action execution"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","single responsibility principle compliance","service responsibility boundaries"],"duration":0,"failing":false,"failureDetails":[{"matcherResult":{"actual":10,"expected":33,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 33\nReceived: 10","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 33\nReceived: 10\n    at Object.toBe (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:604:46)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Clean Architecture Compliance - UC-005 single responsibility principle compliance service responsibility boundaries NodeContextAccessService should only handle context management","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394054030,"status":"failed","title":"NodeContextAccessService should only handle context management"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","architectural boundary enforcement","no direct external dependencies"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 architectural boundary enforcement no direct external dependencies should not directly access file system","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394054031,"status":"passed","title":"should not directly access file system"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","architectural boundary enforcement","no direct external dependencies"],"duration":1,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).not.toMatch(expected)\n\nExpected pattern: not /http\\.|https\\.|fetch|axios|request/\nReceived string:      \"class NodeContextAccessService {\n    /**\r\n   * Register a node in the context access system\r\n   */ registerNode(nodeId, nodeType, parentNodeId, contextData, hierarchyLevel) {\n        const nodeIdStr = nodeId.value;\n        const nodeContext = {\n            nodeId,\n            nodeType,\n            parentNodeId,\n            contextData: {\n                ...contextData\n            },\n            accessLevel: \\\"read\\\",\n            hierarchyLevel\n        };\n        this.nodeHierarchy.set(nodeIdStr, nodeContext);\n        // Update parent-child relations\n        if (parentNodeId) {\n            const parentIdStr = parentNodeId.value;\n            const children = this.parentChildRelations.get(parentIdStr) || [];\n            children.push(nodeIdStr);\n            this.parentChildRelations.set(parentIdStr, children);\n            // Update sibling groups\n            this.updateSiblingGroups(parentIdStr, nodeIdStr);\n        }\n        return _result.Result.ok(undefined);\n    }\n    /**\r\n   * Get accessible contexts for a given node based on hierarchical access patterns\r\n   */ getAccessibleContexts(requestingNodeId) {\n        const nodeIdStr = requestingNodeId.value;\n        const requestingNode = this.nodeHierarchy.get(nodeIdStr);\n        if (!requestingNode) {\n            return _result.Result.fail(\\\"Node not found in context system\\\");\n        }\n        const accessibleContexts = [];\n        // 1. Sibling Access - Read-only context sharing between nodes at same hierarchical level\n        const siblingAccess = this.getSiblingContexts(requestingNode);\n        accessibleContexts.push(...siblingAccess);\n        // 2. Child Access - Parents have write access to all their children\n        if (this.hasChildren(requestingNode)) {\n            const childAccess = this.getChildAccessContexts(requestingNode);\n            accessibleContexts.push(...childAccess);\n        }\n        // 3. Parent Access - Children have read access to their parents\n        if (requestingNode.parentNodeId) {\n            const parentAccess = this.getParentContexts(requestingNode);\n            accessibleContexts.push(...parentAccess);\n        }\n        // 4. Uncle/Aunt Access - Read-only lateral access for root cause analysis\n        const uncleAuntAccess = this.getUncleAuntContexts(requestingNode);\n        accessibleContexts.push(...uncleAuntAccess);\n        // 5. Deep Nesting - Cascading access through multi-level function model hierarchy\n        const deepNestingAccess = this.getDeepNestingContexts(requestingNode);\n        accessibleContexts.push(...deepNestingAccess);\n        return _result.Result.ok(accessibleContexts);\n    }\n    /**\r\n   * Get context for a node by nodeId (for testing and simple access)\r\n   */ getNodeContext(nodeId) {\n        for (const context of this.contexts.values()){\n            if (context.nodeId.equals(nodeId)) {\n                return _result.Result.ok(context);\n            }\n        }\n        return _result.Result.fail(\\\"Context not found for node\\\");\n    }\n    /**\r\n   * Get specific context data for a node with access validation\r\n   */ getNodeContextWithAccess(requestingNodeId, targetNodeId, requestedAccess = \\\"read\\\") {\n        const targetContext = this.nodeHierarchy.get(targetNodeId.value);\n        if (!targetContext) {\n            return _result.Result.fail(\\\"Access denied: Target node not found\\\");\n        }\n        // Allow self-access - a node can always access its own context\n        if (requestingNodeId.equals(targetNodeId)) {\n            return _result.Result.ok({\n                ...targetContext,\n                contextData: {\n                    ...targetContext.contextData\n                }\n            });\n        }\n        const accessResult = this.validateAccess(requestingNodeId, targetNodeId, requestedAccess);\n        if (accessResult.isFailure) {\n            return _result.Result.fail(accessResult.error);\n        }\n        return _result.Result.ok({\n            ...targetContext,\n            contextData: {\n                ...targetContext.contextData\n            }\n        });\n    }\n    /**\r\n   * Update context data for a node (with write permission validation)\r\n   */ updateNodeContext(updatingNodeId, targetNodeId, newContextData) {\n        const targetContext = this.nodeHierarchy.get(targetNodeId.value);\n        if (!targetContext) {\n            return _result.Result.fail(\\\"Access denied: Target node not found\\\");\n        }\n        // Allow self-update - a node can always update its own context\n        if (updatingNodeId.equals(targetNodeId)) {\n            targetContext.contextData = {\n                ...newContextData\n            };\n            this.nodeHierarchy.set(targetNodeId.value, targetContext);\n            return _result.Result.ok(undefined);\n        }\n        const accessResult = this.validateAccess(updatingNodeId, targetNodeId, \\\"write\\\");\n        if (accessResult.isFailure) {\n            return _result.Result.fail(accessResult.error);\n        }\n        targetContext.contextData = {\n            ...newContextData\n        };\n        this.nodeHierarchy.set(targetNodeId.value, targetContext);\n        return _result.Result.ok(undefined);\n    }\n    /**\r\n   * Extract action node specific context based on type\r\n   */ extractActionNodeContext(actionNode) {\n        const baseContext = {\n            actionId: actionNode.actionId?.value || \\\"unknown\\\",\n            name: actionNode.name,\n            description: actionNode.description,\n            executionMode: actionNode.executionMode,\n            status: actionNode.status,\n            priority: actionNode.priority,\n            raci: actionNode.raci\n        };\n        // Type-specific context extraction\n        if (actionNode instanceof _tethernode.TetherNode) {\n            const tetherNode = actionNode;\n            const config = tetherNode.tetherData;\n            return {\n                ...baseContext,\n                type: \\\"TetherNode\\\",\n                tetherReferenceId: config.tetherReferenceId,\n                executionParameters: config.executionParameters,\n                outputMapping: config.outputMapping,\n                resourceRequirements: config.resourceRequirements,\n                integrationConfig: config.integrationConfig\n            };\n        }\n        if (actionNode instanceof _kbnode.KBNode) {\n            const kbNode = actionNode;\n            const config = kbNode.kbData;\n            return {\n                ...baseContext,\n                type: \\\"KBNode\\\",\n                kbReferenceId: config.kbReferenceId,\n                shortDescription: config.shortDescription,\n                documentationContext: config.documentationContext,\n                searchKeywords: config.searchKeywords,\n                accessPermissions: config.accessPermissions\n            };\n        }\n        if (actionNode instanceof _functionmodelcontainernode.FunctionModelContainerNode) {\n            const containerData = actionNode.containerData;\n            return {\n                ...baseContext,\n                type: \\\"FunctionModelContainer\\\",\n                nestedModelId: containerData?.nestedModelId,\n                contextMapping: containerData?.contextMapping,\n                outputExtraction: containerData?.outputExtraction,\n                executionPolicy: containerData?.executionPolicy,\n                orchestrationMode: containerData?.orchestrationMode\n            };\n        }\n        return baseContext;\n    }\n    getSiblingContexts(requestingNode) {\n        const results = [];\n        if (!requestingNode.parentNodeId) return results;\n        const siblings = this.siblingGroups.get(requestingNode.parentNodeId.value) || [];\n        for (const siblingIdStr of siblings){\n            if (siblingIdStr === requestingNode.nodeId.value) continue;\n            const siblingContext = this.nodeHierarchy.get(siblingIdStr);\n            if (siblingContext) {\n                results.push({\n                    context: siblingContext,\n                    accessGranted: true,\n                    accessReason: \\\"Sibling read-only access pattern\\\"\n                });\n            }\n        }\n        return results;\n    }\n    getChildAccessContexts(requestingNode) {\n        const results = [];\n        const children = this.parentChildRelations.get(requestingNode.nodeId.value) || [];\n        for (const childIdStr of children){\n            const childContext = this.nodeHierarchy.get(childIdStr);\n            if (childContext) {\n                // Parent has write access to all child contexts\n                results.push({\n                    context: {\n                        ...childContext,\n                        accessLevel: \\\"write\\\"\n                    },\n                    accessGranted: true,\n                    accessReason: \\\"Parent write access to child context\\\"\n                });\n                // Include all descendants with write access\n                const descendants = this.getAllDescendants(childIdStr);\n                for (const descendantId of descendants){\n                    const descendantContext = this.nodeHierarchy.get(descendantId);\n                    if (descendantContext) {\n                        results.push({\n                            context: {\n                                ...descendantContext,\n                                accessLevel: \\\"write\\\"\n                            },\n                            accessGranted: true,\n                            accessReason: \\\"Parent hierarchical write access to descendant\\\"\n                        });\n                    }\n                }\n            }\n        }\n        return results;\n    }\n    getParentContexts(requestingNode) {\n        const results = [];\n        if (!requestingNode.parentNodeId) return results;\n        const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);\n        if (parentContext) {\n            results.push({\n                context: {\n                    ...parentContext,\n                    accessLevel: \\\"read\\\"\n                },\n                accessGranted: true,\n                accessReason: \\\"Child read access to parent context\\\"\n            });\n        }\n        return results;\n    }\n    getUncleAuntContexts(requestingNode) {\n        const results = [];\n        if (!requestingNode.parentNodeId) return results;\n        const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);\n        if (!parentContext?.parentNodeId) return results;\n        // Get parent's siblings (uncles/aunts)\n        const uncleAunts = this.siblingGroups.get(parentContext.parentNodeId.value) || [];\n        for (const uncleAuntId of uncleAunts){\n            if (uncleAuntId === requestingNode.parentNodeId.value) continue;\n            const uncleAuntContext = this.nodeHierarchy.get(uncleAuntId);\n            if (uncleAuntContext) {\n                results.push({\n                    context: uncleAuntContext,\n                    accessGranted: true,\n                    accessReason: \\\"Uncle/Aunt lateral read-only access for root cause analysis\\\"\n                });\n            }\n        }\n        return results;\n    }\n    getDeepNestingContexts(requestingNode) {\n        const results = [];\n        // For deep nesting, traverse up the hierarchy and apply cascading access\n        let currentNodeId = requestingNode.parentNodeId?.value;\n        let nestingLevel = 1;\n        while(currentNodeId && nestingLevel <= 10){\n            const currentContext = this.nodeHierarchy.get(currentNodeId);\n            if (!currentContext) break;\n            results.push({\n                context: {\n                    ...currentContext,\n                    accessLevel: nestingLevel <= 2 ? \\\"write\\\" : \\\"read\\\"\n                },\n                accessGranted: true,\n                accessReason: `Deep nesting level ${nestingLevel} - ${nestingLevel <= 2 ? \\\"write\\\" : \\\"read\\\"} access`\n            });\n            currentNodeId = currentContext.parentNodeId?.value;\n            nestingLevel++;\n        }\n        return results;\n    }\n    validateAccess(requestingNodeId, targetNodeId, requestedAccess) {\n        const accessibleContexts = this.getAccessibleContexts(requestingNodeId);\n        if (accessibleContexts.isFailure) {\n            return _result.Result.fail(accessibleContexts.error);\n        }\n        const targetAccess = accessibleContexts.value.find((access)=>access.context.nodeId.equals(targetNodeId));\n        if (!targetAccess || !targetAccess.accessGranted) {\n            return _result.Result.fail(\\\"Access denied: Node not in accessible context hierarchy\\\");\n        }\n        // Validate access level\n        const contextAccessLevel = targetAccess.context.accessLevel;\n        const accessLevels = [\n            \\\"read\\\",\n            \\\"write\\\",\n            \\\"execute\\\"\n        ];\n        const requiredLevel = accessLevels.indexOf(requestedAccess);\n        const availableLevel = accessLevels.indexOf(contextAccessLevel);\n        if (availableLevel < requiredLevel) {\n            return _result.Result.fail(`Access denied: Required ${requestedAccess} access, but only ${contextAccessLevel} is available`);\n        }\n        return _result.Result.ok(undefined);\n    }\n    hasChildren(node) {\n        const children = this.parentChildRelations.get(node.nodeId.value);\n        return !!(children && children.length > 0);\n    }\n    updateSiblingGroups(parentIdStr, newChildIdStr) {\n        const existingSiblings = this.siblingGroups.get(parentIdStr) || [];\n        existingSiblings.push(newChildIdStr);\n        this.siblingGroups.set(parentIdStr, existingSiblings);\n    }\n    getAllDescendants(nodeId) {\n        const children = this.parentChildRelations.get(nodeId) || [];\n        let descendants = [\n            ...children\n        ];\n        for (const child of children){\n            descendants = descendants.concat(this.getAllDescendants(child));\n        }\n        return descendants;\n    }\n    /**\r\n   * Set hierarchy relationship between nodes (used for testing)\r\n   */ setHierarchy(childNodeId, parentNodeId) {\n        const children = this.parentChildRelations.get(parentNodeId) || [];\n        if (!children.includes(childNodeId)) {\n            children.push(childNodeId);\n            this.parentChildRelations.set(parentNodeId, children);\n        }\n        // Update sibling groups\n        this.updateSiblingGroups(parentNodeId, childNodeId);\n    }\n    /**\r\n   * Set context data for a specific node (used for testing)\r\n   */ setContextData(nodeId, contextData) {\n        const existingContext = this.nodeHierarchy.get(nodeId);\n        if (existingContext) {\n            // Use the same approach as debugForceSetContext which works\n            this.nodeHierarchy.delete(nodeId);\n            const updatedContext = {\n                ...existingContext,\n                contextData: contextData\n            };\n            this.nodeHierarchy.set(nodeId, updatedContext);\n        }\n    }\n    /**\r\n   * Get all child contexts for a parent node (used for testing)\r\n   */ getChildContexts(parentNodeId) {\n        const children = this.parentChildRelations.get(parentNodeId) || [];\n        const childContexts = [];\n        for (const childId of children){\n            const childContext = this.nodeHierarchy.get(childId);\n            if (childContext && childContext.contextData) {\n                childContexts.push(childContext.contextData);\n            }\n        }\n        return childContexts;\n    }\n    /**\r\n   * Debug method to check parent-child relationships (used for testing)\r\n   */ getParentChildRelations() {\n        return new Map(this.parentChildRelations);\n    }\n    /**\r\n   * Debug method to check if a node has children (used for testing)\r\n   */ debugHasChildren(nodeId) {\n        const children = this.parentChildRelations.get(nodeId);\n        return !!(children && children.length > 0);\n    }\n    /**\r\n   * Get deep nested contexts across multiple model levels (used for testing)\r\n   */ getDeepNestedContext(sourceModelId, targetModelId) {\n        // Find nodes related to the source model that might have nested contexts\n        const nestedContexts = [];\n        // Search through node hierarchy for contexts referencing target model\n        for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){\n            // Check if this node's context references the target model\n            // Check if this node's context data has references to the target model\n            if (nodeContext.contextData && this.hasNestedModelReferences(nodeContext.contextData, targetModelId)) {\n                // Found matching context\n                nestedContexts.push(nodeContext.contextData);\n            } else if (nodeContext.contextData) {\n            // No match in this node's context\n            }\n        }\n        // Return all found contexts\n        return nestedContexts;\n    }\n    /**\r\n   * Debug method to check the current state of the service\r\n   */ debugState() {\n        const nodes = [];\n        for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){\n            nodes.push({\n                nodeId,\n                nodeType: nodeContext.nodeType,\n                hasContextData: !!nodeContext.contextData,\n                contextKeys: nodeContext.contextData ? Object.keys(nodeContext.contextData) : [],\n                contextDataType: typeof nodeContext.contextData,\n                contextData: nodeContext.contextData\n            });\n        }\n        return {\n            nodeCount: this.nodeHierarchy.size,\n            nodes\n        };\n    }\n    /**\r\n   * Test method to directly manipulate the hierarchy for debugging\r\n   */ debugForceSetContext(nodeId, contextData) {\n        // Direct map manipulation\n        const existing = this.nodeHierarchy.get(nodeId);\n        if (!existing) return false;\n        // Force set context data for testing purposes\n        // Completely replace the object in the map\n        this.nodeHierarchy.delete(nodeId);\n        const newContext = {\n            ...existing,\n            contextData: contextData\n        };\n        // Context created successfully\n        this.nodeHierarchy.set(nodeId, newContext);\n        // Verify it was set\n        const verify = this.nodeHierarchy.get(nodeId);\n        // Context verification complete\n        return true;\n    }\n    /**\r\n   * Build context for a node with optional parent context inheritance\r\n   */ buildContext(nodeId, data, scope, parentContextId) {\n        try {\n            // Validate input data\n            if (data === null || data === undefined) {\n                return _result.Result.fail(\\\"Invalid context data: data cannot be null or undefined\\\");\n            }\n            if (typeof data !== \\\"object\\\") {\n                return _result.Result.fail(\\\"Invalid context data: data must be an object\\\");\n            }\n            const contextId = `ctx-${++this.contextCounter}-${nodeId.value.slice(-8)}`;\n            let inheritedData = {};\n            if (parentContextId) {\n                const parentContext = this.contexts.get(parentContextId);\n                if (parentContext) {\n                    inheritedData = {\n                        ...parentContext.data\n                    };\n                }\n            }\n            const accessLevel = scope === \\\"isolated\\\" ? \\\"read\\\" : \\\"read-write\\\";\n            const context = {\n                contextId,\n                nodeId,\n                scope,\n                data: {\n                    ...data\n                },\n                inheritedData: Object.keys(inheritedData).length > 0 ? inheritedData : undefined,\n                accessLevel,\n                parentContextId: parentContextId || null\n            };\n            this.contexts.set(contextId, context);\n            return _result.Result.ok(context);\n        } catch (error) {\n            return _result.Result.fail(`Failed to build context: ${error}`);\n        }\n    }\n    /**\r\n   * Update context data for the specified context ID\r\n   */ updateNodeContext(contextId, updateData, mergeMode = \\\"merge\\\") {\n        const context = this.contexts.get(contextId);\n        if (!context) {\n            return _result.Result.fail(\\\"Context not found\\\");\n        }\n        let updatedData;\n        if (mergeMode === \\\"merge\\\") {\n            updatedData = {\n                ...context.data,\n                ...updateData\n            };\n        } else {\n            updatedData = {\n                ...updateData\n            };\n        }\n        const updatedContext = {\n            ...context,\n            data: updatedData\n        };\n        this.contexts.set(contextId, updatedContext);\n        return _result.Result.ok(updatedContext);\n    }\n    /**\r\n   * Clear node context and all child contexts\r\n   */ clearNodeContext(nodeId) {\n        const contextsToRemove = [];\n        // Find contexts for this node\n        for (const [contextId, context] of this.contexts.entries()){\n            if (context.nodeId.equals(nodeId)) {\n                contextsToRemove.push(contextId);\n                // Also find child contexts\n                for (const [childId, childContext] of this.contexts.entries()){\n                    if (childContext.parentContextId === contextId) {\n                        contextsToRemove.push(childId);\n                    }\n                }\n            }\n        }\n        // Remove contexts\n        contextsToRemove.forEach((id)=>this.contexts.delete(id));\n        return _result.Result.ok(undefined);\n    }\n    /**\r\n   * Propagate context from source to target with inheritance rules\r\n   */ propagateContext(sourceContextId, targetNodeId, inheritanceRules) {\n        const sourceContext = this.contexts.get(sourceContextId);\n        if (!sourceContext) {\n            return _result.Result.fail(\\\"Source context not found\\\");\n        }\n        const propagatedData = {};\n        for (const rule of inheritanceRules){\n            const sourceValue = sourceContext.data[rule.propertyName];\n            if (sourceValue !== undefined) {\n                switch(rule.inheritanceType){\n                    case \\\"inherit\\\":\n                        propagatedData[rule.propertyName] = sourceValue;\n                        break;\n                    case \\\"override\\\":\n                        propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;\n                        break;\n                    case \\\"merge\\\":\n                        if (typeof sourceValue === \\\"object\\\" && sourceValue !== null) {\n                            propagatedData[rule.propertyName] = {\n                                ...sourceValue,\n                                ...rule.defaultValue || {}\n                            };\n                        } else {\n                            propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;\n                        }\n                        break;\n                }\n            } else if (rule.defaultValue !== undefined) {\n                propagatedData[rule.propertyName] = rule.defaultValue;\n            }\n        }\n        return this.buildContext(targetNodeId, propagatedData, sourceContext.scope, sourceContextId);\n    }\n    /**\r\n   * Get hierarchical context including parent chain\r\n   */ getHierarchicalContext(nodeId) {\n        // Find context for this node\n        let nodeContext;\n        for (const context of this.contexts.values()){\n            if (context.nodeId.equals(nodeId)) {\n                nodeContext = context;\n                break;\n            }\n        }\n        if (!nodeContext) {\n            return _result.Result.fail(\\\"Node context not found\\\");\n        }\n        // Find child contexts\n        const childContextIds = [];\n        for (const [contextId, context] of this.contexts.entries()){\n            if (context.parentContextId === nodeContext.contextId) {\n                childContextIds.push(contextId);\n            }\n        }\n        const hierarchicalContext = {\n            ...nodeContext,\n            childContextIds,\n            timestamp: new Date().toISOString()\n        };\n        return _result.Result.ok(hierarchicalContext);\n    }\n    /**\r\n   * Validate context access permissions\r\n   */ validateContextAccess(requestingNodeId, targetContextId, requestedAccess) {\n        const targetContext = this.contexts.get(targetContextId);\n        if (!targetContext) {\n            return _result.Result.ok({\n                isValid: false,\n                reason: \\\"Target context not found\\\",\n                accessLevel: \\\"read\\\"\n            });\n        }\n        // Self-access is always allowed\n        if (targetContext.nodeId.equals(requestingNodeId)) {\n            return _result.Result.ok({\n                isValid: true,\n                reason: \\\"Self-access granted\\\",\n                accessLevel: targetContext.accessLevel\n            });\n        }\n        // Check if requesting node has access based on hierarchy\n        const hasAccess = this.checkHierarchicalAccess(requestingNodeId, targetContext);\n        const accessLevel = hasAccess ? targetContext.accessLevel : \\\"read\\\";\n        const canAccess = this.validateAccessLevel(requestedAccess, accessLevel);\n        return _result.Result.ok({\n            isValid: canAccess,\n            reason: canAccess ? \\\"Hierarchical access granted\\\" : \\\"Insufficient permissions\\\",\n            accessLevel\n        });\n    }\n    /**\r\n   * Clone context scope to new node\r\n   */ cloneContextScope(sourceContextId, targetNodeId, newScope, transformationRules) {\n        const sourceContext = this.contexts.get(sourceContextId);\n        if (!sourceContext) {\n            return _result.Result.fail(\\\"Source context not found\\\");\n        }\n        let clonedData = {\n            ...sourceContext.data\n        };\n        // Apply transformation rules if provided\n        if (transformationRules) {\n            for (const rule of transformationRules){\n                if (rule.inheritanceType === \\\"override\\\" && rule.defaultValue !== undefined) {\n                    clonedData[rule.propertyName] = rule.defaultValue;\n                }\n            }\n        }\n        return this.buildContext(targetNodeId, clonedData, newScope);\n    }\n    /**\r\n   * Merge multiple context scopes\r\n   */ mergeContextScopes(sourceContextIds, targetNodeId, targetScope, precedenceRules) {\n        if (sourceContextIds.length === 0) {\n            return this.buildContext(targetNodeId, {}, targetScope);\n        }\n        const sourceContexts = sourceContextIds.map((id)=>this.contexts.get(id)).filter((ctx)=>ctx !== undefined);\n        if (sourceContexts.length === 0) {\n            return _result.Result.fail(\\\"No valid source contexts found\\\");\n        }\n        // Merge data with precedence rules\n        const mergedData = {};\n        if (precedenceRules) {\n            const priorityMap = new Map(precedenceRules.map((rule)=>[\n                    rule.contextId,\n                    rule.priority\n                ]));\n            const sortedContexts = sourceContexts.sort((a, b)=>{\n                const priorityA = priorityMap.get(a.contextId) ?? 0;\n                const priorityB = priorityMap.get(b.contextId) ?? 0;\n                return priorityB - priorityA; // Higher priority first\n            });\n            for (const context of sortedContexts.reverse()){\n                Object.assign(mergedData, context.data);\n            }\n        } else {\n            // Simple merge without precedence\n            for (const context of sourceContexts){\n                Object.assign(mergedData, context.data);\n            }\n        }\n        return this.buildContext(targetNodeId, mergedData, targetScope);\n    }\n    checkHierarchicalAccess(requestingNodeId, targetContext) {\n        // Check parent-child relationships\n        const accessibleContexts = this.getAccessibleContexts(requestingNodeId);\n        if (accessibleContexts.isFailure) return false;\n        return accessibleContexts.value.some((access)=>access.context.nodeId.equals(targetContext.nodeId) && access.accessGranted);\n    }\n    validateAccessLevel(requested, available) {\n        const levels = {\n            \\\"read\\\": 1,\n            \\\"write\\\": 2,\n            \\\"read-write\\\": 2,\n            \\\"execute\\\": 3\n        };\n        return levels[requested] <= levels[available];\n    }\n    /**\r\n   * Check if context data contains references to a nested model\r\n   */ hasNestedModelReferences(contextData, targetModelId) {\n        // Check various possible locations where nested model references might exist\n        // Check various possible locations where nested model references might exist\n        // Check direct nestedModelId reference\n        if (contextData.nestedModelId === targetModelId) {\n            return true;\n        }\n        // Check in execution memory parent models array\n        if (contextData.executionMemory && contextData.executionMemory.parentModels) {\n            if (Array.isArray(contextData.executionMemory.parentModels) && contextData.executionMemory.parentModels.includes(targetModelId)) {\n                return true;\n            }\n        }\n        // Check in nested model outputs (for FunctionModelContainerContext)\n        if (contextData.nestedModelOutputs) {\n            if (contextData.nestedModelOutputs[targetModelId]) {\n                return true;\n            }\n        }\n        // Check in orchestration state nested models\n        if (contextData.orchestrationState && contextData.orchestrationState.nestedModels) {\n            if (Array.isArray(contextData.orchestrationState.nestedModels) && contextData.orchestrationState.nestedModels.includes(targetModelId)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    constructor(){\n        this.nodeHierarchy = new Map();\n        this.parentChildRelations = new Map();\n        this.siblingGroups = new Map();\n        this.contexts = new Map();\n        this.contextCounter = 0;\n    }\n}\"","pass":true}}],"failureMessages":["Error: expect(received).not.toMatch(expected)\n\nExpected pattern: not /http\\.|https\\.|fetch|axios|request/\nReceived string:      \"class NodeContextAccessService {\n    /**\r\n   * Register a node in the context access system\r\n   */ registerNode(nodeId, nodeType, parentNodeId, contextData, hierarchyLevel) {\n        const nodeIdStr = nodeId.value;\n        const nodeContext = {\n            nodeId,\n            nodeType,\n            parentNodeId,\n            contextData: {\n                ...contextData\n            },\n            accessLevel: \\\"read\\\",\n            hierarchyLevel\n        };\n        this.nodeHierarchy.set(nodeIdStr, nodeContext);\n        // Update parent-child relations\n        if (parentNodeId) {\n            const parentIdStr = parentNodeId.value;\n            const children = this.parentChildRelations.get(parentIdStr) || [];\n            children.push(nodeIdStr);\n            this.parentChildRelations.set(parentIdStr, children);\n            // Update sibling groups\n            this.updateSiblingGroups(parentIdStr, nodeIdStr);\n        }\n        return _result.Result.ok(undefined);\n    }\n    /**\r\n   * Get accessible contexts for a given node based on hierarchical access patterns\r\n   */ getAccessibleContexts(requestingNodeId) {\n        const nodeIdStr = requestingNodeId.value;\n        const requestingNode = this.nodeHierarchy.get(nodeIdStr);\n        if (!requestingNode) {\n            return _result.Result.fail(\\\"Node not found in context system\\\");\n        }\n        const accessibleContexts = [];\n        // 1. Sibling Access - Read-only context sharing between nodes at same hierarchical level\n        const siblingAccess = this.getSiblingContexts(requestingNode);\n        accessibleContexts.push(...siblingAccess);\n        // 2. Child Access - Parents have write access to all their children\n        if (this.hasChildren(requestingNode)) {\n            const childAccess = this.getChildAccessContexts(requestingNode);\n            accessibleContexts.push(...childAccess);\n        }\n        // 3. Parent Access - Children have read access to their parents\n        if (requestingNode.parentNodeId) {\n            const parentAccess = this.getParentContexts(requestingNode);\n            accessibleContexts.push(...parentAccess);\n        }\n        // 4. Uncle/Aunt Access - Read-only lateral access for root cause analysis\n        const uncleAuntAccess = this.getUncleAuntContexts(requestingNode);\n        accessibleContexts.push(...uncleAuntAccess);\n        // 5. Deep Nesting - Cascading access through multi-level function model hierarchy\n        const deepNestingAccess = this.getDeepNestingContexts(requestingNode);\n        accessibleContexts.push(...deepNestingAccess);\n        return _result.Result.ok(accessibleContexts);\n    }\n    /**\r\n   * Get context for a node by nodeId (for testing and simple access)\r\n   */ getNodeContext(nodeId) {\n        for (const context of this.contexts.values()){\n            if (context.nodeId.equals(nodeId)) {\n                return _result.Result.ok(context);\n            }\n        }\n        return _result.Result.fail(\\\"Context not found for node\\\");\n    }\n    /**\r\n   * Get specific context data for a node with access validation\r\n   */ getNodeContextWithAccess(requestingNodeId, targetNodeId, requestedAccess = \\\"read\\\") {\n        const targetContext = this.nodeHierarchy.get(targetNodeId.value);\n        if (!targetContext) {\n            return _result.Result.fail(\\\"Access denied: Target node not found\\\");\n        }\n        // Allow self-access - a node can always access its own context\n        if (requestingNodeId.equals(targetNodeId)) {\n            return _result.Result.ok({\n                ...targetContext,\n                contextData: {\n                    ...targetContext.contextData\n                }\n            });\n        }\n        const accessResult = this.validateAccess(requestingNodeId, targetNodeId, requestedAccess);\n        if (accessResult.isFailure) {\n            return _result.Result.fail(accessResult.error);\n        }\n        return _result.Result.ok({\n            ...targetContext,\n            contextData: {\n                ...targetContext.contextData\n            }\n        });\n    }\n    /**\r\n   * Update context data for a node (with write permission validation)\r\n   */ updateNodeContext(updatingNodeId, targetNodeId, newContextData) {\n        const targetContext = this.nodeHierarchy.get(targetNodeId.value);\n        if (!targetContext) {\n            return _result.Result.fail(\\\"Access denied: Target node not found\\\");\n        }\n        // Allow self-update - a node can always update its own context\n        if (updatingNodeId.equals(targetNodeId)) {\n            targetContext.contextData = {\n                ...newContextData\n            };\n            this.nodeHierarchy.set(targetNodeId.value, targetContext);\n            return _result.Result.ok(undefined);\n        }\n        const accessResult = this.validateAccess(updatingNodeId, targetNodeId, \\\"write\\\");\n        if (accessResult.isFailure) {\n            return _result.Result.fail(accessResult.error);\n        }\n        targetContext.contextData = {\n            ...newContextData\n        };\n        this.nodeHierarchy.set(targetNodeId.value, targetContext);\n        return _result.Result.ok(undefined);\n    }\n    /**\r\n   * Extract action node specific context based on type\r\n   */ extractActionNodeContext(actionNode) {\n        const baseContext = {\n            actionId: actionNode.actionId?.value || \\\"unknown\\\",\n            name: actionNode.name,\n            description: actionNode.description,\n            executionMode: actionNode.executionMode,\n            status: actionNode.status,\n            priority: actionNode.priority,\n            raci: actionNode.raci\n        };\n        // Type-specific context extraction\n        if (actionNode instanceof _tethernode.TetherNode) {\n            const tetherNode = actionNode;\n            const config = tetherNode.tetherData;\n            return {\n                ...baseContext,\n                type: \\\"TetherNode\\\",\n                tetherReferenceId: config.tetherReferenceId,\n                executionParameters: config.executionParameters,\n                outputMapping: config.outputMapping,\n                resourceRequirements: config.resourceRequirements,\n                integrationConfig: config.integrationConfig\n            };\n        }\n        if (actionNode instanceof _kbnode.KBNode) {\n            const kbNode = actionNode;\n            const config = kbNode.kbData;\n            return {\n                ...baseContext,\n                type: \\\"KBNode\\\",\n                kbReferenceId: config.kbReferenceId,\n                shortDescription: config.shortDescription,\n                documentationContext: config.documentationContext,\n                searchKeywords: config.searchKeywords,\n                accessPermissions: config.accessPermissions\n            };\n        }\n        if (actionNode instanceof _functionmodelcontainernode.FunctionModelContainerNode) {\n            const containerData = actionNode.containerData;\n            return {\n                ...baseContext,\n                type: \\\"FunctionModelContainer\\\",\n                nestedModelId: containerData?.nestedModelId,\n                contextMapping: containerData?.contextMapping,\n                outputExtraction: containerData?.outputExtraction,\n                executionPolicy: containerData?.executionPolicy,\n                orchestrationMode: containerData?.orchestrationMode\n            };\n        }\n        return baseContext;\n    }\n    getSiblingContexts(requestingNode) {\n        const results = [];\n        if (!requestingNode.parentNodeId) return results;\n        const siblings = this.siblingGroups.get(requestingNode.parentNodeId.value) || [];\n        for (const siblingIdStr of siblings){\n            if (siblingIdStr === requestingNode.nodeId.value) continue;\n            const siblingContext = this.nodeHierarchy.get(siblingIdStr);\n            if (siblingContext) {\n                results.push({\n                    context: siblingContext,\n                    accessGranted: true,\n                    accessReason: \\\"Sibling read-only access pattern\\\"\n                });\n            }\n        }\n        return results;\n    }\n    getChildAccessContexts(requestingNode) {\n        const results = [];\n        const children = this.parentChildRelations.get(requestingNode.nodeId.value) || [];\n        for (const childIdStr of children){\n            const childContext = this.nodeHierarchy.get(childIdStr);\n            if (childContext) {\n                // Parent has write access to all child contexts\n                results.push({\n                    context: {\n                        ...childContext,\n                        accessLevel: \\\"write\\\"\n                    },\n                    accessGranted: true,\n                    accessReason: \\\"Parent write access to child context\\\"\n                });\n                // Include all descendants with write access\n                const descendants = this.getAllDescendants(childIdStr);\n                for (const descendantId of descendants){\n                    const descendantContext = this.nodeHierarchy.get(descendantId);\n                    if (descendantContext) {\n                        results.push({\n                            context: {\n                                ...descendantContext,\n                                accessLevel: \\\"write\\\"\n                            },\n                            accessGranted: true,\n                            accessReason: \\\"Parent hierarchical write access to descendant\\\"\n                        });\n                    }\n                }\n            }\n        }\n        return results;\n    }\n    getParentContexts(requestingNode) {\n        const results = [];\n        if (!requestingNode.parentNodeId) return results;\n        const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);\n        if (parentContext) {\n            results.push({\n                context: {\n                    ...parentContext,\n                    accessLevel: \\\"read\\\"\n                },\n                accessGranted: true,\n                accessReason: \\\"Child read access to parent context\\\"\n            });\n        }\n        return results;\n    }\n    getUncleAuntContexts(requestingNode) {\n        const results = [];\n        if (!requestingNode.parentNodeId) return results;\n        const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);\n        if (!parentContext?.parentNodeId) return results;\n        // Get parent's siblings (uncles/aunts)\n        const uncleAunts = this.siblingGroups.get(parentContext.parentNodeId.value) || [];\n        for (const uncleAuntId of uncleAunts){\n            if (uncleAuntId === requestingNode.parentNodeId.value) continue;\n            const uncleAuntContext = this.nodeHierarchy.get(uncleAuntId);\n            if (uncleAuntContext) {\n                results.push({\n                    context: uncleAuntContext,\n                    accessGranted: true,\n                    accessReason: \\\"Uncle/Aunt lateral read-only access for root cause analysis\\\"\n                });\n            }\n        }\n        return results;\n    }\n    getDeepNestingContexts(requestingNode) {\n        const results = [];\n        // For deep nesting, traverse up the hierarchy and apply cascading access\n        let currentNodeId = requestingNode.parentNodeId?.value;\n        let nestingLevel = 1;\n        while(currentNodeId && nestingLevel <= 10){\n            const currentContext = this.nodeHierarchy.get(currentNodeId);\n            if (!currentContext) break;\n            results.push({\n                context: {\n                    ...currentContext,\n                    accessLevel: nestingLevel <= 2 ? \\\"write\\\" : \\\"read\\\"\n                },\n                accessGranted: true,\n                accessReason: `Deep nesting level ${nestingLevel} - ${nestingLevel <= 2 ? \\\"write\\\" : \\\"read\\\"} access`\n            });\n            currentNodeId = currentContext.parentNodeId?.value;\n            nestingLevel++;\n        }\n        return results;\n    }\n    validateAccess(requestingNodeId, targetNodeId, requestedAccess) {\n        const accessibleContexts = this.getAccessibleContexts(requestingNodeId);\n        if (accessibleContexts.isFailure) {\n            return _result.Result.fail(accessibleContexts.error);\n        }\n        const targetAccess = accessibleContexts.value.find((access)=>access.context.nodeId.equals(targetNodeId));\n        if (!targetAccess || !targetAccess.accessGranted) {\n            return _result.Result.fail(\\\"Access denied: Node not in accessible context hierarchy\\\");\n        }\n        // Validate access level\n        const contextAccessLevel = targetAccess.context.accessLevel;\n        const accessLevels = [\n            \\\"read\\\",\n            \\\"write\\\",\n            \\\"execute\\\"\n        ];\n        const requiredLevel = accessLevels.indexOf(requestedAccess);\n        const availableLevel = accessLevels.indexOf(contextAccessLevel);\n        if (availableLevel < requiredLevel) {\n            return _result.Result.fail(`Access denied: Required ${requestedAccess} access, but only ${contextAccessLevel} is available`);\n        }\n        return _result.Result.ok(undefined);\n    }\n    hasChildren(node) {\n        const children = this.parentChildRelations.get(node.nodeId.value);\n        return !!(children && children.length > 0);\n    }\n    updateSiblingGroups(parentIdStr, newChildIdStr) {\n        const existingSiblings = this.siblingGroups.get(parentIdStr) || [];\n        existingSiblings.push(newChildIdStr);\n        this.siblingGroups.set(parentIdStr, existingSiblings);\n    }\n    getAllDescendants(nodeId) {\n        const children = this.parentChildRelations.get(nodeId) || [];\n        let descendants = [\n            ...children\n        ];\n        for (const child of children){\n            descendants = descendants.concat(this.getAllDescendants(child));\n        }\n        return descendants;\n    }\n    /**\r\n   * Set hierarchy relationship between nodes (used for testing)\r\n   */ setHierarchy(childNodeId, parentNodeId) {\n        const children = this.parentChildRelations.get(parentNodeId) || [];\n        if (!children.includes(childNodeId)) {\n            children.push(childNodeId);\n            this.parentChildRelations.set(parentNodeId, children);\n        }\n        // Update sibling groups\n        this.updateSiblingGroups(parentNodeId, childNodeId);\n    }\n    /**\r\n   * Set context data for a specific node (used for testing)\r\n   */ setContextData(nodeId, contextData) {\n        const existingContext = this.nodeHierarchy.get(nodeId);\n        if (existingContext) {\n            // Use the same approach as debugForceSetContext which works\n            this.nodeHierarchy.delete(nodeId);\n            const updatedContext = {\n                ...existingContext,\n                contextData: contextData\n            };\n            this.nodeHierarchy.set(nodeId, updatedContext);\n        }\n    }\n    /**\r\n   * Get all child contexts for a parent node (used for testing)\r\n   */ getChildContexts(parentNodeId) {\n        const children = this.parentChildRelations.get(parentNodeId) || [];\n        const childContexts = [];\n        for (const childId of children){\n            const childContext = this.nodeHierarchy.get(childId);\n            if (childContext && childContext.contextData) {\n                childContexts.push(childContext.contextData);\n            }\n        }\n        return childContexts;\n    }\n    /**\r\n   * Debug method to check parent-child relationships (used for testing)\r\n   */ getParentChildRelations() {\n        return new Map(this.parentChildRelations);\n    }\n    /**\r\n   * Debug method to check if a node has children (used for testing)\r\n   */ debugHasChildren(nodeId) {\n        const children = this.parentChildRelations.get(nodeId);\n        return !!(children && children.length > 0);\n    }\n    /**\r\n   * Get deep nested contexts across multiple model levels (used for testing)\r\n   */ getDeepNestedContext(sourceModelId, targetModelId) {\n        // Find nodes related to the source model that might have nested contexts\n        const nestedContexts = [];\n        // Search through node hierarchy for contexts referencing target model\n        for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){\n            // Check if this node's context references the target model\n            // Check if this node's context data has references to the target model\n            if (nodeContext.contextData && this.hasNestedModelReferences(nodeContext.contextData, targetModelId)) {\n                // Found matching context\n                nestedContexts.push(nodeContext.contextData);\n            } else if (nodeContext.contextData) {\n            // No match in this node's context\n            }\n        }\n        // Return all found contexts\n        return nestedContexts;\n    }\n    /**\r\n   * Debug method to check the current state of the service\r\n   */ debugState() {\n        const nodes = [];\n        for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){\n            nodes.push({\n                nodeId,\n                nodeType: nodeContext.nodeType,\n                hasContextData: !!nodeContext.contextData,\n                contextKeys: nodeContext.contextData ? Object.keys(nodeContext.contextData) : [],\n                contextDataType: typeof nodeContext.contextData,\n                contextData: nodeContext.contextData\n            });\n        }\n        return {\n            nodeCount: this.nodeHierarchy.size,\n            nodes\n        };\n    }\n    /**\r\n   * Test method to directly manipulate the hierarchy for debugging\r\n   */ debugForceSetContext(nodeId, contextData) {\n        // Direct map manipulation\n        const existing = this.nodeHierarchy.get(nodeId);\n        if (!existing) return false;\n        // Force set context data for testing purposes\n        // Completely replace the object in the map\n        this.nodeHierarchy.delete(nodeId);\n        const newContext = {\n            ...existing,\n            contextData: contextData\n        };\n        // Context created successfully\n        this.nodeHierarchy.set(nodeId, newContext);\n        // Verify it was set\n        const verify = this.nodeHierarchy.get(nodeId);\n        // Context verification complete\n        return true;\n    }\n    /**\r\n   * Build context for a node with optional parent context inheritance\r\n   */ buildContext(nodeId, data, scope, parentContextId) {\n        try {\n            // Validate input data\n            if (data === null || data === undefined) {\n                return _result.Result.fail(\\\"Invalid context data: data cannot be null or undefined\\\");\n            }\n            if (typeof data !== \\\"object\\\") {\n                return _result.Result.fail(\\\"Invalid context data: data must be an object\\\");\n            }\n            const contextId = `ctx-${++this.contextCounter}-${nodeId.value.slice(-8)}`;\n            let inheritedData = {};\n            if (parentContextId) {\n                const parentContext = this.contexts.get(parentContextId);\n                if (parentContext) {\n                    inheritedData = {\n                        ...parentContext.data\n                    };\n                }\n            }\n            const accessLevel = scope === \\\"isolated\\\" ? \\\"read\\\" : \\\"read-write\\\";\n            const context = {\n                contextId,\n                nodeId,\n                scope,\n                data: {\n                    ...data\n                },\n                inheritedData: Object.keys(inheritedData).length > 0 ? inheritedData : undefined,\n                accessLevel,\n                parentContextId: parentContextId || null\n            };\n            this.contexts.set(contextId, context);\n            return _result.Result.ok(context);\n        } catch (error) {\n            return _result.Result.fail(`Failed to build context: ${error}`);\n        }\n    }\n    /**\r\n   * Update context data for the specified context ID\r\n   */ updateNodeContext(contextId, updateData, mergeMode = \\\"merge\\\") {\n        const context = this.contexts.get(contextId);\n        if (!context) {\n            return _result.Result.fail(\\\"Context not found\\\");\n        }\n        let updatedData;\n        if (mergeMode === \\\"merge\\\") {\n            updatedData = {\n                ...context.data,\n                ...updateData\n            };\n        } else {\n            updatedData = {\n                ...updateData\n            };\n        }\n        const updatedContext = {\n            ...context,\n            data: updatedData\n        };\n        this.contexts.set(contextId, updatedContext);\n        return _result.Result.ok(updatedContext);\n    }\n    /**\r\n   * Clear node context and all child contexts\r\n   */ clearNodeContext(nodeId) {\n        const contextsToRemove = [];\n        // Find contexts for this node\n        for (const [contextId, context] of this.contexts.entries()){\n            if (context.nodeId.equals(nodeId)) {\n                contextsToRemove.push(contextId);\n                // Also find child contexts\n                for (const [childId, childContext] of this.contexts.entries()){\n                    if (childContext.parentContextId === contextId) {\n                        contextsToRemove.push(childId);\n                    }\n                }\n            }\n        }\n        // Remove contexts\n        contextsToRemove.forEach((id)=>this.contexts.delete(id));\n        return _result.Result.ok(undefined);\n    }\n    /**\r\n   * Propagate context from source to target with inheritance rules\r\n   */ propagateContext(sourceContextId, targetNodeId, inheritanceRules) {\n        const sourceContext = this.contexts.get(sourceContextId);\n        if (!sourceContext) {\n            return _result.Result.fail(\\\"Source context not found\\\");\n        }\n        const propagatedData = {};\n        for (const rule of inheritanceRules){\n            const sourceValue = sourceContext.data[rule.propertyName];\n            if (sourceValue !== undefined) {\n                switch(rule.inheritanceType){\n                    case \\\"inherit\\\":\n                        propagatedData[rule.propertyName] = sourceValue;\n                        break;\n                    case \\\"override\\\":\n                        propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;\n                        break;\n                    case \\\"merge\\\":\n                        if (typeof sourceValue === \\\"object\\\" && sourceValue !== null) {\n                            propagatedData[rule.propertyName] = {\n                                ...sourceValue,\n                                ...rule.defaultValue || {}\n                            };\n                        } else {\n                            propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;\n                        }\n                        break;\n                }\n            } else if (rule.defaultValue !== undefined) {\n                propagatedData[rule.propertyName] = rule.defaultValue;\n            }\n        }\n        return this.buildContext(targetNodeId, propagatedData, sourceContext.scope, sourceContextId);\n    }\n    /**\r\n   * Get hierarchical context including parent chain\r\n   */ getHierarchicalContext(nodeId) {\n        // Find context for this node\n        let nodeContext;\n        for (const context of this.contexts.values()){\n            if (context.nodeId.equals(nodeId)) {\n                nodeContext = context;\n                break;\n            }\n        }\n        if (!nodeContext) {\n            return _result.Result.fail(\\\"Node context not found\\\");\n        }\n        // Find child contexts\n        const childContextIds = [];\n        for (const [contextId, context] of this.contexts.entries()){\n            if (context.parentContextId === nodeContext.contextId) {\n                childContextIds.push(contextId);\n            }\n        }\n        const hierarchicalContext = {\n            ...nodeContext,\n            childContextIds,\n            timestamp: new Date().toISOString()\n        };\n        return _result.Result.ok(hierarchicalContext);\n    }\n    /**\r\n   * Validate context access permissions\r\n   */ validateContextAccess(requestingNodeId, targetContextId, requestedAccess) {\n        const targetContext = this.contexts.get(targetContextId);\n        if (!targetContext) {\n            return _result.Result.ok({\n                isValid: false,\n                reason: \\\"Target context not found\\\",\n                accessLevel: \\\"read\\\"\n            });\n        }\n        // Self-access is always allowed\n        if (targetContext.nodeId.equals(requestingNodeId)) {\n            return _result.Result.ok({\n                isValid: true,\n                reason: \\\"Self-access granted\\\",\n                accessLevel: targetContext.accessLevel\n            });\n        }\n        // Check if requesting node has access based on hierarchy\n        const hasAccess = this.checkHierarchicalAccess(requestingNodeId, targetContext);\n        const accessLevel = hasAccess ? targetContext.accessLevel : \\\"read\\\";\n        const canAccess = this.validateAccessLevel(requestedAccess, accessLevel);\n        return _result.Result.ok({\n            isValid: canAccess,\n            reason: canAccess ? \\\"Hierarchical access granted\\\" : \\\"Insufficient permissions\\\",\n            accessLevel\n        });\n    }\n    /**\r\n   * Clone context scope to new node\r\n   */ cloneContextScope(sourceContextId, targetNodeId, newScope, transformationRules) {\n        const sourceContext = this.contexts.get(sourceContextId);\n        if (!sourceContext) {\n            return _result.Result.fail(\\\"Source context not found\\\");\n        }\n        let clonedData = {\n            ...sourceContext.data\n        };\n        // Apply transformation rules if provided\n        if (transformationRules) {\n            for (const rule of transformationRules){\n                if (rule.inheritanceType === \\\"override\\\" && rule.defaultValue !== undefined) {\n                    clonedData[rule.propertyName] = rule.defaultValue;\n                }\n            }\n        }\n        return this.buildContext(targetNodeId, clonedData, newScope);\n    }\n    /**\r\n   * Merge multiple context scopes\r\n   */ mergeContextScopes(sourceContextIds, targetNodeId, targetScope, precedenceRules) {\n        if (sourceContextIds.length === 0) {\n            return this.buildContext(targetNodeId, {}, targetScope);\n        }\n        const sourceContexts = sourceContextIds.map((id)=>this.contexts.get(id)).filter((ctx)=>ctx !== undefined);\n        if (sourceContexts.length === 0) {\n            return _result.Result.fail(\\\"No valid source contexts found\\\");\n        }\n        // Merge data with precedence rules\n        const mergedData = {};\n        if (precedenceRules) {\n            const priorityMap = new Map(precedenceRules.map((rule)=>[\n                    rule.contextId,\n                    rule.priority\n                ]));\n            const sortedContexts = sourceContexts.sort((a, b)=>{\n                const priorityA = priorityMap.get(a.contextId) ?? 0;\n                const priorityB = priorityMap.get(b.contextId) ?? 0;\n                return priorityB - priorityA; // Higher priority first\n            });\n            for (const context of sortedContexts.reverse()){\n                Object.assign(mergedData, context.data);\n            }\n        } else {\n            // Simple merge without precedence\n            for (const context of sourceContexts){\n                Object.assign(mergedData, context.data);\n            }\n        }\n        return this.buildContext(targetNodeId, mergedData, targetScope);\n    }\n    checkHierarchicalAccess(requestingNodeId, targetContext) {\n        // Check parent-child relationships\n        const accessibleContexts = this.getAccessibleContexts(requestingNodeId);\n        if (accessibleContexts.isFailure) return false;\n        return accessibleContexts.value.some((access)=>access.context.nodeId.equals(targetContext.nodeId) && access.accessGranted);\n    }\n    validateAccessLevel(requested, available) {\n        const levels = {\n            \\\"read\\\": 1,\n            \\\"write\\\": 2,\n            \\\"read-write\\\": 2,\n            \\\"execute\\\": 3\n        };\n        return levels[requested] <= levels[available];\n    }\n    /**\r\n   * Check if context data contains references to a nested model\r\n   */ hasNestedModelReferences(contextData, targetModelId) {\n        // Check various possible locations where nested model references might exist\n        // Check various possible locations where nested model references might exist\n        // Check direct nestedModelId reference\n        if (contextData.nestedModelId === targetModelId) {\n            return true;\n        }\n        // Check in execution memory parent models array\n        if (contextData.executionMemory && contextData.executionMemory.parentModels) {\n            if (Array.isArray(contextData.executionMemory.parentModels) && contextData.executionMemory.parentModels.includes(targetModelId)) {\n                return true;\n            }\n        }\n        // Check in nested model outputs (for FunctionModelContainerContext)\n        if (contextData.nestedModelOutputs) {\n            if (contextData.nestedModelOutputs[targetModelId]) {\n                return true;\n            }\n        }\n        // Check in orchestration state nested models\n        if (contextData.orchestrationState && contextData.orchestrationState.nestedModels) {\n            if (Array.isArray(contextData.orchestrationState.nestedModels) && contextData.orchestrationState.nestedModels.includes(targetModelId)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    constructor(){\n        this.nodeHierarchy = new Map();\n        this.parentChildRelations = new Map();\n        this.siblingGroups = new Map();\n        this.contexts = new Map();\n        this.contextCounter = 0;\n    }\n}\"\n    at toMatch (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:630:37)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts:628:18)\n    at Promise.finally.completed (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at _runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-circus@30.0.5\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:275:16)\n    at runTest (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:343:7)\n    at Object.worker (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\node_modules\\.pnpm\\jest-runner@30.0.5\\node_modules\\jest-runner\\build\\testWorker.js:497:12)"],"fullName":"Clean Architecture Compliance - UC-005 architectural boundary enforcement no direct external dependencies should not directly access network resources","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054032,"status":"failed","title":"should not directly access network resources"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","architectural boundary enforcement","no direct external dependencies"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 architectural boundary enforcement no direct external dependencies should not directly access database","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394054034,"status":"passed","title":"should not directly access database"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","architectural boundary enforcement","proper abstraction usage"],"duration":22,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 architectural boundary enforcement proper abstraction usage should use domain abstractions for complex operations","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054036,"status":"passed","title":"should use domain abstractions for complex operations"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","testability and maintainability","deterministic behavior"],"duration":218,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 testability and maintainability deterministic behavior should produce consistent results for same inputs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054058,"status":"passed","title":"should produce consistent results for same inputs"},{"ancestorTitles":["Clean Architecture Compliance - UC-005","testability and maintainability","deterministic behavior"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-005 testability and maintainability deterministic behavior should be testable without external systems","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054276,"status":"passed","title":"should be testable without external systems"}],"endTime":1756394054357,"message":"  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ result pattern compliance ‚Ä∫ error propagation through Result pattern ‚Ä∫ should propagate errors through Result chains without exceptions\n\n    TypeError: Cannot read properties of null (reading 'length')\n\n    \u001b[0m \u001b[90m 181 |\u001b[39m \u001b[90m   */\u001b[39m\n     \u001b[90m 182 |\u001b[39m   \u001b[36mpublic\u001b[39m optimizeActionOrder(actions\u001b[33m:\u001b[39m \u001b[33mActionNode\u001b[39m[])\u001b[33m:\u001b[39m \u001b[33mResult\u001b[39m\u001b[33m<\u001b[39m\u001b[33mActionNode\u001b[39m[]\u001b[33m>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 183 |\u001b[39m     \u001b[36mif\u001b[39m (actions\u001b[33m.\u001b[39mlength \u001b[33m===\u001b[39m \u001b[35m0\u001b[39m) {\n     \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 184 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[33mResult\u001b[39m\u001b[33m.\u001b[39mok\u001b[33m<\u001b[39m\u001b[33mActionNode\u001b[39m[]\u001b[33m>\u001b[39m([])\u001b[33m;\u001b[39m\n     \u001b[90m 185 |\u001b[39m     }\n     \u001b[90m 186 |\u001b[39m\u001b[0m\n\n      at ActionNodeOrchestrationService.length [as optimizeActionOrder] (lib/domain/services/action-node-orchestration-service.ts:183:17)\n      at optimizeActionOrder (tests/unit/domain/services/clean-architecture-compliance.test.ts:237:59)\n      at Object.<anonymous> (node_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js:1824:9)\n      at Object.throwingMatcher [as toThrow] (node_modules/.pnpm/expect@30.0.5/node_modules/expect/build/index.js:2235:93)\n      at Object.toThrow (tests/unit/domain/services/clean-architecture-compliance.test.ts:239:16)\n\n  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ layer separation compliance ‚Ä∫ business rule encapsulation ‚Ä∫ should enforce context access rules\n\n    expect(received).toHaveProperty(path)\n\n    Expected path: \"granted\"\n    Received path: []\n\n    Received value: {\"accessLevel\": \"read\", \"isValid\": false, \"reason\": \"Target context not found\"}\n\n    \u001b[0m \u001b[90m 425 |\u001b[39m         \u001b[90m// Assert - Business rules for access control should be enforced\u001b[39m\n     \u001b[90m 426 |\u001b[39m         expect(accessResult)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 427 |\u001b[39m         expect(accessResult\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'granted'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 428 |\u001b[39m         expect(accessResult\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'level'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 429 |\u001b[39m         expect(accessResult\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'accessibleProperties'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 430 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveProperty (tests/unit/domain/services/clean-architecture-compliance.test.ts:427:36)\n\n  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ layer separation compliance ‚Ä∫ business rule encapsulation ‚Ä∫ should enforce execution mode rules\n\n    expect(received).toHaveProperty(path, value)\n\n    Expected path: \"executedActions\"\n    Received path: []\n\n    Expected value: 0\n    Received value: []\n\n    \u001b[0m \u001b[90m 449 |\u001b[39m         \u001b[90m// Assert - Different execution modes should follow their rules\u001b[39m\n     \u001b[90m 450 |\u001b[39m         expect(parallelResult)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 451 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'executedActions'\u001b[39m\u001b[33m,\u001b[39m \u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 452 |\u001b[39m         expect(parallelResult\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'concurrencyRespected'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 453 |\u001b[39m         \n     \u001b[90m 454 |\u001b[39m         expect(sequentialResult)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveProperty (tests/unit/domain/services/clean-architecture-compliance.test.ts:451:38)\n\n  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ interface segregation compliance ‚Ä∫ focused service interfaces ‚Ä∫ should have cohesive method groupings\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 483 |\u001b[39m               \u001b[36mbreak\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 484 |\u001b[39m             \u001b[36mcase\u001b[39m \u001b[32m'ActionNodeExecutionService'\u001b[39m\u001b[33m:\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 485 |\u001b[39m               expect(methods\u001b[33m.\u001b[39msome(m \u001b[33m=>\u001b[39m m\u001b[33m.\u001b[39mincludes(\u001b[32m'execution'\u001b[39m) \u001b[33m||\u001b[39m m\u001b[33m.\u001b[39mincludes(\u001b[32m'action'\u001b[39m)))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 486 |\u001b[39m               \u001b[36mbreak\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 487 |\u001b[39m             \u001b[36mcase\u001b[39m \u001b[32m'NodeContextAccessService'\u001b[39m\u001b[33m:\u001b[39m\n     \u001b[90m 488 |\u001b[39m               expect(methods\u001b[33m.\u001b[39msome(m \u001b[33m=>\u001b[39m m\u001b[33m.\u001b[39mincludes(\u001b[32m'context'\u001b[39m) \u001b[33m||\u001b[39m m\u001b[33m.\u001b[39mincludes(\u001b[32m'build'\u001b[39m)))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:485:90)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/domain/services/clean-architecture-compliance.test.ts:473:18)\n\n  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ WorkflowOrchestrationService should only handle workflow execution\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 15\n    Received: 10\n\n    \u001b[0m \u001b[90m 560 |\u001b[39m         )\u001b[33m;\u001b[39m\n     \u001b[90m 561 |\u001b[39m         \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 562 |\u001b[39m         expect(workflowRelatedMethods\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(methods\u001b[33m.\u001b[39mlength)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 563 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 564 |\u001b[39m\n     \u001b[90m 565 |\u001b[39m       it(\u001b[32m'ActionNodeExecutionService should only handle individual action execution'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:562:47)\n\n  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ ActionNodeExecutionService should only handle individual action execution\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 13\n    Received: 6\n\n    \u001b[0m \u001b[90m 581 |\u001b[39m         )\u001b[33m;\u001b[39m\n     \u001b[90m 582 |\u001b[39m         \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 583 |\u001b[39m         expect(executionRelatedMethods\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(methods\u001b[33m.\u001b[39mlength)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 584 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 585 |\u001b[39m\n     \u001b[90m 586 |\u001b[39m       it(\u001b[32m'NodeContextAccessService should only handle context management'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:583:48)\n\n  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ single responsibility principle compliance ‚Ä∫ service responsibility boundaries ‚Ä∫ NodeContextAccessService should only handle context management\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 33\n    Received: 10\n\n    \u001b[0m \u001b[90m 602 |\u001b[39m         )\u001b[33m;\u001b[39m\n     \u001b[90m 603 |\u001b[39m         \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 604 |\u001b[39m         expect(contextRelatedMethods\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(methods\u001b[33m.\u001b[39mlength)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 605 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 606 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 607 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (tests/unit/domain/services/clean-architecture-compliance.test.ts:604:46)\n\n  ‚óè Clean Architecture Compliance - UC-005 ‚Ä∫ architectural boundary enforcement ‚Ä∫ no direct external dependencies ‚Ä∫ should not directly access network resources\n\n    expect(received).not.toMatch(expected)\n\n    Expected pattern: not /http\\.|https\\.|fetch|axios|request/\n    Received string:      \"class NodeContextAccessService {\n        /**\r\n       * Register a node in the context access system\r\n       */ registerNode(nodeId, nodeType, parentNodeId, contextData, hierarchyLevel) {\n            const nodeIdStr = nodeId.value;\n            const nodeContext = {\n                nodeId,\n                nodeType,\n                parentNodeId,\n                contextData: {\n                    ...contextData\n                },\n                accessLevel: \\\"read\\\",\n                hierarchyLevel\n            };\n            this.nodeHierarchy.set(nodeIdStr, nodeContext);\n            // Update parent-child relations\n            if (parentNodeId) {\n                const parentIdStr = parentNodeId.value;\n                const children = this.parentChildRelations.get(parentIdStr) || [];\n                children.push(nodeIdStr);\n                this.parentChildRelations.set(parentIdStr, children);\n                // Update sibling groups\n                this.updateSiblingGroups(parentIdStr, nodeIdStr);\n            }\n            return _result.Result.ok(undefined);\n        }\n        /**\r\n       * Get accessible contexts for a given node based on hierarchical access patterns\r\n       */ getAccessibleContexts(requestingNodeId) {\n            const nodeIdStr = requestingNodeId.value;\n            const requestingNode = this.nodeHierarchy.get(nodeIdStr);\n            if (!requestingNode) {\n                return _result.Result.fail(\\\"Node not found in context system\\\");\n            }\n            const accessibleContexts = [];\n            // 1. Sibling Access - Read-only context sharing between nodes at same hierarchical level\n            const siblingAccess = this.getSiblingContexts(requestingNode);\n            accessibleContexts.push(...siblingAccess);\n            // 2. Child Access - Parents have write access to all their children\n            if (this.hasChildren(requestingNode)) {\n                const childAccess = this.getChildAccessContexts(requestingNode);\n                accessibleContexts.push(...childAccess);\n            }\n            // 3. Parent Access - Children have read access to their parents\n            if (requestingNode.parentNodeId) {\n                const parentAccess = this.getParentContexts(requestingNode);\n                accessibleContexts.push(...parentAccess);\n            }\n            // 4. Uncle/Aunt Access - Read-only lateral access for root cause analysis\n            const uncleAuntAccess = this.getUncleAuntContexts(requestingNode);\n            accessibleContexts.push(...uncleAuntAccess);\n            // 5. Deep Nesting - Cascading access through multi-level function model hierarchy\n            const deepNestingAccess = this.getDeepNestingContexts(requestingNode);\n            accessibleContexts.push(...deepNestingAccess);\n            return _result.Result.ok(accessibleContexts);\n        }\n        /**\r\n       * Get context for a node by nodeId (for testing and simple access)\r\n       */ getNodeContext(nodeId) {\n            for (const context of this.contexts.values()){\n                if (context.nodeId.equals(nodeId)) {\n                    return _result.Result.ok(context);\n                }\n            }\n            return _result.Result.fail(\\\"Context not found for node\\\");\n        }\n        /**\r\n       * Get specific context data for a node with access validation\r\n       */ getNodeContextWithAccess(requestingNodeId, targetNodeId, requestedAccess = \\\"read\\\") {\n            const targetContext = this.nodeHierarchy.get(targetNodeId.value);\n            if (!targetContext) {\n                return _result.Result.fail(\\\"Access denied: Target node not found\\\");\n            }\n            // Allow self-access - a node can always access its own context\n            if (requestingNodeId.equals(targetNodeId)) {\n                return _result.Result.ok({\n                    ...targetContext,\n                    contextData: {\n                        ...targetContext.contextData\n                    }\n                });\n            }\n            const accessResult = this.validateAccess(requestingNodeId, targetNodeId, requestedAccess);\n            if (accessResult.isFailure) {\n                return _result.Result.fail(accessResult.error);\n            }\n            return _result.Result.ok({\n                ...targetContext,\n                contextData: {\n                    ...targetContext.contextData\n                }\n            });\n        }\n        /**\r\n       * Update context data for a node (with write permission validation)\r\n       */ updateNodeContext(updatingNodeId, targetNodeId, newContextData) {\n            const targetContext = this.nodeHierarchy.get(targetNodeId.value);\n            if (!targetContext) {\n                return _result.Result.fail(\\\"Access denied: Target node not found\\\");\n            }\n            // Allow self-update - a node can always update its own context\n            if (updatingNodeId.equals(targetNodeId)) {\n                targetContext.contextData = {\n                    ...newContextData\n                };\n                this.nodeHierarchy.set(targetNodeId.value, targetContext);\n                return _result.Result.ok(undefined);\n            }\n            const accessResult = this.validateAccess(updatingNodeId, targetNodeId, \\\"write\\\");\n            if (accessResult.isFailure) {\n                return _result.Result.fail(accessResult.error);\n            }\n            targetContext.contextData = {\n                ...newContextData\n            };\n            this.nodeHierarchy.set(targetNodeId.value, targetContext);\n            return _result.Result.ok(undefined);\n        }\n        /**\r\n       * Extract action node specific context based on type\r\n       */ extractActionNodeContext(actionNode) {\n            const baseContext = {\n                actionId: actionNode.actionId?.value || \\\"unknown\\\",\n                name: actionNode.name,\n                description: actionNode.description,\n                executionMode: actionNode.executionMode,\n                status: actionNode.status,\n                priority: actionNode.priority,\n                raci: actionNode.raci\n            };\n            // Type-specific context extraction\n            if (actionNode instanceof _tethernode.TetherNode) {\n                const tetherNode = actionNode;\n                const config = tetherNode.tetherData;\n                return {\n                    ...baseContext,\n                    type: \\\"TetherNode\\\",\n                    tetherReferenceId: config.tetherReferenceId,\n                    executionParameters: config.executionParameters,\n                    outputMapping: config.outputMapping,\n                    resourceRequirements: config.resourceRequirements,\n                    integrationConfig: config.integrationConfig\n                };\n            }\n            if (actionNode instanceof _kbnode.KBNode) {\n                const kbNode = actionNode;\n                const config = kbNode.kbData;\n                return {\n                    ...baseContext,\n                    type: \\\"KBNode\\\",\n                    kbReferenceId: config.kbReferenceId,\n                    shortDescription: config.shortDescription,\n                    documentationContext: config.documentationContext,\n                    searchKeywords: config.searchKeywords,\n                    accessPermissions: config.accessPermissions\n                };\n            }\n            if (actionNode instanceof _functionmodelcontainernode.FunctionModelContainerNode) {\n                const containerData = actionNode.containerData;\n                return {\n                    ...baseContext,\n                    type: \\\"FunctionModelContainer\\\",\n                    nestedModelId: containerData?.nestedModelId,\n                    contextMapping: containerData?.contextMapping,\n                    outputExtraction: containerData?.outputExtraction,\n                    executionPolicy: containerData?.executionPolicy,\n                    orchestrationMode: containerData?.orchestrationMode\n                };\n            }\n            return baseContext;\n        }\n        getSiblingContexts(requestingNode) {\n            const results = [];\n            if (!requestingNode.parentNodeId) return results;\n            const siblings = this.siblingGroups.get(requestingNode.parentNodeId.value) || [];\n            for (const siblingIdStr of siblings){\n                if (siblingIdStr === requestingNode.nodeId.value) continue;\n                const siblingContext = this.nodeHierarchy.get(siblingIdStr);\n                if (siblingContext) {\n                    results.push({\n                        context: siblingContext,\n                        accessGranted: true,\n                        accessReason: \\\"Sibling read-only access pattern\\\"\n                    });\n                }\n            }\n            return results;\n        }\n        getChildAccessContexts(requestingNode) {\n            const results = [];\n            const children = this.parentChildRelations.get(requestingNode.nodeId.value) || [];\n            for (const childIdStr of children){\n                const childContext = this.nodeHierarchy.get(childIdStr);\n                if (childContext) {\n                    // Parent has write access to all child contexts\n                    results.push({\n                        context: {\n                            ...childContext,\n                            accessLevel: \\\"write\\\"\n                        },\n                        accessGranted: true,\n                        accessReason: \\\"Parent write access to child context\\\"\n                    });\n                    // Include all descendants with write access\n                    const descendants = this.getAllDescendants(childIdStr);\n                    for (const descendantId of descendants){\n                        const descendantContext = this.nodeHierarchy.get(descendantId);\n                        if (descendantContext) {\n                            results.push({\n                                context: {\n                                    ...descendantContext,\n                                    accessLevel: \\\"write\\\"\n                                },\n                                accessGranted: true,\n                                accessReason: \\\"Parent hierarchical write access to descendant\\\"\n                            });\n                        }\n                    }\n                }\n            }\n            return results;\n        }\n        getParentContexts(requestingNode) {\n            const results = [];\n            if (!requestingNode.parentNodeId) return results;\n            const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);\n            if (parentContext) {\n                results.push({\n                    context: {\n                        ...parentContext,\n                        accessLevel: \\\"read\\\"\n                    },\n                    accessGranted: true,\n                    accessReason: \\\"Child read access to parent context\\\"\n                });\n            }\n            return results;\n        }\n        getUncleAuntContexts(requestingNode) {\n            const results = [];\n            if (!requestingNode.parentNodeId) return results;\n            const parentContext = this.nodeHierarchy.get(requestingNode.parentNodeId.value);\n            if (!parentContext?.parentNodeId) return results;\n            // Get parent's siblings (uncles/aunts)\n            const uncleAunts = this.siblingGroups.get(parentContext.parentNodeId.value) || [];\n            for (const uncleAuntId of uncleAunts){\n                if (uncleAuntId === requestingNode.parentNodeId.value) continue;\n                const uncleAuntContext = this.nodeHierarchy.get(uncleAuntId);\n                if (uncleAuntContext) {\n                    results.push({\n                        context: uncleAuntContext,\n                        accessGranted: true,\n                        accessReason: \\\"Uncle/Aunt lateral read-only access for root cause analysis\\\"\n                    });\n                }\n            }\n            return results;\n        }\n        getDeepNestingContexts(requestingNode) {\n            const results = [];\n            // For deep nesting, traverse up the hierarchy and apply cascading access\n            let currentNodeId = requestingNode.parentNodeId?.value;\n            let nestingLevel = 1;\n            while(currentNodeId && nestingLevel <= 10){\n                const currentContext = this.nodeHierarchy.get(currentNodeId);\n                if (!currentContext) break;\n                results.push({\n                    context: {\n                        ...currentContext,\n                        accessLevel: nestingLevel <= 2 ? \\\"write\\\" : \\\"read\\\"\n                    },\n                    accessGranted: true,\n                    accessReason: `Deep nesting level ${nestingLevel} - ${nestingLevel <= 2 ? \\\"write\\\" : \\\"read\\\"} access`\n                });\n                currentNodeId = currentContext.parentNodeId?.value;\n                nestingLevel++;\n            }\n            return results;\n        }\n        validateAccess(requestingNodeId, targetNodeId, requestedAccess) {\n            const accessibleContexts = this.getAccessibleContexts(requestingNodeId);\n            if (accessibleContexts.isFailure) {\n                return _result.Result.fail(accessibleContexts.error);\n            }\n            const targetAccess = accessibleContexts.value.find((access)=>access.context.nodeId.equals(targetNodeId));\n            if (!targetAccess || !targetAccess.accessGranted) {\n                return _result.Result.fail(\\\"Access denied: Node not in accessible context hierarchy\\\");\n            }\n            // Validate access level\n            const contextAccessLevel = targetAccess.context.accessLevel;\n            const accessLevels = [\n                \\\"read\\\",\n                \\\"write\\\",\n                \\\"execute\\\"\n            ];\n            const requiredLevel = accessLevels.indexOf(requestedAccess);\n            const availableLevel = accessLevels.indexOf(contextAccessLevel);\n            if (availableLevel < requiredLevel) {\n                return _result.Result.fail(`Access denied: Required ${requestedAccess} access, but only ${contextAccessLevel} is available`);\n            }\n            return _result.Result.ok(undefined);\n        }\n        hasChildren(node) {\n            const children = this.parentChildRelations.get(node.nodeId.value);\n            return !!(children && children.length > 0);\n        }\n        updateSiblingGroups(parentIdStr, newChildIdStr) {\n            const existingSiblings = this.siblingGroups.get(parentIdStr) || [];\n            existingSiblings.push(newChildIdStr);\n            this.siblingGroups.set(parentIdStr, existingSiblings);\n        }\n        getAllDescendants(nodeId) {\n            const children = this.parentChildRelations.get(nodeId) || [];\n            let descendants = [\n                ...children\n            ];\n            for (const child of children){\n                descendants = descendants.concat(this.getAllDescendants(child));\n            }\n            return descendants;\n        }\n        /**\r\n       * Set hierarchy relationship between nodes (used for testing)\r\n       */ setHierarchy(childNodeId, parentNodeId) {\n            const children = this.parentChildRelations.get(parentNodeId) || [];\n            if (!children.includes(childNodeId)) {\n                children.push(childNodeId);\n                this.parentChildRelations.set(parentNodeId, children);\n            }\n            // Update sibling groups\n            this.updateSiblingGroups(parentNodeId, childNodeId);\n        }\n        /**\r\n       * Set context data for a specific node (used for testing)\r\n       */ setContextData(nodeId, contextData) {\n            const existingContext = this.nodeHierarchy.get(nodeId);\n            if (existingContext) {\n                // Use the same approach as debugForceSetContext which works\n                this.nodeHierarchy.delete(nodeId);\n                const updatedContext = {\n                    ...existingContext,\n                    contextData: contextData\n                };\n                this.nodeHierarchy.set(nodeId, updatedContext);\n            }\n        }\n        /**\r\n       * Get all child contexts for a parent node (used for testing)\r\n       */ getChildContexts(parentNodeId) {\n            const children = this.parentChildRelations.get(parentNodeId) || [];\n            const childContexts = [];\n            for (const childId of children){\n                const childContext = this.nodeHierarchy.get(childId);\n                if (childContext && childContext.contextData) {\n                    childContexts.push(childContext.contextData);\n                }\n            }\n            return childContexts;\n        }\n        /**\r\n       * Debug method to check parent-child relationships (used for testing)\r\n       */ getParentChildRelations() {\n            return new Map(this.parentChildRelations);\n        }\n        /**\r\n       * Debug method to check if a node has children (used for testing)\r\n       */ debugHasChildren(nodeId) {\n            const children = this.parentChildRelations.get(nodeId);\n            return !!(children && children.length > 0);\n        }\n        /**\r\n       * Get deep nested contexts across multiple model levels (used for testing)\r\n       */ getDeepNestedContext(sourceModelId, targetModelId) {\n            // Find nodes related to the source model that might have nested contexts\n            const nestedContexts = [];\n            // Search through node hierarchy for contexts referencing target model\n            for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){\n                // Check if this node's context references the target model\n                // Check if this node's context data has references to the target model\n                if (nodeContext.contextData && this.hasNestedModelReferences(nodeContext.contextData, targetModelId)) {\n                    // Found matching context\n                    nestedContexts.push(nodeContext.contextData);\n                } else if (nodeContext.contextData) {\n                // No match in this node's context\n                }\n            }\n            // Return all found contexts\n            return nestedContexts;\n        }\n        /**\r\n       * Debug method to check the current state of the service\r\n       */ debugState() {\n            const nodes = [];\n            for (const [nodeId, nodeContext] of this.nodeHierarchy.entries()){\n                nodes.push({\n                    nodeId,\n                    nodeType: nodeContext.nodeType,\n                    hasContextData: !!nodeContext.contextData,\n                    contextKeys: nodeContext.contextData ? Object.keys(nodeContext.contextData) : [],\n                    contextDataType: typeof nodeContext.contextData,\n                    contextData: nodeContext.contextData\n                });\n            }\n            return {\n                nodeCount: this.nodeHierarchy.size,\n                nodes\n            };\n        }\n        /**\r\n       * Test method to directly manipulate the hierarchy for debugging\r\n       */ debugForceSetContext(nodeId, contextData) {\n            // Direct map manipulation\n            const existing = this.nodeHierarchy.get(nodeId);\n            if (!existing) return false;\n            // Force set context data for testing purposes\n            // Completely replace the object in the map\n            this.nodeHierarchy.delete(nodeId);\n            const newContext = {\n                ...existing,\n                contextData: contextData\n            };\n            // Context created successfully\n            this.nodeHierarchy.set(nodeId, newContext);\n            // Verify it was set\n            const verify = this.nodeHierarchy.get(nodeId);\n            // Context verification complete\n            return true;\n        }\n        /**\r\n       * Build context for a node with optional parent context inheritance\r\n       */ buildContext(nodeId, data, scope, parentContextId) {\n            try {\n                // Validate input data\n                if (data === null || data === undefined) {\n                    return _result.Result.fail(\\\"Invalid context data: data cannot be null or undefined\\\");\n                }\n                if (typeof data !== \\\"object\\\") {\n                    return _result.Result.fail(\\\"Invalid context data: data must be an object\\\");\n                }\n                const contextId = `ctx-${++this.contextCounter}-${nodeId.value.slice(-8)}`;\n                let inheritedData = {};\n                if (parentContextId) {\n                    const parentContext = this.contexts.get(parentContextId);\n                    if (parentContext) {\n                        inheritedData = {\n                            ...parentContext.data\n                        };\n                    }\n                }\n                const accessLevel = scope === \\\"isolated\\\" ? \\\"read\\\" : \\\"read-write\\\";\n                const context = {\n                    contextId,\n                    nodeId,\n                    scope,\n                    data: {\n                        ...data\n                    },\n                    inheritedData: Object.keys(inheritedData).length > 0 ? inheritedData : undefined,\n                    accessLevel,\n                    parentContextId: parentContextId || null\n                };\n                this.contexts.set(contextId, context);\n                return _result.Result.ok(context);\n            } catch (error) {\n                return _result.Result.fail(`Failed to build context: ${error}`);\n            }\n        }\n        /**\r\n       * Update context data for the specified context ID\r\n       */ updateNodeContext(contextId, updateData, mergeMode = \\\"merge\\\") {\n            const context = this.contexts.get(contextId);\n            if (!context) {\n                return _result.Result.fail(\\\"Context not found\\\");\n            }\n            let updatedData;\n            if (mergeMode === \\\"merge\\\") {\n                updatedData = {\n                    ...context.data,\n                    ...updateData\n                };\n            } else {\n                updatedData = {\n                    ...updateData\n                };\n            }\n            const updatedContext = {\n                ...context,\n                data: updatedData\n            };\n            this.contexts.set(contextId, updatedContext);\n            return _result.Result.ok(updatedContext);\n        }\n        /**\r\n       * Clear node context and all child contexts\r\n       */ clearNodeContext(nodeId) {\n            const contextsToRemove = [];\n            // Find contexts for this node\n            for (const [contextId, context] of this.contexts.entries()){\n                if (context.nodeId.equals(nodeId)) {\n                    contextsToRemove.push(contextId);\n                    // Also find child contexts\n                    for (const [childId, childContext] of this.contexts.entries()){\n                        if (childContext.parentContextId === contextId) {\n                            contextsToRemove.push(childId);\n                        }\n                    }\n                }\n            }\n            // Remove contexts\n            contextsToRemove.forEach((id)=>this.contexts.delete(id));\n            return _result.Result.ok(undefined);\n        }\n        /**\r\n       * Propagate context from source to target with inheritance rules\r\n       */ propagateContext(sourceContextId, targetNodeId, inheritanceRules) {\n            const sourceContext = this.contexts.get(sourceContextId);\n            if (!sourceContext) {\n                return _result.Result.fail(\\\"Source context not found\\\");\n            }\n            const propagatedData = {};\n            for (const rule of inheritanceRules){\n                const sourceValue = sourceContext.data[rule.propertyName];\n                if (sourceValue !== undefined) {\n                    switch(rule.inheritanceType){\n                        case \\\"inherit\\\":\n                            propagatedData[rule.propertyName] = sourceValue;\n                            break;\n                        case \\\"override\\\":\n                            propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;\n                            break;\n                        case \\\"merge\\\":\n                            if (typeof sourceValue === \\\"object\\\" && sourceValue !== null) {\n                                propagatedData[rule.propertyName] = {\n                                    ...sourceValue,\n                                    ...rule.defaultValue || {}\n                                };\n                            } else {\n                                propagatedData[rule.propertyName] = rule.defaultValue ?? sourceValue;\n                            }\n                            break;\n                    }\n                } else if (rule.defaultValue !== undefined) {\n                    propagatedData[rule.propertyName] = rule.defaultValue;\n                }\n            }\n            return this.buildContext(targetNodeId, propagatedData, sourceContext.scope, sourceContextId);\n        }\n        /**\r\n       * Get hierarchical context including parent chain\r\n       */ getHierarchicalContext(nodeId) {\n            // Find context for this node\n            let nodeContext;\n            for (const context of this.contexts.values()){\n                if (context.nodeId.equals(nodeId)) {\n                    nodeContext = context;\n                    break;\n                }\n            }\n            if (!nodeContext) {\n                return _result.Result.fail(\\\"Node context not found\\\");\n            }\n            // Find child contexts\n            const childContextIds = [];\n            for (const [contextId, context] of this.contexts.entries()){\n                if (context.parentContextId === nodeContext.contextId) {\n                    childContextIds.push(contextId);\n                }\n            }\n            const hierarchicalContext = {\n                ...nodeContext,\n                childContextIds,\n                timestamp: new Date().toISOString()\n            };\n            return _result.Result.ok(hierarchicalContext);\n        }\n        /**\r\n       * Validate context access permissions\r\n       */ validateContextAccess(requestingNodeId, targetContextId, requestedAccess) {\n            const targetContext = this.contexts.get(targetContextId);\n            if (!targetContext) {\n                return _result.Result.ok({\n                    isValid: false,\n                    reason: \\\"Target context not found\\\",\n                    accessLevel: \\\"read\\\"\n                });\n            }\n            // Self-access is always allowed\n            if (targetContext.nodeId.equals(requestingNodeId)) {\n                return _result.Result.ok({\n                    isValid: true,\n                    reason: \\\"Self-access granted\\\",\n                    accessLevel: targetContext.accessLevel\n                });\n            }\n            // Check if requesting node has access based on hierarchy\n            const hasAccess = this.checkHierarchicalAccess(requestingNodeId, targetContext);\n            const accessLevel = hasAccess ? targetContext.accessLevel : \\\"read\\\";\n            const canAccess = this.validateAccessLevel(requestedAccess, accessLevel);\n            return _result.Result.ok({\n                isValid: canAccess,\n                reason: canAccess ? \\\"Hierarchical access granted\\\" : \\\"Insufficient permissions\\\",\n                accessLevel\n            });\n        }\n        /**\r\n       * Clone context scope to new node\r\n       */ cloneContextScope(sourceContextId, targetNodeId, newScope, transformationRules) {\n            const sourceContext = this.contexts.get(sourceContextId);\n            if (!sourceContext) {\n                return _result.Result.fail(\\\"Source context not found\\\");\n            }\n            let clonedData = {\n                ...sourceContext.data\n            };\n            // Apply transformation rules if provided\n            if (transformationRules) {\n                for (const rule of transformationRules){\n                    if (rule.inheritanceType === \\\"override\\\" && rule.defaultValue !== undefined) {\n                        clonedData[rule.propertyName] = rule.defaultValue;\n                    }\n                }\n            }\n            return this.buildContext(targetNodeId, clonedData, newScope);\n        }\n        /**\r\n       * Merge multiple context scopes\r\n       */ mergeContextScopes(sourceContextIds, targetNodeId, targetScope, precedenceRules) {\n            if (sourceContextIds.length === 0) {\n                return this.buildContext(targetNodeId, {}, targetScope);\n            }\n            const sourceContexts = sourceContextIds.map((id)=>this.contexts.get(id)).filter((ctx)=>ctx !== undefined);\n            if (sourceContexts.length === 0) {\n                return _result.Result.fail(\\\"No valid source contexts found\\\");\n            }\n            // Merge data with precedence rules\n            const mergedData = {};\n            if (precedenceRules) {\n                const priorityMap = new Map(precedenceRules.map((rule)=>[\n                        rule.contextId,\n                        rule.priority\n                    ]));\n                const sortedContexts = sourceContexts.sort((a, b)=>{\n                    const priorityA = priorityMap.get(a.contextId) ?? 0;\n                    const priorityB = priorityMap.get(b.contextId) ?? 0;\n                    return priorityB - priorityA; // Higher priority first\n                });\n                for (const context of sortedContexts.reverse()){\n                    Object.assign(mergedData, context.data);\n                }\n            } else {\n                // Simple merge without precedence\n                for (const context of sourceContexts){\n                    Object.assign(mergedData, context.data);\n                }\n            }\n            return this.buildContext(targetNodeId, mergedData, targetScope);\n        }\n        checkHierarchicalAccess(requestingNodeId, targetContext) {\n            // Check parent-child relationships\n            const accessibleContexts = this.getAccessibleContexts(requestingNodeId);\n            if (accessibleContexts.isFailure) return false;\n            return accessibleContexts.value.some((access)=>access.context.nodeId.equals(targetContext.nodeId) && access.accessGranted);\n        }\n        validateAccessLevel(requested, available) {\n            const levels = {\n                \\\"read\\\": 1,\n                \\\"write\\\": 2,\n                \\\"read-write\\\": 2,\n                \\\"execute\\\": 3\n            };\n            return levels[requested] <= levels[available];\n        }\n        /**\r\n       * Check if context data contains references to a nested model\r\n       */ hasNestedModelReferences(contextData, targetModelId) {\n            // Check various possible locations where nested model references might exist\n            // Check various possible locations where nested model references might exist\n            // Check direct nestedModelId reference\n            if (contextData.nestedModelId === targetModelId) {\n                return true;\n            }\n            // Check in execution memory parent models array\n            if (contextData.executionMemory && contextData.executionMemory.parentModels) {\n                if (Array.isArray(contextData.executionMemory.parentModels) && contextData.executionMemory.parentModels.includes(targetModelId)) {\n                    return true;\n                }\n            }\n            // Check in nested model outputs (for FunctionModelContainerContext)\n            if (contextData.nestedModelOutputs) {\n                if (contextData.nestedModelOutputs[targetModelId]) {\n                    return true;\n                }\n            }\n            // Check in orchestration state nested models\n            if (contextData.orchestrationState && contextData.orchestrationState.nestedModels) {\n                if (Array.isArray(contextData.orchestrationState.nestedModels) && contextData.orchestrationState.nestedModels.includes(targetModelId)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        constructor(){\n            this.nodeHierarchy = new Map();\n            this.parentChildRelations = new Map();\n            this.siblingGroups = new Map();\n            this.contexts = new Map();\n            this.contextCounter = 0;\n        }\n    }\"\n\n    \u001b[0m \u001b[90m 628 |\u001b[39m         services\u001b[33m.\u001b[39mforEach(service \u001b[33m=>\u001b[39m {\n     \u001b[90m 629 |\u001b[39m           \u001b[36mconst\u001b[39m serviceString \u001b[33m=\u001b[39m service\u001b[33m.\u001b[39mconstructor\u001b[33m.\u001b[39mtoString()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 630 |\u001b[39m           expect(serviceString)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoMatch(\u001b[35m/http\\.|https\\.|fetch|axios|request/\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 631 |\u001b[39m           expect(serviceString)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoMatch(\u001b[35m/socket\\.|ws\\.|websocket/i\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 632 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 633 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at toMatch (tests/unit/domain/services/clean-architecture-compliance.test.ts:630:37)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/domain/services/clean-architecture-compliance.test.ts:628:18)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\clean-architecture-compliance.test.ts","startTime":1756394051727,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Integration with All 24 Use Cases","UC-001_through_UC-009_FunctionModelManagement_Integration"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Integration with All 24 Use Cases UC-001_through_UC-009_FunctionModelManagement_Integration should_ValidateBusinessRules_ForAllFunctionModelUseCases","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054576,"status":"passed","title":"should_ValidateBusinessRules_ForAllFunctionModelUseCases"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Integration with All 24 Use Cases","UC-001_through_UC-009_FunctionModelManagement_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Integration with All 24 Use Cases UC-001_through_UC-009_FunctionModelManagement_Integration should_PreventInvalidOperations_AcrossAllModelStates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054580,"status":"passed","title":"should_PreventInvalidOperations_AcrossAllModelStates"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Integration with All 24 Use Cases","UC-001_through_UC-009_FunctionModelManagement_Integration"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Integration with All 24 Use Cases UC-001_through_UC-009_FunctionModelManagement_Integration should_ValidateVersioningCompliance_AcrossModelOperations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054582,"status":"passed","title":"should_ValidateVersioningCompliance_AcrossModelOperations"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Integration with All 24 Use Cases","UC-010_through_UC-017_NodeManagement_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Integration with All 24 Use Cases UC-010_through_UC-017_NodeManagement_Integration should_ValidateNodeDependencyRules_AcrossAllNodeTypes","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054593,"status":"passed","title":"should_ValidateNodeDependencyRules_AcrossAllNodeTypes"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Integration with All 24 Use Cases","UC-010_through_UC-017_NodeManagement_Integration"],"duration":23,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Integration with All 24 Use Cases UC-010_through_UC-017_NodeManagement_Integration should_ValidateHierarchicalContextAccess_AcrossNodeHierarchy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394054594,"status":"passed","title":"should_ValidateHierarchicalContextAccess_AcrossNodeHierarchy"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Integration with All 24 Use Cases","UC-018_through_UC-022_AIAgent_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Integration with All 24 Use Cases UC-018_through_UC-022_AIAgent_Integration should_ValidateAIAgentIntegration_WithBusinessRules","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054617,"status":"passed","title":"should_ValidateAIAgentIntegration_WithBusinessRules"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Integration with All 24 Use Cases","UC-023_UC-024_ValidationAndCompliance_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Integration with All 24 Use Cases UC-023_UC-024_ValidationAndCompliance_Integration should_ValidateCompliance_WithOrganizationalPolicies","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054619,"status":"passed","title":"should_ValidateCompliance_WithOrganizationalPolicies"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Integration with All 24 Use Cases","UC-023_UC-024_ValidationAndCompliance_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Integration with All 24 Use Cases UC-023_UC-024_ValidationAndCompliance_Integration should_ValidateSecurityRequirements_AcrossAllOperations","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054621,"status":"passed","title":"should_ValidateSecurityRequirements_AcrossAllOperations"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Cross-Entity Business Rule Validation","crossEntityValidation_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Cross-Entity Business Rule Validation crossEntityValidation_Integration should_ValidateBusinessRules_AcrossMultipleEntityTypes","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054622,"status":"passed","title":"should_ValidateBusinessRules_AcrossMultipleEntityTypes"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Cross-Entity Business Rule Validation","crossEntityValidation_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Cross-Entity Business Rule Validation crossEntityValidation_Integration should_ValidateBusinessRules_ForComplexWorkflowInteractions","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054624,"status":"passed","title":"should_ValidateBusinessRules_ForComplexWorkflowInteractions"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Rule Consistency Across Feature Areas","featureAreaConsistency_Integration"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Rule Consistency Across Feature Areas featureAreaConsistency_Integration should_MaintainRuleConsistency_AcrossAllFeatureAreas","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394054625,"status":"passed","title":"should_MaintainRuleConsistency_AcrossAllFeatureAreas"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Rule Consistency Across Feature Areas","featureAreaConsistency_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Rule Consistency Across Feature Areas featureAreaConsistency_Integration should_ApplyConsistentNamingConventions_AcrossFeatures","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054631,"status":"passed","title":"should_ApplyConsistentNamingConventions_AcrossFeatures"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Performance Under High-Load Operations","highLoadPerformance_Integration"],"duration":40,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Performance Under High-Load Operations highLoadPerformance_Integration should_MaintainPerformance_WithLargeScaleValidation","invocations":1,"location":null,"numPassingAsserts":103,"retryReasons":[],"startAt":1756394054633,"status":"passed","title":"should_MaintainPerformance_WithLargeScaleValidation"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Performance Under High-Load Operations","highLoadPerformance_Integration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Performance Under High-Load Operations highLoadPerformance_Integration should_HandleConcurrentValidation_WithoutDataCorruption","invocations":1,"location":null,"numPassingAsserts":41,"retryReasons":[],"startAt":1756394054673,"status":"passed","title":"should_HandleConcurrentValidation_WithoutDataCorruption"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Rule Configuration and Management","ruleConfiguration_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Rule Configuration and Management ruleConfiguration_Integration should_ApplyConfigurableBusinessRules_BasedOnContext","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054676,"status":"passed","title":"should_ApplyConfigurableBusinessRules_BasedOnContext"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Rule Configuration and Management","ruleConfiguration_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Rule Configuration and Management ruleConfiguration_Integration should_ValidateRuleConsistency_AcrossConfigurationChanges","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054677,"status":"passed","title":"should_ValidateRuleConsistency_AcrossConfigurationChanges"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Clean Architecture Compliance Integration","architecturalCompliance_Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Clean Architecture Compliance Integration architecturalCompliance_Integration should_ValidateArchitecturalBoundaries_ThroughBusinessRules","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054679,"status":"passed","title":"should_ValidateArchitecturalBoundaries_ThroughBusinessRules"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Clean Architecture Compliance Integration","architecturalCompliance_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Clean Architecture Compliance Integration architecturalCompliance_Integration should_EnforceCleanArchitecture_ThroughValidationService","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394054679,"status":"passed","title":"should_EnforceCleanArchitecture_ThroughValidationService"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Error Handling and Edge Cases","errorHandling_Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Error Handling and Edge Cases errorHandling_Integration should_HandleValidationErrors_Gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054681,"status":"passed","title":"should_HandleValidationErrors_Gracefully"},{"ancestorTitles":["BusinessRuleValidationService Integration Tests","Error Handling and Edge Cases","errorHandling_Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"BusinessRuleValidationService Integration Tests Error Handling and Edge Cases errorHandling_Integration should_ValidateEdgeCases_InBusinessRules","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054682,"status":"passed","title":"should_ValidateEdgeCases_InBusinessRules"}],"endTime":1756394054683,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\integration\\domain\\services\\business-rule-validation-service.integration.test.ts","startTime":1756394054378,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FractalOrchestrationService","fractal execution planning","planFractalExecution"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution planning planFractalExecution should plan single-level execution successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054484,"status":"passed","title":"should plan single-level execution successfully"},{"ancestorTitles":["FractalOrchestrationService","fractal execution planning","planFractalExecution"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution planning planFractalExecution should plan execution with initial context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054489,"status":"passed","title":"should plan execution with initial context"},{"ancestorTitles":["FractalOrchestrationService","fractal execution planning","planFractalExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution planning planFractalExecution should create proper fractal levels for simple model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054491,"status":"passed","title":"should create proper fractal levels for simple model"},{"ancestorTitles":["FractalOrchestrationService","fractal execution planning","planFractalExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution planning planFractalExecution should handle multi-level model planning","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054492,"status":"passed","title":"should handle multi-level model planning"},{"ancestorTitles":["FractalOrchestrationService","fractal execution planning","planFractalExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution planning planFractalExecution should handle deep nested model with depth limits","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054493,"status":"passed","title":"should handle deep nested model with depth limits"},{"ancestorTitles":["FractalOrchestrationService","fractal execution coordination","executeFractalOrchestration"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution coordination executeFractalOrchestration should execute fractal orchestration successfully","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394054495,"status":"passed","title":"should execute fractal orchestration successfully"},{"ancestorTitles":["FractalOrchestrationService","fractal execution coordination","executeFractalOrchestration"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution coordination executeFractalOrchestration should handle execution state transitions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054506,"status":"passed","title":"should handle execution state transitions"},{"ancestorTitles":["FractalOrchestrationService","fractal execution coordination","executeFractalOrchestration"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution coordination executeFractalOrchestration should aggregate context outputs properly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054522,"status":"passed","title":"should aggregate context outputs properly"},{"ancestorTitles":["FractalOrchestrationService","fractal execution coordination","executeFractalOrchestration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution coordination executeFractalOrchestration should reject execution for non-existent state","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054538,"status":"passed","title":"should reject execution for non-existent state"},{"ancestorTitles":["FractalOrchestrationService","fractal execution coordination","executeFractalOrchestration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution coordination executeFractalOrchestration should handle execution failures gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054540,"status":"passed","title":"should handle execution failures gracefully"},{"ancestorTitles":["FractalOrchestrationService","fractal execution coordination","coordinateLevelExecution"],"duration":25,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution coordination coordinateLevelExecution should coordinate level execution successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054542,"status":"passed","title":"should coordinate level execution successfully"},{"ancestorTitles":["FractalOrchestrationService","fractal execution coordination","coordinateLevelExecution"],"duration":31,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution coordination coordinateLevelExecution should handle inherited context properly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054567,"status":"passed","title":"should handle inherited context properly"},{"ancestorTitles":["FractalOrchestrationService","fractal execution coordination","coordinateLevelExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution coordination coordinateLevelExecution should reject coordination for invalid level","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054598,"status":"passed","title":"should reject coordination for invalid level"},{"ancestorTitles":["FractalOrchestrationService","fractal execution coordination","coordinateLevelExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService fractal execution coordination coordinateLevelExecution should reject coordination for non-existent execution","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054599,"status":"passed","title":"should reject coordination for non-existent execution"},{"ancestorTitles":["FractalOrchestrationService","context propagation management","propagateContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService context propagation management propagateContext should propagate context between levels successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054600,"status":"passed","title":"should propagate context between levels successfully"},{"ancestorTitles":["FractalOrchestrationService","context propagation management","propagateContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService context propagation management propagateContext should transform context based on orchestration mode","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054601,"status":"passed","title":"should transform context based on orchestration mode"},{"ancestorTitles":["FractalOrchestrationService","context propagation management","propagateContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService context propagation management propagateContext should reject propagation for invalid levels","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054602,"status":"passed","title":"should reject propagation for invalid levels"},{"ancestorTitles":["FractalOrchestrationService","context propagation management","propagateContext"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService context propagation management propagateContext should reject propagation for non-existent execution","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054603,"status":"passed","title":"should reject propagation for non-existent execution"},{"ancestorTitles":["FractalOrchestrationService","hierarchical orchestration patterns","handleVerticalNesting"],"duration":40,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService hierarchical orchestration patterns handleVerticalNesting should handle vertical nesting successfully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054603,"status":"passed","title":"should handle vertical nesting successfully"},{"ancestorTitles":["FractalOrchestrationService","hierarchical orchestration patterns","handleVerticalNesting"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService hierarchical orchestration patterns handleVerticalNesting should handle empty nested models array","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054644,"status":"passed","title":"should handle empty nested models array"},{"ancestorTitles":["FractalOrchestrationService","hierarchical orchestration patterns","handleVerticalNesting"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService hierarchical orchestration patterns handleVerticalNesting should propagate context to nested models","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394054644,"status":"passed","title":"should propagate context to nested models"},{"ancestorTitles":["FractalOrchestrationService","hierarchical orchestration patterns","handleHorizontalScaling"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService hierarchical orchestration patterns handleHorizontalScaling should handle horizontal scaling successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054659,"status":"passed","title":"should handle horizontal scaling successfully"},{"ancestorTitles":["FractalOrchestrationService","hierarchical orchestration patterns","handleHorizontalScaling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService hierarchical orchestration patterns handleHorizontalScaling should execute models in parallel","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054675,"status":"passed","title":"should execute models in parallel"},{"ancestorTitles":["FractalOrchestrationService","hierarchical orchestration patterns","handleHorizontalScaling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService hierarchical orchestration patterns handleHorizontalScaling should handle empty models array","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054690,"status":"passed","title":"should handle empty models array"},{"ancestorTitles":["FractalOrchestrationService","hierarchical orchestration patterns","handleHorizontalScaling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService hierarchical orchestration patterns handleHorizontalScaling should share context across all models","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394054691,"status":"passed","title":"should share context across all models"},{"ancestorTitles":["FractalOrchestrationService","orchestration consistency validation","validateOrchestrationConsistency"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService orchestration consistency validation validateOrchestrationConsistency should validate consistent orchestration successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054706,"status":"passed","title":"should validate consistent orchestration successfully"},{"ancestorTitles":["FractalOrchestrationService","orchestration consistency validation","validateOrchestrationConsistency"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService orchestration consistency validation validateOrchestrationConsistency should detect nesting depth violations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054707,"status":"passed","title":"should detect nesting depth violations"},{"ancestorTitles":["FractalOrchestrationService","orchestration consistency validation","validateOrchestrationConsistency"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService orchestration consistency validation validateOrchestrationConsistency should detect circular dependencies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054707,"status":"passed","title":"should detect circular dependencies"},{"ancestorTitles":["FractalOrchestrationService","orchestration consistency validation","validateOrchestrationConsistency"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService orchestration consistency validation validateOrchestrationConsistency should validate context propagation consistency","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054708,"status":"passed","title":"should validate context propagation consistency"},{"ancestorTitles":["FractalOrchestrationService","orchestration consistency validation","validateOrchestrationConsistency"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService orchestration consistency validation validateOrchestrationConsistency should reject validation for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054708,"status":"passed","title":"should reject validation for non-existent execution"},{"ancestorTitles":["FractalOrchestrationService","orchestration mode handling"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService orchestration mode handling should handle embedded orchestration mode","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054709,"status":"passed","title":"should handle embedded orchestration mode"},{"ancestorTitles":["FractalOrchestrationService","orchestration mode handling"],"duration":31,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService orchestration mode handling should handle parallel orchestration mode","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054721,"status":"passed","title":"should handle parallel orchestration mode"},{"ancestorTitles":["FractalOrchestrationService","orchestration mode handling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService orchestration mode handling should handle sequential orchestration mode","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054752,"status":"passed","title":"should handle sequential orchestration mode"},{"ancestorTitles":["FractalOrchestrationService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService error handling and edge cases should handle malformed execution states gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054767,"status":"passed","title":"should handle malformed execution states gracefully"},{"ancestorTitles":["FractalOrchestrationService","error handling and edge cases"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService error handling and edge cases should handle concurrent fractal executions","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054768,"status":"passed","title":"should handle concurrent fractal executions"},{"ancestorTitles":["FractalOrchestrationService","error handling and edge cases"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService error handling and edge cases should handle resource cleanup after execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054783,"status":"passed","title":"should handle resource cleanup after execution"},{"ancestorTitles":["FractalOrchestrationService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService error handling and edge cases should handle context transformation failures gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054798,"status":"passed","title":"should handle context transformation failures gracefully"},{"ancestorTitles":["FractalOrchestrationService","error handling and edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FractalOrchestrationService error handling and edge cases should maintain service dependencies properly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054799,"status":"passed","title":"should maintain service dependencies properly"}],"endTime":1756394054801,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\fractal-orchestration-service.test.ts","startTime":1756394054225,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModelManagementService Integration Tests","Complete Model Lifecycle Workflows","createCompleteWorkflow_Integration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Complete Model Lifecycle Workflows createCompleteWorkflow_Integration should_CreateCompleteWorkflow_WhenValidLifecycleExecuted","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394054544,"status":"passed","title":"should_CreateCompleteWorkflow_WhenValidLifecycleExecuted"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Complete Model Lifecycle Workflows","createCompleteWorkflow_Integration"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Complete Model Lifecycle Workflows createCompleteWorkflow_Integration should_RollbackWorkflow_WhenIntermediateStepFails","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394054547,"status":"passed","title":"should_RollbackWorkflow_WhenIntermediateStepFails"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Complete Model Lifecycle Workflows","modelLifecycleProgression_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Complete Model Lifecycle Workflows modelLifecycleProgression_Integration should_ProgressThroughAllLifecycleStages_WhenAllOperationsSucceed","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394054552,"status":"passed","title":"should_ProgressThroughAllLifecycleStages_WhenAllOperationsSucceed"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Complete Model Lifecycle Workflows","modelLifecycleProgression_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Complete Model Lifecycle Workflows modelLifecycleProgression_Integration should_HaltProgression_WhenLifecycleValidationFails","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054554,"status":"passed","title":"should_HaltProgression_WhenLifecycleValidationFails"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Transactional Consistency","atomicOperations_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Transactional Consistency atomicOperations_Integration should_MaintainAtomicity_WhenMultipleOperationsExecuteConcurrently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054555,"status":"passed","title":"should_MaintainAtomicity_WhenMultipleOperationsExecuteConcurrently"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Transactional Consistency","atomicOperations_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Transactional Consistency atomicOperations_Integration should_RollbackAllOperations_WhenTransactionFails","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054556,"status":"passed","title":"should_RollbackAllOperations_WhenTransactionFails"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Cross-Cutting Concerns","authorization_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Cross-Cutting Concerns authorization_Integration should_EnforceAuthorization_AcrossAllOperations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054558,"status":"passed","title":"should_EnforceAuthorization_AcrossAllOperations"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Cross-Cutting Concerns","authorization_Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Cross-Cutting Concerns authorization_Integration should_ValidatePermissions_BeforeExecutingUseCase","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054559,"status":"passed","title":"should_ValidatePermissions_BeforeExecutingUseCase"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Cross-Cutting Concerns","validation_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Cross-Cutting Concerns validation_Integration should_ApplyValidation_ConsistentlyAcrossAllOperations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054559,"status":"passed","title":"should_ApplyValidation_ConsistentlyAcrossAllOperations"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Cross-Cutting Concerns","validation_Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Cross-Cutting Concerns validation_Integration should_RejectOperation_WhenValidationFails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054561,"status":"passed","title":"should_RejectOperation_WhenValidationFails"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Error Handling and Recovery","errorRecovery_Integration"],"duration":114,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Error Handling and Recovery errorRecovery_Integration should_RecoverFromTransientFailures_WithRetryMechanism","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054562,"status":"passed","title":"should_RecoverFromTransientFailures_WithRetryMechanism"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Error Handling and Recovery","errorRecovery_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Error Handling and Recovery errorRecovery_Integration should_ActivateCircuitBreaker_WhenConsecutiveFailuresExceedThreshold","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054676,"status":"passed","title":"should_ActivateCircuitBreaker_WhenConsecutiveFailuresExceedThreshold"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Error Handling and Recovery","compensatingTransactions_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Error Handling and Recovery compensatingTransactions_Integration should_ExecuteCompensatingTransactions_WhenRollbackRequired","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054677,"status":"passed","title":"should_ExecuteCompensatingTransactions_WhenRollbackRequired"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Concurrent Operations and Data Integrity","concurrencyControl_Integration"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Concurrent Operations and Data Integrity concurrencyControl_Integration should_HandleConcurrentModifications_WithOptimisticLocking","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054678,"status":"passed","title":"should_HandleConcurrentModifications_WithOptimisticLocking"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Concurrent Operations and Data Integrity","concurrencyControl_Integration"],"duration":123,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Concurrent Operations and Data Integrity concurrencyControl_Integration should_QueueOperations_WhenResourceContention_Detected","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054691,"status":"passed","title":"should_QueueOperations_WhenResourceContention_Detected"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Concurrent Operations and Data Integrity","dataIntegrity_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Concurrent Operations and Data Integrity dataIntegrity_Integration should_MaintainDataIntegrity_AcrossConcurrentTransactions","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054814,"status":"passed","title":"should_MaintainDataIntegrity_AcrossConcurrentTransactions"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Performance and Scalability","performanceMetrics_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Performance and Scalability performanceMetrics_Integration should_MaintainPerformance_UnderHighLoad","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054815,"status":"passed","title":"should_MaintainPerformance_UnderHighLoad"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Performance and Scalability","performanceMetrics_Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Performance and Scalability performanceMetrics_Integration should_ApplyBackpressure_WhenSystemOverloaded","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054816,"status":"passed","title":"should_ApplyBackpressure_WhenSystemOverloaded"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Clean Architecture Compliance","architecturalBoundaries_Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Clean Architecture Compliance architecturalBoundaries_Integration should_OnlyCoordinateUseCases_NeverExecuteDomainLogicDirectly","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394054818,"status":"passed","title":"should_OnlyCoordinateUseCases_NeverExecuteDomainLogicDirectly"},{"ancestorTitles":["FunctionModelManagementService Integration Tests","Clean Architecture Compliance","architecturalBoundaries_Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelManagementService Integration Tests Clean Architecture Compliance architecturalBoundaries_Integration should_EnforceLayerBoundaries_InServiceCoordination","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054819,"status":"passed","title":"should_EnforceLayerBoundaries_InServiceCoordination"}],"endTime":1756394054820,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\integration\\application\\function-model-management-service.integration.test.ts","startTime":1756394054331,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["WorkflowExecutionService Integration Tests","Complete Workflow Execution Pipeline"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Complete Workflow Execution Pipeline should coordinate all use cases for successful workflow execution","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"startAt":1756394054465,"status":"passed","title":"should coordinate all use cases for successful workflow execution"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Complete Workflow Execution Pipeline"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Complete Workflow Execution Pipeline should handle dependency analysis failure in coordination pipeline","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054469,"status":"passed","title":"should handle dependency analysis failure in coordination pipeline"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Complete Workflow Execution Pipeline"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Complete Workflow Execution Pipeline should handle context access failure in coordination pipeline","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054470,"status":"passed","title":"should handle context access failure in coordination pipeline"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Execution State Management"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Execution State Management should track execution progress through all phases","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394054471,"status":"passed","title":"should track execution progress through all phases"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Execution State Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Execution State Management should provide accurate execution status during workflow execution","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054477,"status":"passed","title":"should provide accurate execution status during workflow execution"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Execution State Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Execution State Management should support pausing and resuming workflow execution","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054478,"status":"passed","title":"should support pausing and resuming workflow execution"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Execution State Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Execution State Management should support stopping workflow execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054479,"status":"passed","title":"should support stopping workflow execution"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Failure Recovery Across Use Case Boundaries"],"duration":211,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Failure Recovery Across Use Case Boundaries should recover from orchestration failure with retry mechanism","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054479,"status":"passed","title":"should recover from orchestration failure with retry mechanism"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Failure Recovery Across Use Case Boundaries"],"duration":123,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Failure Recovery Across Use Case Boundaries should fail after exceeding maximum retry attempts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054690,"status":"passed","title":"should fail after exceeding maximum retry attempts"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Failure Recovery Across Use Case Boundaries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Failure Recovery Across Use Case Boundaries should handle cross-boundary error propagation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054813,"status":"passed","title":"should handle cross-boundary error propagation"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Real-Time Monitoring Capabilities"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Real-Time Monitoring Capabilities should provide real-time progress updates with detailed metrics","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394054814,"status":"passed","title":"should provide real-time progress updates with detailed metrics"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Real-Time Monitoring Capabilities"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Real-Time Monitoring Capabilities should track resource utilization and performance metrics","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394054816,"status":"passed","title":"should track resource utilization and performance metrics"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Clean Architecture Compliance should maintain proper dependency isolation between use cases","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394054817,"status":"passed","title":"should maintain proper dependency isolation between use cases"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Clean Architecture Compliance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Clean Architecture Compliance should handle invalid request data with proper validation","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394054818,"status":"passed","title":"should handle invalid request data with proper validation"},{"ancestorTitles":["WorkflowExecutionService Integration Tests","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowExecutionService Integration Tests Clean Architecture Compliance should properly coordinate use cases using Result pattern","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054820,"status":"passed","title":"should properly coordinate use cases using Result pattern"}],"endTime":1756394054822,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\integration\\use-cases\\workflow-execution-service.integration.test.ts","startTime":1756394054221,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["NodeMetadata","Factory Creation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Factory Creation should create node metadata with valid properties","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054856,"status":"passed","title":"should create node metadata with valid properties"},{"ancestorTitles":["NodeMetadata","Factory Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Factory Creation should create metadata with minimal required properties","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054858,"status":"passed","title":"should create metadata with minimal required properties"},{"ancestorTitles":["NodeMetadata","Factory Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Factory Creation should create metadata with optional properties","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054859,"status":"passed","title":"should create metadata with optional properties"},{"ancestorTitles":["NodeMetadata","Factory Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Factory Creation should set creation and update timestamps","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054860,"status":"passed","title":"should set creation and update timestamps"},{"ancestorTitles":["NodeMetadata","Property Access"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Property Access should provide access to all properties","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054862,"status":"passed","title":"should provide access to all properties"},{"ancestorTitles":["NodeMetadata","Property Access"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Property Access should provide defensive copies of vector embedding","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054863,"status":"passed","title":"should provide defensive copies of vector embedding"},{"ancestorTitles":["NodeMetadata","Property Access"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Property Access should provide defensive copies of search keywords","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054863,"status":"passed","title":"should provide defensive copies of search keywords"},{"ancestorTitles":["NodeMetadata","Property Access"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Property Access should provide defensive copies of AI agent config","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054864,"status":"passed","title":"should provide defensive copies of AI agent config"},{"ancestorTitles":["NodeMetadata","Property Access"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Property Access should provide defensive copies of visual properties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054864,"status":"passed","title":"should provide defensive copies of visual properties"},{"ancestorTitles":["NodeMetadata","Property Access"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Property Access should provide defensive copies of semantic tags","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054865,"status":"passed","title":"should provide defensive copies of semantic tags"},{"ancestorTitles":["NodeMetadata","Position Management"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Position Management should update position successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054865,"status":"passed","title":"should update position successfully"},{"ancestorTitles":["NodeMetadata","Vector Embedding Management"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Vector Embedding Management should update vector embedding successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054870,"status":"passed","title":"should update vector embedding successfully"},{"ancestorTitles":["NodeMetadata","Vector Embedding Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Vector Embedding Management should reject empty vector embedding","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054874,"status":"passed","title":"should reject empty vector embedding"},{"ancestorTitles":["NodeMetadata","Vector Embedding Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Vector Embedding Management should reject vector embedding exceeding 4096 dimensions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054875,"status":"passed","title":"should reject vector embedding exceeding 4096 dimensions"},{"ancestorTitles":["NodeMetadata","Vector Embedding Management"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Vector Embedding Management should allow vector embedding with exactly 4096 dimensions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054875,"status":"passed","title":"should allow vector embedding with exactly 4096 dimensions"},{"ancestorTitles":["NodeMetadata","Vector Embedding Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Vector Embedding Management should reject non-finite numbers in embedding","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054889,"status":"passed","title":"should reject non-finite numbers in embedding"},{"ancestorTitles":["NodeMetadata","Vector Embedding Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Vector Embedding Management should reject infinite numbers in embedding","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054889,"status":"passed","title":"should reject infinite numbers in embedding"},{"ancestorTitles":["NodeMetadata","Vector Embedding Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Vector Embedding Management should create defensive copy of embedding","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054890,"status":"passed","title":"should create defensive copy of embedding"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should add search keyword successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054890,"status":"passed","title":"should add search keyword successfully"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should normalize keywords to lowercase","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054905,"status":"passed","title":"should normalize keywords to lowercase"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should reject empty keyword","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054906,"status":"passed","title":"should reject empty keyword"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should reject whitespace-only keyword","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054906,"status":"passed","title":"should reject whitespace-only keyword"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should reject duplicate keyword","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054906,"status":"passed","title":"should reject duplicate keyword"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should reject more than 50 keywords","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054906,"status":"passed","title":"should reject more than 50 keywords"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should remove search keyword successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054907,"status":"passed","title":"should remove search keyword successfully"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should reject removing non-existent keyword","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054921,"status":"passed","title":"should reject removing non-existent keyword"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should update all search keywords successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054922,"status":"passed","title":"should update all search keywords successfully"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should normalize and deduplicate keywords during update","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054936,"status":"passed","title":"should normalize and deduplicate keywords during update"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should reject updating with more than 50 keywords","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054936,"status":"passed","title":"should reject updating with more than 50 keywords"},{"ancestorTitles":["NodeMetadata","Search Keywords Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search Keywords Management should filter out empty keywords during update","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054937,"status":"passed","title":"should filter out empty keywords during update"},{"ancestorTitles":["NodeMetadata","AI Agent Config Management"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata AI Agent Config Management should update AI agent config successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054937,"status":"passed","title":"should update AI agent config successfully"},{"ancestorTitles":["NodeMetadata","AI Agent Config Management"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata AI Agent Config Management should allow setting config to undefined","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054951,"status":"passed","title":"should allow setting config to undefined"},{"ancestorTitles":["NodeMetadata","AI Agent Config Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata AI Agent Config Management should create defensive copy of config","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054967,"status":"passed","title":"should create defensive copy of config"},{"ancestorTitles":["NodeMetadata","Visual Properties Management"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Visual Properties Management should update visual properties successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054968,"status":"passed","title":"should update visual properties successfully"},{"ancestorTitles":["NodeMetadata","Visual Properties Management"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Visual Properties Management should allow setting properties to undefined","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054982,"status":"passed","title":"should allow setting properties to undefined"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should add semantic tag successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054985,"status":"passed","title":"should add semantic tag successfully"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should initialize semantic tags array if undefined","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054997,"status":"passed","title":"should initialize semantic tags array if undefined"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should normalize tags to lowercase","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054998,"status":"passed","title":"should normalize tags to lowercase"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should reject empty tag","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054998,"status":"passed","title":"should reject empty tag"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should reject whitespace-only tag","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054999,"status":"passed","title":"should reject whitespace-only tag"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should reject duplicate tag","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054999,"status":"passed","title":"should reject duplicate tag"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should reject more than 20 tags","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054999,"status":"passed","title":"should reject more than 20 tags"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should remove semantic tag successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055000,"status":"passed","title":"should remove semantic tag successfully"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should reject removing tag when no tags exist","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055013,"status":"passed","title":"should reject removing tag when no tags exist"},{"ancestorTitles":["NodeMetadata","Semantic Tags Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Semantic Tags Management should reject removing non-existent tag","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055014,"status":"passed","title":"should reject removing non-existent tag"},{"ancestorTitles":["NodeMetadata","Feature Detection Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Feature Detection Methods should detect vector embedding presence","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055014,"status":"passed","title":"should detect vector embedding presence"},{"ancestorTitles":["NodeMetadata","Feature Detection Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Feature Detection Methods should detect AI agent config presence","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055014,"status":"passed","title":"should detect AI agent config presence"},{"ancestorTitles":["NodeMetadata","Feature Detection Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Feature Detection Methods should detect visual properties presence","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055015,"status":"passed","title":"should detect visual properties presence"},{"ancestorTitles":["NodeMetadata","Feature Detection Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Feature Detection Methods should detect semantic tags presence","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055015,"status":"passed","title":"should detect semantic tags presence"},{"ancestorTitles":["NodeMetadata","Search and Matching"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search and Matching should match exact keywords","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055016,"status":"passed","title":"should match exact keywords"},{"ancestorTitles":["NodeMetadata","Search and Matching"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search and Matching should match partial keywords","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055016,"status":"passed","title":"should match partial keywords"},{"ancestorTitles":["NodeMetadata","Search and Matching"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search and Matching should handle case-insensitive keyword matching","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055017,"status":"passed","title":"should handle case-insensitive keyword matching"},{"ancestorTitles":["NodeMetadata","Search and Matching"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search and Matching should match exact semantic tags","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055017,"status":"passed","title":"should match exact semantic tags"},{"ancestorTitles":["NodeMetadata","Search and Matching"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search and Matching should handle case-insensitive semantic tag matching","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055018,"status":"passed","title":"should handle case-insensitive semantic tag matching"},{"ancestorTitles":["NodeMetadata","Search and Matching"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Search and Matching should return false for semantic tag matching when no tags exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055018,"status":"passed","title":"should return false for semantic tag matching when no tags exist"},{"ancestorTitles":["NodeMetadata","Similarity Calculation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Similarity Calculation should calculate cosine similarity correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055019,"status":"passed","title":"should calculate cosine similarity correctly"},{"ancestorTitles":["NodeMetadata","Similarity Calculation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Similarity Calculation should return 0 similarity when one metadata has no embedding","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055019,"status":"passed","title":"should return 0 similarity when one metadata has no embedding"},{"ancestorTitles":["NodeMetadata","Similarity Calculation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Similarity Calculation should return 0 similarity for different dimension embeddings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055020,"status":"passed","title":"should return 0 similarity for different dimension embeddings"},{"ancestorTitles":["NodeMetadata","Similarity Calculation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Similarity Calculation should handle zero magnitude vectors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055020,"status":"passed","title":"should handle zero magnitude vectors"},{"ancestorTitles":["NodeMetadata","Similarity Calculation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Similarity Calculation should calculate similarity for complex vectors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055020,"status":"passed","title":"should calculate similarity for complex vectors"},{"ancestorTitles":["NodeMetadata","Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Equality and Comparison should be equal when metadata IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055021,"status":"passed","title":"should be equal when metadata IDs match"},{"ancestorTitles":["NodeMetadata","Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Equality and Comparison should not be equal when metadata IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055021,"status":"passed","title":"should not be equal when metadata IDs differ"},{"ancestorTitles":["NodeMetadata","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Validation Rules should reject empty entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055021,"status":"passed","title":"should reject empty entity ID"},{"ancestorTitles":["NodeMetadata","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Validation Rules should reject whitespace-only entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055022,"status":"passed","title":"should reject whitespace-only entity ID"},{"ancestorTitles":["NodeMetadata","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Validation Rules should reject empty node type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055022,"status":"passed","title":"should reject empty node type"},{"ancestorTitles":["NodeMetadata","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Validation Rules should reject whitespace-only node type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055022,"status":"passed","title":"should reject whitespace-only node type"},{"ancestorTitles":["NodeMetadata","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Validation Rules should reject more than 50 search keywords","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055023,"status":"passed","title":"should reject more than 50 search keywords"},{"ancestorTitles":["NodeMetadata","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Validation Rules should reject more than 20 semantic tags","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055023,"status":"passed","title":"should reject more than 20 semantic tags"},{"ancestorTitles":["NodeMetadata","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Validation Rules should reject vector embedding exceeding 4096 dimensions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055023,"status":"passed","title":"should reject vector embedding exceeding 4096 dimensions"},{"ancestorTitles":["NodeMetadata","Business Logic Integration"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Business Logic Integration should maintain consistency during complex operations","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394055023,"status":"passed","title":"should maintain consistency during complex operations"},{"ancestorTitles":["NodeMetadata","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Business Logic Integration should support all feature types","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394055030,"status":"passed","title":"should support all feature types"},{"ancestorTitles":["NodeMetadata","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeMetadata Business Logic Integration should handle search and similarity workflows","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394055031,"status":"passed","title":"should handle search and similarity workflows"}],"endTime":1756394055034,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\node-metadata.test.ts","startTime":1756394054709,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["IONode","creation"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode creation should create input node with valid properties","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394054997,"status":"passed","title":"should create input node with valid properties"},{"ancestorTitles":["IONode","creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode creation should create output node with valid properties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055002,"status":"passed","title":"should create output node with valid properties"},{"ancestorTitles":["IONode","creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode creation should create node with custom properties","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055003,"status":"passed","title":"should create node with custom properties"},{"ancestorTitles":["IONode","validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode validation should validate successful input node","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055003,"status":"passed","title":"should validate successful input node"},{"ancestorTitles":["IONode","validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode validation should validate successful output node","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055004,"status":"passed","title":"should validate successful output node"},{"ancestorTitles":["IONode","validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode validation should detect invalid node name","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055004,"status":"passed","title":"should detect invalid node name"},{"ancestorTitles":["IONode","validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode validation should detect missing model ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055005,"status":"passed","title":"should detect missing model ID"},{"ancestorTitles":["IONode","validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode validation should warn about nodes without descriptions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055006,"status":"passed","title":"should warn about nodes without descriptions"},{"ancestorTitles":["IONode","IO type specific validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode IO type specific validation should validate input nodes cannot have circular dependencies","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055006,"status":"passed","title":"should validate input nodes cannot have circular dependencies"},{"ancestorTitles":["IONode","IO type specific validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode IO type specific validation should validate output nodes must have at least one dependency","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055007,"status":"passed","title":"should validate output nodes must have at least one dependency"},{"ancestorTitles":["IONode","IO type specific validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode IO type specific validation should allow output nodes with valid dependencies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055007,"status":"passed","title":"should allow output nodes with valid dependencies"},{"ancestorTitles":["IONode","dependency management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode dependency management should add dependencies successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055008,"status":"passed","title":"should add dependencies successfully"},{"ancestorTitles":["IONode","dependency management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode dependency management should prevent duplicate dependencies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055008,"status":"passed","title":"should prevent duplicate dependencies"},{"ancestorTitles":["IONode","dependency management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode dependency management should remove dependencies successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055008,"status":"passed","title":"should remove dependencies successfully"},{"ancestorTitles":["IONode","dependency management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode dependency management should handle removing non-existent dependency","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055009,"status":"passed","title":"should handle removing non-existent dependency"},{"ancestorTitles":["IONode","configuration management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode configuration management should update configuration successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055009,"status":"passed","title":"should update configuration successfully"},{"ancestorTitles":["IONode","configuration management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode configuration management should validate configuration changes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055010,"status":"passed","title":"should validate configuration changes"},{"ancestorTitles":["IONode","position and layout"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode position and layout should update position successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055010,"status":"passed","title":"should update position successfully"},{"ancestorTitles":["IONode","position and layout"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode position and layout should validate position boundaries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055011,"status":"passed","title":"should validate position boundaries"},{"ancestorTitles":["IONode","position and layout"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode position and layout should enforce maximum position limits","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055011,"status":"passed","title":"should enforce maximum position limits"},{"ancestorTitles":["IONode","equality and identity"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode equality and identity should be equal when node IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055011,"status":"passed","title":"should be equal when node IDs match"},{"ancestorTitles":["IONode","equality and identity"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode equality and identity should not be equal when node IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055012,"status":"passed","title":"should not be equal when node IDs differ"},{"ancestorTitles":["IONode","serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode serialization should convert to object representation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055012,"status":"passed","title":"should convert to object representation"},{"ancestorTitles":["IONode","serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode serialization should create from object representation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055013,"status":"passed","title":"should create from object representation"},{"ancestorTitles":["IONode","business rules enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode business rules enforcement should enforce input node business rules","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055014,"status":"passed","title":"should enforce input node business rules"},{"ancestorTitles":["IONode","business rules enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode business rules enforcement should enforce output node business rules","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055014,"status":"passed","title":"should enforce output node business rules"},{"ancestorTitles":["IONode","business rules enforcement"],"duration":19,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode business rules enforcement should prevent modification of immutable properties","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055015,"status":"passed","title":"should prevent modification of immutable properties"},{"ancestorTitles":["IONode","edge cases and error handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode edge cases and error handling should handle empty dependency arrays","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055034,"status":"passed","title":"should handle empty dependency arrays"},{"ancestorTitles":["IONode","edge cases and error handling"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode edge cases and error handling should handle large configuration objects","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055035,"status":"passed","title":"should handle large configuration objects"},{"ancestorTitles":["IONode","edge cases and error handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"IONode edge cases and error handling should handle unicode in node names","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055040,"status":"passed","title":"should handle unicode in node names"}],"endTime":1756394055041,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\nodes\\io-node.test.ts","startTime":1756394054816,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","TetherNode Business Rules Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation TetherNode Business Rules Validation TetherNodeCreation_WithValidSpindleConfiguration_ShouldSucceed","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394055020,"status":"passed","title":"TetherNodeCreation_WithValidSpindleConfiguration_ShouldSucceed"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","TetherNode Business Rules Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation TetherNode Business Rules Validation TetherNodeConfiguration_WithInvalidSpindleReference_ShouldFailValidation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055023,"status":"passed","title":"TetherNodeConfiguration_WithInvalidSpindleReference_ShouldFailValidation"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","TetherNode Business Rules Validation"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation TetherNode Business Rules Validation TetherNodeExecution_WithResourceConstraints_ShouldEnforceResourceLimits","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394055023,"status":"passed","title":"TetherNodeExecution_WithResourceConstraints_ShouldEnforceResourceLimits"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","TetherNode Business Rules Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation TetherNode Business Rules Validation TetherNodeRetryPolicy_ForSpindleFailures_ShouldImplementIntelligentBackoff","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394055028,"status":"passed","title":"TetherNodeRetryPolicy_ForSpindleFailures_ShouldImplementIntelligentBackoff"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","KBNode Business Rules Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation KBNode Business Rules Validation KBNodeCreation_WithValidRACIAndDocumentation_ShouldSucceed","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394055029,"status":"passed","title":"KBNodeCreation_WithValidRACIAndDocumentation_ShouldSucceed"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","KBNode Business Rules Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation KBNode Business Rules Validation KBNodeRACIAssignment_MustHaveAtLeastOneResponsibleParty_ShouldEnforceRule","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055032,"status":"passed","title":"KBNodeRACIAssignment_MustHaveAtLeastOneResponsibleParty_ShouldEnforceRule"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","KBNode Business Rules Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation KBNode Business Rules Validation KBNodeSearchOptimization_WithSemanticKeywords_ShouldEnableAIDiscovery","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394055033,"status":"passed","title":"KBNodeSearchOptimization_WithSemanticKeywords_ShouldEnableAIDiscovery"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","KBNode Business Rules Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation KBNode Business Rules Validation KBNodeDocumentationContext_ShouldProvideRichContextualInformation","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394055034,"status":"passed","title":"KBNodeDocumentationContext_ShouldProvideRichContextualInformation"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","FunctionModelContainer Business Rules Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation FunctionModelContainer Business Rules Validation FunctionModelContainerCreation_WithValidNestedModel_ShouldSucceed","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"startAt":1756394055035,"status":"passed","title":"FunctionModelContainerCreation_WithValidNestedModel_ShouldSucceed"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","FunctionModelContainer Business Rules Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation FunctionModelContainer Business Rules Validation FunctionModelContainer_SelfReference_ShouldPreventInfiniteNesting","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055037,"status":"passed","title":"FunctionModelContainer_SelfReference_ShouldPreventInfiniteNesting"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","FunctionModelContainer Business Rules Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation FunctionModelContainer Business Rules Validation FunctionModelContainer_ContextInheritance_ShouldFollowHierarchicalRules","invocations":1,"location":null,"numPassingAsserts":17,"retryReasons":[],"startAt":1756394055037,"status":"passed","title":"FunctionModelContainer_ContextInheritance_ShouldFollowHierarchicalRules"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","FunctionModelContainer Business Rules Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation FunctionModelContainer Business Rules Validation FunctionModelContainer_OrchestrationModes_ShouldSupportDifferentIntegrationPatterns","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055040,"status":"passed","title":"FunctionModelContainer_OrchestrationModes_ShouldSupportDifferentIntegrationPatterns"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","Shared Action Node Business Rules Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation Shared Action Node Business Rules Validation ActionNodeExecutionOrder_WithinSameContainer_ShouldBeUnique","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055041,"status":"passed","title":"ActionNodeExecutionOrder_WithinSameContainer_ShouldBeUnique"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","Shared Action Node Business Rules Validation"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation Shared Action Node Business Rules Validation ActionNodePriority_ShouldBeWithinValidRange_AndAffectParallelExecution","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394055043,"status":"passed","title":"ActionNodePriority_ShouldBeWithinValidRange_AndAffectParallelExecution"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","Shared Action Node Business Rules Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation Shared Action Node Business Rules Validation ActionNodeStatusTransitions_ShouldFollowValidLifecycleFlow","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394055047,"status":"passed","title":"ActionNodeStatusTransitions_ShouldFollowValidLifecycleFlow"},{"ancestorTitles":["Action Node Type-Specific Business Rules - Domain Compliance Validation","Shared Action Node Business Rules Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type-Specific Business Rules - Domain Compliance Validation Shared Action Node Business Rules Validation ActionNodeRetryPolicy_ShouldBeValidForActionType_AndExecutionContext","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055048,"status":"passed","title":"ActionNodeRetryPolicy_ShouldBeValidForActionType_AndExecutionContext"}],"endTime":1756394055050,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\action-node-type-specific-rules.test.ts","startTime":1756394054838,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Sibling Context Access Rules"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Sibling Context Access Rules SiblingNodes_ShouldHaveReadOnlyAccessToEachOthersContext","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394055024,"status":"passed","title":"SiblingNodes_ShouldHaveReadOnlyAccessToEachOthersContext"},{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Sibling Context Access Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Sibling Context Access Rules OnlyChildWithoutSiblings_ShouldAccessOnlyOwnContext","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055029,"status":"passed","title":"OnlyChildWithoutSiblings_ShouldAccessOnlyOwnContext"},{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Parent-Child Context Access Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Parent-Child Context Access Rules ParentContainerNode_ShouldHaveFullAccessToAllChildContexts","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394055030,"status":"passed","title":"ParentContainerNode_ShouldHaveFullAccessToAllChildContexts"},{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Parent-Child Context Access Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Parent-Child Context Access Rules ChildNodes_ShouldHaveReadOnlyAccessToParentContext","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055032,"status":"passed","title":"ChildNodes_ShouldHaveReadOnlyAccessToParentContext"},{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Uncle/Aunt Lateral Access Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Uncle/Aunt Lateral Access Rules NephewNiece_ShouldHaveReadOnlyAccessToUncleAuntContexts","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394055034,"status":"passed","title":"NephewNiece_ShouldHaveReadOnlyAccessToUncleAuntContexts"},{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Deep Nesting Hierarchical Access Rules"],"duration":37,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Deep Nesting Hierarchical Access Rules NestedFunctionModels_ShouldMaintainHierarchicalAccessAcrossMultipleLevels","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394055036,"status":"passed","title":"NestedFunctionModels_ShouldMaintainHierarchicalAccessAcrossMultipleLevels"},{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Deep Nesting Hierarchical Access Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Deep Nesting Hierarchical Access Rules FractalOrchestrationPatterns_ShouldMaintainConsistentAccessAtAllLevels","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394055073,"status":"passed","title":"FractalOrchestrationPatterns_ShouldMaintainConsistentAccessAtAllLevels"},{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Context Type-Specific Access Patterns"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Context Type-Specific Access Patterns TetherNodeContext_ShouldProvideExecutionAndAIAgentData","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"startAt":1756394055075,"status":"passed","title":"TetherNodeContext_ShouldProvideExecutionAndAIAgentData"},{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Context Type-Specific Access Patterns"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Context Type-Specific Access Patterns KbNodeContext_ShouldProvideKnowledgeBaseContentAndMetadata","invocations":1,"location":null,"numPassingAsserts":21,"retryReasons":[],"startAt":1756394055077,"status":"passed","title":"KbNodeContext_ShouldProvideKnowledgeBaseContentAndMetadata"},{"ancestorTitles":["Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance","Context Type-Specific Access Patterns"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Hierarchical Context Access Comprehensive Validation - Domain Rule Compliance Context Type-Specific Access Patterns FunctionModelContainerContext_ShouldProvideNestedModelAggregation","invocations":1,"location":null,"numPassingAsserts":23,"retryReasons":[],"startAt":1756394055080,"status":"passed","title":"FunctionModelContainerContext_ShouldProvideNestedModelAggregation"}],"endTime":1756394055084,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\hierarchical-context-access.test.ts","startTime":1756394054836,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["StageNode","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode creation should create stage node with valid properties","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394055238,"status":"passed","title":"should create stage node with valid properties"},{"ancestorTitles":["StageNode","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode creation should create stage node with custom properties","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055240,"status":"passed","title":"should create stage node with custom properties"},{"ancestorTitles":["StageNode","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode creation should initialize with empty action nodes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055241,"status":"passed","title":"should initialize with empty action nodes"},{"ancestorTitles":["StageNode","validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode validation should validate successful stage node","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055242,"status":"passed","title":"should validate successful stage node"},{"ancestorTitles":["StageNode","validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode validation should detect invalid timeout values","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055243,"status":"passed","title":"should detect invalid timeout values"},{"ancestorTitles":["StageNode","validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode validation should warn about stages without action nodes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055243,"status":"passed","title":"should warn about stages without action nodes"},{"ancestorTitles":["StageNode","validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode validation should validate retry policy configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055244,"status":"passed","title":"should validate retry policy configuration"},{"ancestorTitles":["StageNode","validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode validation should warn about excessive timeout values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055244,"status":"passed","title":"should warn about excessive timeout values"},{"ancestorTitles":["StageNode","action node management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode action node management should add action node successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055245,"status":"passed","title":"should add action node successfully"},{"ancestorTitles":["StageNode","action node management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode action node management should reject action node from different model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055246,"status":"passed","title":"should reject action node from different model"},{"ancestorTitles":["StageNode","action node management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode action node management should reject action node with different parent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055246,"status":"passed","title":"should reject action node with different parent"},{"ancestorTitles":["StageNode","action node management"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode action node management should prevent duplicate action nodes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055247,"status":"passed","title":"should prevent duplicate action nodes"},{"ancestorTitles":["StageNode","action node management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode action node management should remove action node successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055250,"status":"passed","title":"should remove action node successfully"},{"ancestorTitles":["StageNode","action node management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode action node management should handle removing non-existent action node","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055251,"status":"passed","title":"should handle removing non-existent action node"},{"ancestorTitles":["StageNode","action node management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode action node management should clear all action nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055251,"status":"passed","title":"should clear all action nodes"},{"ancestorTitles":["StageNode","execution configuration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode execution configuration should update timeout successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055252,"status":"passed","title":"should update timeout successfully"},{"ancestorTitles":["StageNode","execution configuration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode execution configuration should reject invalid timeout values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055252,"status":"passed","title":"should reject invalid timeout values"},{"ancestorTitles":["StageNode","execution configuration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode execution configuration should update parallel execution setting","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055252,"status":"passed","title":"should update parallel execution setting"},{"ancestorTitles":["StageNode","execution configuration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode execution configuration should update retry policy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055253,"status":"passed","title":"should update retry policy"},{"ancestorTitles":["StageNode","execution state management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode execution state management should track execution state correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055254,"status":"passed","title":"should track execution state correctly"},{"ancestorTitles":["StageNode","execution state management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode execution state management should complete execution successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055254,"status":"passed","title":"should complete execution successfully"},{"ancestorTitles":["StageNode","execution state management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode execution state management should handle execution failure","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055255,"status":"passed","title":"should handle execution failure"},{"ancestorTitles":["StageNode","execution state management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode execution state management should prevent completing execution when not executing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055255,"status":"passed","title":"should prevent completing execution when not executing"},{"ancestorTitles":["StageNode","performance and complexity analysis"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode performance and complexity analysis should calculate stage complexity based on actions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055256,"status":"passed","title":"should calculate stage complexity based on actions"},{"ancestorTitles":["StageNode","performance and complexity analysis"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode performance and complexity analysis should estimate execution time based on actions and configuration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055257,"status":"passed","title":"should estimate execution time based on actions and configuration"},{"ancestorTitles":["StageNode","performance and complexity analysis"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode performance and complexity analysis should analyze resource requirements","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055258,"status":"passed","title":"should analyze resource requirements"},{"ancestorTitles":["StageNode","serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode serialization should convert to object representation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055259,"status":"passed","title":"should convert to object representation"},{"ancestorTitles":["StageNode","serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode serialization should create from object representation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055260,"status":"passed","title":"should create from object representation"},{"ancestorTitles":["StageNode","business rules enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode business rules enforcement should enforce stage naming conventions","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055261,"status":"passed","title":"should enforce stage naming conventions"},{"ancestorTitles":["StageNode","business rules enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode business rules enforcement should warn about performance anti-patterns","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055261,"status":"passed","title":"should warn about performance anti-patterns"},{"ancestorTitles":["StageNode","business rules enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode business rules enforcement should prevent circular dependencies in stage configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055262,"status":"passed","title":"should prevent circular dependencies in stage configuration"},{"ancestorTitles":["StageNode","edge cases and error handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode edge cases and error handling should handle empty action node arrays gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055263,"status":"passed","title":"should handle empty action node arrays gracefully"},{"ancestorTitles":["StageNode","edge cases and error handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode edge cases and error handling should handle null/undefined retry policies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055263,"status":"passed","title":"should handle null/undefined retry policies"},{"ancestorTitles":["StageNode","edge cases and error handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"StageNode edge cases and error handling should validate against extremely large timeout values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055263,"status":"passed","title":"should validate against extremely large timeout values"}],"endTime":1756394055265,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\nodes\\stage-node.test.ts","startTime":1756394055046,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["TetherNode","creation and initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode creation and initialization should create tether node with valid properties","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055276,"status":"passed","title":"should create tether node with valid properties"},{"ancestorTitles":["TetherNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode creation and initialization should reject creation with missing tether reference ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055278,"status":"passed","title":"should reject creation with missing tether reference ID"},{"ancestorTitles":["TetherNode","creation and initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode creation and initialization should reject creation with invalid CPU requirement","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055279,"status":"passed","title":"should reject creation with invalid CPU requirement"},{"ancestorTitles":["TetherNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode creation and initialization should reject creation with invalid memory requirement","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055279,"status":"passed","title":"should reject creation with invalid memory requirement"},{"ancestorTitles":["TetherNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode creation and initialization should reject creation with invalid timeout","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055280,"status":"passed","title":"should reject creation with invalid timeout"},{"ancestorTitles":["TetherNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode creation and initialization should create node with minimal resource requirements","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055281,"status":"passed","title":"should create node with minimal resource requirements"},{"ancestorTitles":["TetherNode","tether reference management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode tether reference management should update tether reference ID successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055282,"status":"passed","title":"should update tether reference ID successfully"},{"ancestorTitles":["TetherNode","tether reference management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode tether reference management should trim whitespace from tether reference ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055282,"status":"passed","title":"should trim whitespace from tether reference ID"},{"ancestorTitles":["TetherNode","tether reference management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode tether reference management should reject empty tether reference ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055283,"status":"passed","title":"should reject empty tether reference ID"},{"ancestorTitles":["TetherNode","tether reference management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode tether reference management should reject whitespace-only tether reference ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055284,"status":"passed","title":"should reject whitespace-only tether reference ID"},{"ancestorTitles":["TetherNode","tether reference management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode tether reference management should update timestamp when reference ID changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055285,"status":"passed","title":"should update timestamp when reference ID changes"},{"ancestorTitles":["TetherNode","execution parameters management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution parameters management should update execution parameters successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055286,"status":"passed","title":"should update execution parameters successfully"},{"ancestorTitles":["TetherNode","execution parameters management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution parameters management should replace all execution parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055286,"status":"passed","title":"should replace all execution parameters"},{"ancestorTitles":["TetherNode","execution parameters management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution parameters management should handle empty parameters object","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055287,"status":"passed","title":"should handle empty parameters object"},{"ancestorTitles":["TetherNode","execution parameters management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution parameters management should create defensive copy of parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055288,"status":"passed","title":"should create defensive copy of parameters"},{"ancestorTitles":["TetherNode","output mapping management"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode output mapping management should update output mapping successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055288,"status":"passed","title":"should update output mapping successfully"},{"ancestorTitles":["TetherNode","output mapping management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode output mapping management should replace all output mappings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055291,"status":"passed","title":"should replace all output mappings"},{"ancestorTitles":["TetherNode","output mapping management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode output mapping management should handle empty mapping object","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055292,"status":"passed","title":"should handle empty mapping object"},{"ancestorTitles":["TetherNode","output mapping management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode output mapping management should create defensive copy of mapping","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055292,"status":"passed","title":"should create defensive copy of mapping"},{"ancestorTitles":["TetherNode","execution triggers management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution triggers management should add execution trigger successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055293,"status":"passed","title":"should add execution trigger successfully"},{"ancestorTitles":["TetherNode","execution triggers management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution triggers management should trim whitespace from trigger","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055293,"status":"passed","title":"should trim whitespace from trigger"},{"ancestorTitles":["TetherNode","execution triggers management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution triggers management should reject empty trigger","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055293,"status":"passed","title":"should reject empty trigger"},{"ancestorTitles":["TetherNode","execution triggers management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution triggers management should reject whitespace-only trigger","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055294,"status":"passed","title":"should reject whitespace-only trigger"},{"ancestorTitles":["TetherNode","execution triggers management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution triggers management should reject duplicate triggers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055294,"status":"passed","title":"should reject duplicate triggers"},{"ancestorTitles":["TetherNode","execution triggers management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution triggers management should remove execution trigger successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055295,"status":"passed","title":"should remove execution trigger successfully"},{"ancestorTitles":["TetherNode","execution triggers management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution triggers management should reject removing non-existent trigger","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055295,"status":"passed","title":"should reject removing non-existent trigger"},{"ancestorTitles":["TetherNode","execution triggers management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode execution triggers management should handle trigger removal with whitespace","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055295,"status":"passed","title":"should handle trigger removal with whitespace"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should update CPU requirement successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055296,"status":"passed","title":"should update CPU requirement successfully"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should update memory requirement successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055296,"status":"passed","title":"should update memory requirement successfully"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should update timeout successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055297,"status":"passed","title":"should update timeout successfully"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should update multiple requirements at once","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055297,"status":"passed","title":"should update multiple requirements at once"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should reject invalid CPU requirement (too high)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055298,"status":"passed","title":"should reject invalid CPU requirement (too high)"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should reject invalid CPU requirement (too low)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055298,"status":"passed","title":"should reject invalid CPU requirement (too low)"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should reject invalid memory requirement (too high)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055299,"status":"passed","title":"should reject invalid memory requirement (too high)"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should reject invalid memory requirement (too low)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055300,"status":"passed","title":"should reject invalid memory requirement (too low)"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should reject invalid timeout (too high)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055300,"status":"passed","title":"should reject invalid timeout (too high)"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should reject invalid timeout (too low)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055301,"status":"passed","title":"should reject invalid timeout (too low)"},{"ancestorTitles":["TetherNode","resource requirements management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode resource requirements management should allow partial updates without affecting other values","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055301,"status":"passed","title":"should allow partial updates without affecting other values"},{"ancestorTitles":["TetherNode","integration configuration management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode integration configuration management should update API endpoints successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055302,"status":"passed","title":"should update API endpoints successfully"},{"ancestorTitles":["TetherNode","integration configuration management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode integration configuration management should update authentication config successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055303,"status":"passed","title":"should update authentication config successfully"},{"ancestorTitles":["TetherNode","integration configuration management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode integration configuration management should update headers successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055303,"status":"passed","title":"should update headers successfully"},{"ancestorTitles":["TetherNode","integration configuration management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode integration configuration management should update multiple config sections at once","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055304,"status":"passed","title":"should update multiple config sections at once"},{"ancestorTitles":["TetherNode","integration configuration management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode integration configuration management should handle undefined config sections","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055305,"status":"passed","title":"should handle undefined config sections"},{"ancestorTitles":["TetherNode","integration configuration management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode integration configuration management should create defensive copies of config objects","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055306,"status":"passed","title":"should create defensive copies of config objects"},{"ancestorTitles":["TetherNode","data access and immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode data access and immutability should return readonly tether data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055306,"status":"passed","title":"should return readonly tether data"},{"ancestorTitles":["TetherNode","data access and immutability"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode data access and immutability should return correct action type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055307,"status":"passed","title":"should return correct action type"},{"ancestorTitles":["TetherNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode timestamps and audit trail should update timestamp when tether data changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055307,"status":"passed","title":"should update timestamp when tether data changes"},{"ancestorTitles":["TetherNode","timestamps and audit trail"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode timestamps and audit trail should update timestamp when triggers change","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055307,"status":"passed","title":"should update timestamp when triggers change"},{"ancestorTitles":["TetherNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode timestamps and audit trail should update timestamp when resource requirements change","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055308,"status":"passed","title":"should update timestamp when resource requirements change"},{"ancestorTitles":["TetherNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"TetherNode timestamps and audit trail should update timestamp when integration config changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055308,"status":"passed","title":"should update timestamp when integration config changes"}],"endTime":1756394055310,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\nodes\\tether-node.test.ts","startTime":1756394055106,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","workflow execution"],"duration":115,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase workflow execution should execute a valid workflow successfully","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394055254,"status":"passed","title":"should execute a valid workflow successfully"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","workflow execution"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase workflow execution should handle dry run execution","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055369,"status":"passed","title":"should handle dry run execution"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","workflow execution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase workflow execution should validate command parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055372,"status":"passed","title":"should validate command parameters"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","workflow execution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase workflow execution should handle model not found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055372,"status":"passed","title":"should handle model not found"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","workflow execution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase workflow execution should check execution permissions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055372,"status":"passed","title":"should check execution permissions"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","workflow execution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase workflow execution should handle invalid workflows","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055373,"status":"passed","title":"should handle invalid workflows"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","workflow execution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase workflow execution should reject deleted models","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055374,"status":"passed","title":"should reject deleted models"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","execution control"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase execution control should get execution status","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055375,"status":"passed","title":"should get execution status"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","execution control"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase execution control should pause execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055375,"status":"passed","title":"should pause execution"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","execution control"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase execution control should resume execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055376,"status":"passed","title":"should resume execution"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","execution control"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase execution control should stop execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055376,"status":"passed","title":"should stop execution"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","error handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase error handling should handle repository errors gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055377,"status":"passed","title":"should handle repository errors gracefully"},{"ancestorTitles":["UC-005: ExecuteFunctionModelUseCase","error handling"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-005: ExecuteFunctionModelUseCase error handling should handle orchestration service errors","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055377,"status":"passed","title":"should handle orchestration service errors"}],"endTime":1756394055380,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\execute-function-model-use-case.test.ts","startTime":1756394055055,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Complete Cross-Feature Integration Workflows"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Complete Cross-Feature Integration Workflows CompleteWorkflow_CreateLinksCalculateStrengthDetectCycles_IntegratesAllUseCases","invocations":1,"location":null,"numPassingAsserts":26,"retryReasons":[],"startAt":1756394055275,"status":"passed","title":"CompleteWorkflow_CreateLinksCalculateStrengthDetectCycles_IntegratesAllUseCases"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Complete Cross-Feature Integration Workflows"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Complete Cross-Feature Integration Workflows CompleteWorkflow_MultiFeatureNetwork_HandlesComplexTopology","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055280,"status":"passed","title":"CompleteWorkflow_MultiFeatureNetwork_HandlesComplexTopology"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Network Analysis Capabilities with Complex Relationship Graphs"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Network Analysis Capabilities with Complex Relationship Graphs NetworkAnalysis_ComplexGraph_DetectsMultipleCyclesAndMetrics","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"startAt":1756394055282,"status":"passed","title":"NetworkAnalysis_ComplexGraph_DetectsMultipleCyclesAndMetrics"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Link Integrity Maintenance During Feature Modifications"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Link Integrity Maintenance During Feature Modifications LinkIntegrity_FeatureDeletion_DetectsAffectedLinksAndRecommendations","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055284,"status":"passed","title":"LinkIntegrity_FeatureDeletion_DetectsAffectedLinksAndRecommendations"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Link Integrity Maintenance During Feature Modifications"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Link Integrity Maintenance During Feature Modifications LinkIntegrity_FeatureArchival_WeakensLinksAppropriately","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055286,"status":"passed","title":"LinkIntegrity_FeatureArchival_WeakensLinksAppropriately"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Link Strength Evolution Over Time with Interaction Tracking"],"duration":36,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Link Strength Evolution Over Time with Interaction Tracking LinkStrengthEvolution_MultipleUpdates_TracksHistoryAndTrends","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394055286,"status":"passed","title":"LinkStrengthEvolution_MultipleUpdates_TracksHistoryAndTrends"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Link Strength Evolution Over Time with Interaction Tracking"],"duration":31,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Link Strength Evolution Over Time with Interaction Tracking LinkStrengthEvolution_NetworkEvolution_TracksTopologyChanges","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055322,"status":"passed","title":"LinkStrengthEvolution_NetworkEvolution_TracksTopologyChanges"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Concurrent Link Operations and Data Consistency"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Concurrent Link Operations and Data Consistency ConcurrentOperations_BatchLinkOperations_MaintainsConsistency","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394055353,"status":"passed","title":"ConcurrentOperations_BatchLinkOperations_MaintainsConsistency"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Concurrent Link Operations and Data Consistency"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Concurrent Link Operations and Data Consistency ConcurrentOperations_DuplicateBatchIds_PreventsConflicts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055355,"status":"passed","title":"ConcurrentOperations_DuplicateBatchIds_PreventsConflicts"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Performance with Large Feature Networks"],"duration":26,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Performance with Large Feature Networks Performance_LargeNetwork_CompletesWithinReasonableTime","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055356,"status":"passed","title":"Performance_LargeNetwork_CompletesWithinReasonableTime"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Performance with Large Feature Networks"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Performance with Large Feature Networks Performance_StrengthCalculations_ScalesWithNetworkSize","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055382,"status":"passed","title":"Performance_StrengthCalculations_ScalesWithNetworkSize"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Error Handling and Recovery Patterns"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Error Handling and Recovery Patterns ErrorHandling_RepositoryFailures_HandlesGracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055385,"status":"passed","title":"ErrorHandling_RepositoryFailures_HandlesGracefully"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Error Handling and Recovery Patterns"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Error Handling and Recovery Patterns ErrorHandling_BatchOperationFailures_ReportsDetailedErrors","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055386,"status":"passed","title":"ErrorHandling_BatchOperationFailures_ReportsDetailedErrors"},{"ancestorTitles":["CrossFeatureIntegrationService - Integration Tests","Real Integration Scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureIntegrationService - Integration Tests Real Integration Scenarios RealIntegration_CompleteFeatureLifecycle_MaintainsLinkIntegrity","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394055387,"status":"passed","title":"RealIntegration_CompleteFeatureLifecycle_MaintainsLinkIntegrity"}],"endTime":1756394055389,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\integration\\application\\cross-feature-integration-service.integration.test.ts","startTime":1756394055062,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Correct Mock Implementations","NodeContextAccessService Mock Factory"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Correct Mock Implementations NodeContextAccessService Mock Factory should create correct mock for NodeContextAccessService","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394054351,"status":"passed","title":"should create correct mock for NodeContextAccessService"},{"ancestorTitles":["Correct Mock Implementations","ActionNodeExecutionService Mock Factory"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Correct Mock Implementations ActionNodeExecutionService Mock Factory should create correct mock for ActionNodeExecutionService","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394054354,"status":"passed","title":"should create correct mock for ActionNodeExecutionService"},{"ancestorTitles":["Correct Mock Implementations","AIAgentOrchestrationService Mock Factory"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Correct Mock Implementations AIAgentOrchestrationService Mock Factory should create correct mock for AIAgentOrchestrationService","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054356,"status":"passed","title":"should create correct mock for AIAgentOrchestrationService"},{"ancestorTitles":["Correct Mock Implementations","BusinessRuleValidationService Mock Factory"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Correct Mock Implementations BusinessRuleValidationService Mock Factory should create correct mock for BusinessRuleValidationService","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054357,"status":"passed","title":"should create correct mock for BusinessRuleValidationService"},{"ancestorTitles":["Correct Mock Implementations","ManageErrorHandlingAndRecoveryUseCase Mock Factory"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Correct Mock Implementations ManageErrorHandlingAndRecoveryUseCase Mock Factory should create correct mock for ManageErrorHandlingAndRecoveryUseCase","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054358,"status":"passed","title":"should create correct mock for ManageErrorHandlingAndRecoveryUseCase"},{"ancestorTitles":["Correct Mock Implementations","Integration Test with Correct Mocks"],"duration":1055,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Correct Mock Implementations Integration Test with Correct Mocks should demonstrate proper mock usage in integration scenario","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054359,"status":"passed","title":"should demonstrate proper mock usage in integration scenario"},{"ancestorTitles":["Correct Mock Implementations","Integration Test with Correct Mocks"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Correct Mock Implementations Integration Test with Correct Mocks should demonstrate context service integration with correct methods","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394055414,"status":"passed","title":"should demonstrate context service integration with correct methods"},{"ancestorTitles":["Correct Mock Implementations","Common Mocking Mistakes to Avoid"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Correct Mock Implementations Common Mocking Mistakes to Avoid should document incorrect mocking patterns","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055416,"status":"passed","title":"should document incorrect mocking patterns"},{"ancestorTitles":["Correct Mock Implementations","Common Mocking Mistakes to Avoid"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Correct Mock Implementations Common Mocking Mistakes to Avoid should provide mock validation checklist","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055417,"status":"passed","title":"should provide mock validation checklist"}],"endTime":1756394055418,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\correct-mock-implementations.test.ts","startTime":1756394054098,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AIAgent","Factory Creation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Factory Creation should create AI agent with valid properties","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055488,"status":"passed","title":"should create AI agent with valid properties"},{"ancestorTitles":["AIAgent","Factory Creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Factory Creation should create feature-level agent without node ID","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055490,"status":"passed","title":"should create feature-level agent without node ID"},{"ancestorTitles":["AIAgent","Factory Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Factory Creation should create node-level agent with node ID","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055490,"status":"passed","title":"should create node-level agent with node ID"},{"ancestorTitles":["AIAgent","Factory Creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Factory Creation should initialize execution counters to zero","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055491,"status":"passed","title":"should initialize execution counters to zero"},{"ancestorTitles":["AIAgent","Factory Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Factory Creation should set creation and update timestamps","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055491,"status":"passed","title":"should set creation and update timestamps"},{"ancestorTitles":["AIAgent","Property Access"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Property Access should provide access to all properties","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394055492,"status":"passed","title":"should provide access to all properties"},{"ancestorTitles":["AIAgent","Property Access"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Property Access should provide readonly access to tools with defensive copies","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055494,"status":"passed","title":"should provide readonly access to tools with defensive copies"},{"ancestorTitles":["AIAgent","Property Access"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Property Access should provide readonly access to capabilities with defensive copy","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055498,"status":"passed","title":"should provide readonly access to capabilities with defensive copy"},{"ancestorTitles":["AIAgent","Property Access"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Property Access should return undefined for optional properties when not set","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055499,"status":"passed","title":"should return undefined for optional properties when not set"},{"ancestorTitles":["AIAgent","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Name Management should update name successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055499,"status":"passed","title":"should update name successfully"},{"ancestorTitles":["AIAgent","Name Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Name Management should trim whitespace from name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055500,"status":"passed","title":"should trim whitespace from name"},{"ancestorTitles":["AIAgent","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Name Management should reject empty name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055500,"status":"passed","title":"should reject empty name"},{"ancestorTitles":["AIAgent","Name Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Name Management should reject whitespace-only name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055501,"status":"passed","title":"should reject whitespace-only name"},{"ancestorTitles":["AIAgent","Name Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Name Management should reject name exceeding 100 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055501,"status":"passed","title":"should reject name exceeding 100 characters"},{"ancestorTitles":["AIAgent","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Name Management should allow name exactly 100 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055501,"status":"passed","title":"should allow name exactly 100 characters"},{"ancestorTitles":["AIAgent","Description Management"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Description Management should update description successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055502,"status":"passed","title":"should update description successfully"},{"ancestorTitles":["AIAgent","Description Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Description Management should allow undefined description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055508,"status":"passed","title":"should allow undefined description"},{"ancestorTitles":["AIAgent","Description Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Description Management should trim whitespace from description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055509,"status":"passed","title":"should trim whitespace from description"},{"ancestorTitles":["AIAgent","Description Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Description Management should allow empty string description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055509,"status":"passed","title":"should allow empty string description"},{"ancestorTitles":["AIAgent","Description Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Description Management should reject description exceeding 1000 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055509,"status":"passed","title":"should reject description exceeding 1000 characters"},{"ancestorTitles":["AIAgent","Description Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Description Management should allow description exactly 1000 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055510,"status":"passed","title":"should allow description exactly 1000 characters"},{"ancestorTitles":["AIAgent","Instructions Management"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Instructions Management should update instructions successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055510,"status":"passed","title":"should update instructions successfully"},{"ancestorTitles":["AIAgent","Instructions Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Instructions Management should trim whitespace from instructions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055523,"status":"passed","title":"should trim whitespace from instructions"},{"ancestorTitles":["AIAgent","Instructions Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Instructions Management should reject empty instructions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055524,"status":"passed","title":"should reject empty instructions"},{"ancestorTitles":["AIAgent","Instructions Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Instructions Management should reject whitespace-only instructions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055524,"status":"passed","title":"should reject whitespace-only instructions"},{"ancestorTitles":["AIAgent","Instructions Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Instructions Management should reject instructions exceeding 10000 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055525,"status":"passed","title":"should reject instructions exceeding 10000 characters"},{"ancestorTitles":["AIAgent","Instructions Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Instructions Management should allow instructions exactly 10000 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055525,"status":"passed","title":"should allow instructions exactly 10000 characters"},{"ancestorTitles":["AIAgent","Tools Management"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Tools Management should update tools successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055526,"status":"passed","title":"should update tools successfully"},{"ancestorTitles":["AIAgent","Tools Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Tools Management should handle custom tools","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055539,"status":"passed","title":"should handle custom tools"},{"ancestorTitles":["AIAgent","Tools Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Tools Management should reject tools with no available tools","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055539,"status":"passed","title":"should reject tools with no available tools"},{"ancestorTitles":["AIAgent","Tools Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Tools Management should reject duplicate tools","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055540,"status":"passed","title":"should reject duplicate tools"},{"ancestorTitles":["AIAgent","Tools Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Tools Management should reject configuration for unavailable tool","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055540,"status":"passed","title":"should reject configuration for unavailable tool"},{"ancestorTitles":["AIAgent","Tools Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Tools Management should create defensive copies of tools","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055541,"status":"passed","title":"should create defensive copies of tools"},{"ancestorTitles":["AIAgent","Capabilities Management"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Capabilities Management should update capabilities successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055541,"status":"passed","title":"should update capabilities successfully"},{"ancestorTitles":["AIAgent","Capabilities Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Capabilities Management should reject invalid max concurrent tasks (too low)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055545,"status":"passed","title":"should reject invalid max concurrent tasks (too low)"},{"ancestorTitles":["AIAgent","Capabilities Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Capabilities Management should reject invalid max concurrent tasks (too high)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055546,"status":"passed","title":"should reject invalid max concurrent tasks (too high)"},{"ancestorTitles":["AIAgent","Capabilities Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Capabilities Management should allow boundary values for max concurrent tasks","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055546,"status":"passed","title":"should allow boundary values for max concurrent tasks"},{"ancestorTitles":["AIAgent","Capabilities Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Capabilities Management should reject empty supported data types","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055547,"status":"passed","title":"should reject empty supported data types"},{"ancestorTitles":["AIAgent","Capabilities Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Capabilities Management should create defensive copy of capabilities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055547,"status":"passed","title":"should create defensive copy of capabilities"},{"ancestorTitles":["AIAgent","Enable/Disable Management"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Enable/Disable Management should enable agent successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055548,"status":"passed","title":"should enable agent successfully"},{"ancestorTitles":["AIAgent","Enable/Disable Management"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Enable/Disable Management should disable agent successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055554,"status":"passed","title":"should disable agent successfully"},{"ancestorTitles":["AIAgent","Execution Tracking"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Execution Tracking should record successful execution","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055569,"status":"passed","title":"should record successful execution"},{"ancestorTitles":["AIAgent","Execution Tracking"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Execution Tracking should record failed execution","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055585,"status":"passed","title":"should record failed execution"},{"ancestorTitles":["AIAgent","Execution Tracking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Execution Tracking should calculate average execution time correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055585,"status":"passed","title":"should calculate average execution time correctly"},{"ancestorTitles":["AIAgent","Execution Tracking"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Execution Tracking should reject negative execution time","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055586,"status":"passed","title":"should reject negative execution time"},{"ancestorTitles":["AIAgent","Execution Tracking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Execution Tracking should allow zero execution time","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055586,"status":"passed","title":"should allow zero execution time"},{"ancestorTitles":["AIAgent","Rate Calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Rate Calculations should return 0 success rate for no executions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055587,"status":"passed","title":"should return 0 success rate for no executions"},{"ancestorTitles":["AIAgent","Rate Calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Rate Calculations should calculate success rate correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055587,"status":"passed","title":"should calculate success rate correctly"},{"ancestorTitles":["AIAgent","Rate Calculations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Rate Calculations should handle 100% success rate","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055587,"status":"passed","title":"should handle 100% success rate"},{"ancestorTitles":["AIAgent","Rate Calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Rate Calculations should handle 100% failure rate","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055588,"status":"passed","title":"should handle 100% failure rate"},{"ancestorTitles":["AIAgent","Capability and Tool Checking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Capability and Tool Checking should check capabilities correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055588,"status":"passed","title":"should check capabilities correctly"},{"ancestorTitles":["AIAgent","Capability and Tool Checking"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Capability and Tool Checking should check tools correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055589,"status":"passed","title":"should check tools correctly"},{"ancestorTitles":["AIAgent","Equality and Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Equality and Comparison should be equal when agent IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055589,"status":"passed","title":"should be equal when agent IDs match"},{"ancestorTitles":["AIAgent","Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Equality and Comparison should not be equal when agent IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055590,"status":"passed","title":"should not be equal when agent IDs differ"},{"ancestorTitles":["AIAgent","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Validation Rules should reject empty agent name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055590,"status":"passed","title":"should reject empty agent name"},{"ancestorTitles":["AIAgent","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Validation Rules should reject whitespace-only agent name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055591,"status":"passed","title":"should reject whitespace-only agent name"},{"ancestorTitles":["AIAgent","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Validation Rules should reject agent name exceeding 100 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055591,"status":"passed","title":"should reject agent name exceeding 100 characters"},{"ancestorTitles":["AIAgent","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Validation Rules should reject empty instructions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055591,"status":"passed","title":"should reject empty instructions"},{"ancestorTitles":["AIAgent","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Validation Rules should reject whitespace-only instructions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055592,"status":"passed","title":"should reject whitespace-only instructions"},{"ancestorTitles":["AIAgent","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Validation Rules should reject instructions exceeding 10000 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055592,"status":"passed","title":"should reject instructions exceeding 10000 characters"},{"ancestorTitles":["AIAgent","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Validation Rules should reject empty entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055592,"status":"passed","title":"should reject empty entity ID"},{"ancestorTitles":["AIAgent","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Validation Rules should reject whitespace-only entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055593,"status":"passed","title":"should reject whitespace-only entity ID"},{"ancestorTitles":["AIAgent","Business Logic Integration"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Business Logic Integration should maintain consistency during complex operations","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394055593,"status":"passed","title":"should maintain consistency during complex operations"},{"ancestorTitles":["AIAgent","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Business Logic Integration should handle error scenarios gracefully","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055601,"status":"passed","title":"should handle error scenarios gracefully"},{"ancestorTitles":["AIAgent","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Business Logic Integration should support all feature types","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394055602,"status":"passed","title":"should support all feature types"},{"ancestorTitles":["AIAgent","Performance Tracking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgent Performance Tracking should track execution statistics over time","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055603,"status":"passed","title":"should track execution statistics over time"}],"endTime":1756394055607,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\ai-agent.test.ts","startTime":1756394055322,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Complex Dependency Graph Operations"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Complex Dependency Graph Operations should manage 100+ node enterprise dependency graphs efficiently","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055482,"status":"passed","title":"should manage 100+ node enterprise dependency graphs efficiently"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Complex Dependency Graph Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Complex Dependency Graph Operations should handle multi-layer dependency hierarchies (15+ levels)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055493,"status":"passed","title":"should handle multi-layer dependency hierarchies (15+ levels)"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Complex Dependency Graph Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Complex Dependency Graph Operations should manage complex dependency patterns (diamond, tree, mesh)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055494,"status":"passed","title":"should manage complex dependency patterns (diamond, tree, mesh)"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Advanced Circular Dependency Detection"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Advanced Circular Dependency Detection should detect nested circular dependencies across multiple levels","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055497,"status":"passed","title":"should detect nested circular dependencies across multiple levels"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Advanced Circular Dependency Detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Advanced Circular Dependency Detection should detect transitive circular dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055499,"status":"passed","title":"should detect transitive circular dependencies"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Advanced Circular Dependency Detection"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Advanced Circular Dependency Detection should perform cycle detection with sub-100ms performance target","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055500,"status":"passed","title":"should perform cycle detection with sub-100ms performance target"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Execution Order Optimization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Execution Order Optimization should optimize parallel execution opportunities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055510,"status":"passed","title":"should optimize parallel execution opportunities"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Execution Order Optimization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Execution Order Optimization should calculate critical path for execution planning","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055511,"status":"passed","title":"should calculate critical path for execution planning"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Execution Order Optimization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Execution Order Optimization should handle priority-based execution ordering","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055513,"status":"passed","title":"should handle priority-based execution ordering"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Dependency Validation & Integrity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Dependency Validation & Integrity should validate domain business rules for node dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055514,"status":"passed","title":"should validate domain business rules for node dependencies"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Dependency Validation & Integrity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Dependency Validation & Integrity should handle edge cases and input sanitization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055515,"status":"passed","title":"should handle edge cases and input sanitization"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Dependency Validation & Integrity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Dependency Validation & Integrity should perform integrity checks on dependency references","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055516,"status":"passed","title":"should perform integrity checks on dependency references"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Performance Optimization & Scalability"],"duration":19,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Performance Optimization & Scalability should achieve sub-100ms operations for complex graphs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055517,"status":"passed","title":"should achieve sub-100ms operations for complex graphs"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Performance Optimization & Scalability"],"duration":55,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Performance Optimization & Scalability should demonstrate scalability with resource utilization tracking","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055537,"status":"passed","title":"should demonstrate scalability with resource utilization tracking"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Performance Optimization & Scalability"],"duration":24,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Performance Optimization & Scalability should optimize memory usage for large dependency graphs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055592,"status":"passed","title":"should optimize memory usage for large dependency graphs"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Clean Architecture Compliance should maintain domain service boundaries without business logic in use case","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055616,"status":"passed","title":"should maintain domain service boundaries without business logic in use case"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Clean Architecture Compliance should use Result pattern consistently for all operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055617,"status":"passed","title":"should use Result pattern consistently for all operations"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Enterprise-Scale Dependency Management","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Enterprise-Scale Dependency Management Clean Architecture Compliance should maintain architectural isolation from infrastructure concerns","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055618,"status":"passed","title":"should maintain architectural isolation from infrastructure concerns"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Error Handling and Resilience"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Error Handling and Resilience should handle domain service failures gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055619,"status":"passed","title":"should handle domain service failures gracefully"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Error Handling and Resilience"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Error Handling and Resilience should validate input parameters and return meaningful errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055619,"status":"passed","title":"should validate input parameters and return meaningful errors"},{"ancestorTitles":["UC-010: Node Dependency Management - System Use Case","Error Handling and Resilience"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-010: Node Dependency Management - System Use Case Error Handling and Resilience should handle concurrent operations safely","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055620,"status":"passed","title":"should handle concurrent operations safely"}],"endTime":1756394055623,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\manage-node-dependencies.test.ts","startTime":1756394055278,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-014: Create Cross-Feature Link","Main Success Scenario"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-014: Create Cross-Feature Link Main Success Scenario CreateCrossFeatureLink_ValidRequest_CreatesLinkSuccessfully","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394055605,"status":"passed","title":"CreateCrossFeatureLink_ValidRequest_CreatesLinkSuccessfully"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-014: Create Cross-Feature Link","Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-014: Create Cross-Feature Link Main Success Scenario CreateCrossFeatureLink_AllFeaturePairCombinations_RespectsCompatibilityMatrix","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055607,"status":"passed","title":"CreateCrossFeatureLink_AllFeaturePairCombinations_RespectsCompatibilityMatrix"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-014: Create Cross-Feature Link","Error Scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-014: Create Cross-Feature Link Error Scenarios CreateCrossFeatureLink_MissingRequiredFields_ReturnsValidationError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055608,"status":"passed","title":"CreateCrossFeatureLink_MissingRequiredFields_ReturnsValidationError"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-014: Create Cross-Feature Link","Error Scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-014: Create Cross-Feature Link Error Scenarios CreateCrossFeatureLink_IncompatibleFeatureLinkType_ReturnsCompatibilityError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055609,"status":"passed","title":"CreateCrossFeatureLink_IncompatibleFeatureLinkType_ReturnsCompatibilityError"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-014: Create Cross-Feature Link","Error Scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-014: Create Cross-Feature Link Error Scenarios CreateCrossFeatureLink_DuplicateLink_ReturnsError","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055610,"status":"passed","title":"CreateCrossFeatureLink_DuplicateLink_ReturnsError"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-014: Create Cross-Feature Link","Error Scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-014: Create Cross-Feature Link Error Scenarios CreateCrossFeatureLink_RepositoryFailure_PropagatesError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055610,"status":"passed","title":"CreateCrossFeatureLink_RepositoryFailure_PropagatesError"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-014: Create Cross-Feature Link","Link Strength Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-014: Create Cross-Feature Link Link Strength Initialization CreateCrossFeatureLink_NoInitialStrength_DefaultsToHalf","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055611,"status":"passed","title":"CreateCrossFeatureLink_NoInitialStrength_DefaultsToHalf"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-014: Create Cross-Feature Link","Link Strength Initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-014: Create Cross-Feature Link Link Strength Initialization CreateCrossFeatureLink_CustomInitialStrength_UsesProvidedValue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055612,"status":"passed","title":"CreateCrossFeatureLink_CustomInitialStrength_UsesProvidedValue"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-015: Calculate Link Strength","Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-015: Calculate Link Strength Main Success Scenario CalculateLinkStrength_AllBonusTypes_CalculatesCorrectly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055612,"status":"passed","title":"CalculateLinkStrength_AllBonusTypes_CalculatesCorrectly"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-015: Calculate Link Strength","Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-015: Calculate Link Strength Main Success Scenario CalculateLinkStrength_PartialBonuses_CalculatesProportionally","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055613,"status":"passed","title":"CalculateLinkStrength_PartialBonuses_CalculatesProportionally"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-015: Calculate Link Strength","Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-015: Calculate Link Strength Main Success Scenario CalculateLinkStrength_ExcessiveBonuses_CapsAtMaximums","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055614,"status":"passed","title":"CalculateLinkStrength_ExcessiveBonuses_CapsAtMaximums"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-015: Calculate Link Strength","Main Success Scenario"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-015: Calculate Link Strength Main Success Scenario CalculateLinkStrength_WeakMetrics_LowBonuses","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055616,"status":"passed","title":"CalculateLinkStrength_WeakMetrics_LowBonuses"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-015: Calculate Link Strength","Error Scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-015: Calculate Link Strength Error Scenarios CalculateLinkStrength_NonexistentLink_ReturnsError","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055621,"status":"passed","title":"CalculateLinkStrength_NonexistentLink_ReturnsError"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-015: Calculate Link Strength","Bonus Calculation Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-015: Calculate Link Strength Bonus Calculation Edge Cases CalculateLinkStrength_ZeroMetrics_NoBonus","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055621,"status":"passed","title":"CalculateLinkStrength_ZeroMetrics_NoBonus"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-015: Calculate Link Strength","Bonus Calculation Edge Cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-015: Calculate Link Strength Bonus Calculation Edge Cases CalculateLinkStrength_NegativeMetrics_TreatedAsZero","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055622,"status":"passed","title":"CalculateLinkStrength_NegativeMetrics_TreatedAsZero"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-016: Detect Relationship Cycles","Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-016: Detect Relationship Cycles Main Success Scenario DetectRelationshipCycles_NoCycles_ReturnsEmptyArray","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055622,"status":"passed","title":"DetectRelationshipCycles_NoCycles_ReturnsEmptyArray"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-016: Detect Relationship Cycles","Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-016: Detect Relationship Cycles Main Success Scenario DetectRelationshipCycles_SimpleCycle_DetectsCorrectly","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055623,"status":"passed","title":"DetectRelationshipCycles_SimpleCycle_DetectsCorrectly"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-016: Detect Relationship Cycles","Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-016: Detect Relationship Cycles Main Success Scenario DetectRelationshipCycles_SelfReference_DetectsAsShortCycle","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055624,"status":"passed","title":"DetectRelationshipCycles_SelfReference_DetectsAsShortCycle"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-016: Detect Relationship Cycles","Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-016: Detect Relationship Cycles Main Success Scenario DetectRelationshipCycles_ComplexNetwork_DetectsMultipleCycles","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055625,"status":"passed","title":"DetectRelationshipCycles_ComplexNetwork_DetectsMultipleCycles"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-016: Detect Relationship Cycles","Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-016: Detect Relationship Cycles Main Success Scenario DetectRelationshipCycles_LongCycle_DetectsCorrectly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055627,"status":"passed","title":"DetectRelationshipCycles_LongCycle_DetectsCorrectly"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-016: Detect Relationship Cycles","Main Success Scenario"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-016: Detect Relationship Cycles Main Success Scenario DetectRelationshipCycles_CrossFeatureTypes_DetectsAcrossFeatures","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055628,"status":"passed","title":"DetectRelationshipCycles_CrossFeatureTypes_DetectsAcrossFeatures"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-016: Detect Relationship Cycles","Error Scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-016: Detect Relationship Cycles Error Scenarios DetectRelationshipCycles_EmptyNetwork_ReturnsEmptyArray","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055630,"status":"passed","title":"DetectRelationshipCycles_EmptyNetwork_ReturnsEmptyArray"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","UC-016: Detect Relationship Cycles","Performance and Scalability"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase UC-016: Detect Relationship Cycles Performance and Scalability DetectRelationshipCycles_LargeNetwork_CompletesInReasonableTime","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055630,"status":"passed","title":"DetectRelationshipCycles_LargeNetwork_CompletesInReasonableTime"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","Node Link Operations","Create Node Link"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase Node Link Operations Create Node Link CreateNodeLink_ValidRequest_CreatesSuccessfully","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394055636,"status":"passed","title":"CreateNodeLink_ValidRequest_CreatesSuccessfully"},{"ancestorTitles":["ManageCrossFeatureIntegrationUseCase","Integration Scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageCrossFeatureIntegrationUseCase Integration Scenarios ComplexWorkflow_CreateLinksCalculateStrengthDetectCycles_WorksTogether","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394055638,"status":"passed","title":"ComplexWorkflow_CreateLinksCalculateStrengthDetectCycles_WorksTogether"}],"endTime":1756394055641,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\manage-cross-feature-integration-use-case.test.ts","startTime":1756394055401,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should validate node connectivity successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055601,"status":"passed","title":"should validate node connectivity successfully"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should detect circular dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055604,"status":"passed","title":"should detect circular dependencies"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should identify orphaned nodes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055605,"status":"passed","title":"should identify orphaned nodes"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should validate node reference integrity","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055606,"status":"passed","title":"should validate node reference integrity"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should detect duplicate node IDs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055606,"status":"passed","title":"should detect duplicate node IDs"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should validate dependency chain consistency","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055607,"status":"passed","title":"should validate dependency chain consistency"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should detect missing essential node types","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055607,"status":"passed","title":"should detect missing essential node types"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should validate node type compatibility","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055608,"status":"passed","title":"should validate node type compatibility"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should detect self-referential dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055609,"status":"passed","title":"should detect self-referential dependencies"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should validate workflow complexity boundaries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055613,"status":"passed","title":"should validate workflow complexity boundaries"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should validate branch convergence patterns","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055614,"status":"passed","title":"should validate branch convergence patterns"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Structural Integrity Validation (12 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Structural Integrity Validation (12 scenarios) should detect malformed dependency declarations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055615,"status":"passed","title":"should detect malformed dependency declarations"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate required node presence","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055616,"status":"passed","title":"should validate required node presence"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate node configuration completeness","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055617,"status":"passed","title":"should validate node configuration completeness"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate model permissions and ownership","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055618,"status":"passed","title":"should validate model permissions and ownership"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate workflow naming conventions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055619,"status":"passed","title":"should validate workflow naming conventions"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate resource allocation limits","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055619,"status":"passed","title":"should validate resource allocation limits"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate compliance with organizational policies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055620,"status":"passed","title":"should validate compliance with organizational policies"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate model versioning compliance","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055620,"status":"passed","title":"should validate model versioning compliance"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate security requirements","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055621,"status":"passed","title":"should validate security requirements"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate data flow constraints","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055621,"status":"passed","title":"should validate data flow constraints"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Business Rule Compliance Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Business Rule Compliance Validation (10 scenarios) should validate workflow performance requirements","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055622,"status":"passed","title":"should validate workflow performance requirements"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate action node configurations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055623,"status":"passed","title":"should validate action node configurations"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate resource availability","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055623,"status":"passed","title":"should validate resource availability"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate execution order consistency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055624,"status":"passed","title":"should validate execution order consistency"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate parallel execution settings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055624,"status":"passed","title":"should validate parallel execution settings"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate retry and error handling configurations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055625,"status":"passed","title":"should validate retry and error handling configurations"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate timeout configurations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055626,"status":"passed","title":"should validate timeout configurations"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate external dependency availability","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055627,"status":"passed","title":"should validate external dependency availability"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate execution environment requirements","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055628,"status":"passed","title":"should validate execution environment requirements"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate data schema compatibility","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055629,"status":"passed","title":"should validate data schema compatibility"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Execution Readiness Validation (10 scenarios)"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Execution Readiness Validation (10 scenarios) should validate execution permissions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055630,"status":"passed","title":"should validate execution permissions"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate hierarchical context access","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055632,"status":"passed","title":"should validate hierarchical context access"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate context data flow","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055633,"status":"passed","title":"should validate context data flow"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate context variable scoping","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055634,"status":"passed","title":"should validate context variable scoping"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate context inheritance patterns","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055634,"status":"passed","title":"should validate context inheritance patterns"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate context type consistency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055635,"status":"passed","title":"should validate context type consistency"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate context persistence requirements","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055636,"status":"passed","title":"should validate context persistence requirements"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate context security boundaries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055636,"status":"passed","title":"should validate context security boundaries"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate context lifecycle management","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055637,"status":"passed","title":"should validate context lifecycle management"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate context memory usage","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055637,"status":"passed","title":"should validate context memory usage"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Context Validation (10 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Context Validation (10 scenarios) should validate context versioning compatibility","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055641,"status":"passed","title":"should validate context versioning compatibility"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Cross-Feature Integration Validation (5 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Cross-Feature Integration Validation (5 scenarios) should validate external dependency availability","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055642,"status":"passed","title":"should validate external dependency availability"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Cross-Feature Integration Validation (5 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Cross-Feature Integration Validation (5 scenarios) should validate API contract compatibility","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055643,"status":"passed","title":"should validate API contract compatibility"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Cross-Feature Integration Validation (5 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Cross-Feature Integration Validation (5 scenarios) should validate service versioning compatibility","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055643,"status":"passed","title":"should validate service versioning compatibility"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Cross-Feature Integration Validation (5 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Cross-Feature Integration Validation (5 scenarios) should validate cross-system data flow","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055644,"status":"passed","title":"should validate cross-system data flow"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Cross-Feature Integration Validation (5 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Cross-Feature Integration Validation (5 scenarios) should validate integration authentication requirements","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055645,"status":"passed","title":"should validate integration authentication requirements"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Clean Architecture Compliance (5 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Clean Architecture Compliance (5 scenarios) should validate use case coordination patterns","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055646,"status":"passed","title":"should validate use case coordination patterns"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Clean Architecture Compliance (5 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Clean Architecture Compliance (5 scenarios) should handle repository failures gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055647,"status":"passed","title":"should handle repository failures gracefully"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Clean Architecture Compliance (5 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Clean Architecture Compliance (5 scenarios) should aggregate validation results correctly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055648,"status":"passed","title":"should aggregate validation results correctly"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Clean Architecture Compliance (5 scenarios)"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Clean Architecture Compliance (5 scenarios) should respect validation level filtering","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055649,"status":"passed","title":"should respect validation level filtering"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Clean Architecture Compliance (5 scenarios)"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Clean Architecture Compliance (5 scenarios) should handle validation service failures without breaking the overall process","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055650,"status":"passed","title":"should handle validation service failures without breaking the overall process"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Edge Cases and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Edge Cases and Error Handling should handle empty workflow models","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055650,"status":"passed","title":"should handle empty workflow models"},{"ancestorTitles":["ValidateWorkflowStructureUseCase","Edge Cases and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ValidateWorkflowStructureUseCase Edge Cases and Error Handling should handle invalid validation levels","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055651,"status":"passed","title":"should handle invalid validation levels"}],"endTime":1756394055653,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\validate-workflow-structure-use-case.test.ts","startTime":1756394055393,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Entity Creation and Domain Invariants"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Entity Creation and Domain Invariants Create_WithValidProperties_ShouldSucceedAndEnforceInvariants","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394055621,"status":"passed","title":"Create_WithValidProperties_ShouldSucceedAndEnforceInvariants"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Entity Creation and Domain Invariants"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Entity Creation and Domain Invariants Create_WithInvalidModelName_ShouldFailValidation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055624,"status":"passed","title":"Create_WithInvalidModelName_ShouldFailValidation"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Entity Creation and Domain Invariants"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Entity Creation and Domain Invariants Create_WithBuilder_ShouldDemonstrateProperInstantiationPattern","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055624,"status":"passed","title":"Create_WithBuilder_ShouldDemonstrateProperInstantiationPattern"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Business Rules and Domain Logic Enforcement"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Business Rules and Domain Logic Enforcement UpdateName_WithValidName_ShouldUpdateAndMaintainInvariants","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055626,"status":"passed","title":"UpdateName_WithValidName_ShouldUpdateAndMaintainInvariants"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Business Rules and Domain Logic Enforcement"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Business Rules and Domain Logic Enforcement Publish_ValidDraftModel_ShouldTransitionStateAndEnforceRules","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055630,"status":"passed","title":"Publish_ValidDraftModel_ShouldTransitionStateAndEnforceRules"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Business Rules and Domain Logic Enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Business Rules and Domain Logic Enforcement Publish_AlreadyPublishedModel_ShouldEnforceBusinessRule","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055633,"status":"passed","title":"Publish_AlreadyPublishedModel_ShouldEnforceBusinessRule"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Business Rules and Domain Logic Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Business Rules and Domain Logic Enforcement Archive_PublishedModel_ShouldTransitionToArchivedState","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055633,"status":"passed","title":"Archive_PublishedModel_ShouldTransitionToArchivedState"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Business Rules and Domain Logic Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Business Rules and Domain Logic Enforcement SoftDelete_WithUser_ShouldMarkDeletedAndRecordAuditInfo","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055634,"status":"passed","title":"SoftDelete_WithUser_ShouldMarkDeletedAndRecordAuditInfo"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Aggregate Root and Entity Relationships"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Aggregate Root and Entity Relationships AddNode_ValidNode_ShouldMaintainEntityConsistency","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055635,"status":"passed","title":"AddNode_ValidNode_ShouldMaintainEntityConsistency"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Aggregate Root and Entity Relationships"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Aggregate Root and Entity Relationships AddNode_NodeFromDifferentModel_ShouldEnforceBoundaryRule","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055636,"status":"passed","title":"AddNode_NodeFromDifferentModel_ShouldEnforceBoundaryRule"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Aggregate Root and Entity Relationships"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Aggregate Root and Entity Relationships AddActionNode_ToValidParent_ShouldMaintainHierarchy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055637,"status":"passed","title":"AddActionNode_ToValidParent_ShouldMaintainHierarchy"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Aggregate Root and Entity Relationships"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Aggregate Root and Entity Relationships RemoveNode_WithDependentActions_ShouldMaintainReferentialIntegrity","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055639,"status":"passed","title":"RemoveNode_WithDependentActions_ShouldMaintainReferentialIntegrity"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Workflow Validation and Domain Complexity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Workflow Validation and Domain Complexity ValidateWorkflow_CompleteWorkflow_ShouldPassValidation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055641,"status":"passed","title":"ValidateWorkflow_CompleteWorkflow_ShouldPassValidation"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Workflow Validation and Domain Complexity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Workflow Validation and Domain Complexity ValidateWorkflow_MissingIONodes_ShouldFailWithSpecificError","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055642,"status":"passed","title":"ValidateWorkflow_MissingIONodes_ShouldFailWithSpecificError"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Workflow Validation and Domain Complexity"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Workflow Validation and Domain Complexity ValidateWorkflow_WithIONode_ShouldPassValidation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055643,"status":"passed","title":"ValidateWorkflow_WithIONode_ShouldPassValidation"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Workflow Validation and Domain Complexity"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Workflow Validation and Domain Complexity ValidateWorkflow_WithStageNodes_ShouldNotGenerateWarnings","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055644,"status":"passed","title":"ValidateWorkflow_WithStageNodes_ShouldNotGenerateWarnings"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Metadata and Configuration Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Metadata and Configuration Management UpdateMetadata_ValidConfiguration_ShouldReplaceMetadata","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055644,"status":"passed","title":"UpdateMetadata_ValidConfiguration_ShouldReplaceMetadata"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Metadata and Configuration Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Metadata and Configuration Management UpdatePermissions_ValidPermissions_ShouldUpdateAccessControl","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055646,"status":"passed","title":"UpdatePermissions_ValidPermissions_ShouldUpdateAccessControl"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Metadata and Configuration Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Metadata and Configuration Management UpdateAIAgentConfig_ValidConfig_ShouldStoreConfiguration","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055647,"status":"passed","title":"UpdateAIAgentConfig_ValidConfig_ShouldStoreConfiguration"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Entity Identity and Equality"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Entity Identity and Equality Equals_SameModelId_ShouldBeEqual","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055648,"status":"passed","title":"Equals_SameModelId_ShouldBeEqual"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Entity Identity and Equality"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Entity Identity and Equality Equals_DifferentModelId_ShouldNotBeEqual","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055648,"status":"passed","title":"Equals_DifferentModelId_ShouldNotBeEqual"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Audit Trail and Temporal Concerns"],"duration":65,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Audit Trail and Temporal Concerns MarkSaved_UpdatesLastSavedTimestamp","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055649,"status":"passed","title":"MarkSaved_UpdatesLastSavedTimestamp"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Audit Trail and Temporal Concerns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Audit Trail and Temporal Concerns IncrementVersionCount_UpdatesVersionTracking","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055714,"status":"passed","title":"IncrementVersionCount_UpdatesVersionTracking"},{"ancestorTitles":["FunctionModel - Comprehensive Domain Entity Tests","Audit Trail and Temporal Concerns"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Comprehensive Domain Entity Tests Audit Trail and Temporal Concerns AnyModification_UpdatesTimestamp","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055714,"status":"passed","title":"AnyModification_UpdatesTimestamp"}],"endTime":1756394055726,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\function-model-comprehensive.test.ts","startTime":1756394055433,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Soft Deletion State Transitions","SoftDelete_PublishedModel_ShouldTransitionToDeleted"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Soft Deletion State Transitions SoftDelete_PublishedModel_ShouldTransitionToDeleted should successfully mark published model as deleted with proper state","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"startAt":1756394055842,"status":"passed","title":"should successfully mark published model as deleted with proper state"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Soft Deletion State Transitions","SoftDelete_DraftModel_ShouldTransitionToDeleted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Soft Deletion State Transitions SoftDelete_DraftModel_ShouldTransitionToDeleted should successfully mark draft model as deleted","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055851,"status":"passed","title":"should successfully mark draft model as deleted"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Soft Deletion State Transitions","SoftDelete_ArchivedModel_ShouldPreventDeletion"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Soft Deletion State Transitions SoftDelete_ArchivedModel_ShouldPreventDeletion should prevent soft deletion of archived model","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055852,"status":"passed","title":"should prevent soft deletion of archived model"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Soft Deletion State Transitions","SoftDelete_AlreadyDeletedModel_ShouldPreventDuplicateDeletion"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Soft Deletion State Transitions SoftDelete_AlreadyDeletedModel_ShouldPreventDuplicateDeletion should prevent double soft deletion of same model","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055854,"status":"passed","title":"should prevent double soft deletion of same model"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Soft Deletion State Transitions","SoftDelete_WithEmptyDeletedBy_ShouldUseAnonymous"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Soft Deletion State Transitions SoftDelete_WithEmptyDeletedBy_ShouldUseAnonymous should handle empty deletedBy parameter gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055856,"status":"passed","title":"should handle empty deletedBy parameter gracefully"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Soft Deletion State Transitions","SoftDelete_WithoutDeletedBy_ShouldSucceed"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Soft Deletion State Transitions SoftDelete_WithoutDeletedBy_ShouldSucceed should allow soft deletion without specifying deletedBy","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055857,"status":"passed","title":"should allow soft deletion without specifying deletedBy"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Operation Blocking for Deleted Models","BlockNodeOperations_OnDeletedModel_ShouldPreventModification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Operation Blocking for Deleted Models BlockNodeOperations_OnDeletedModel_ShouldPreventModification should block node addition operations on deleted models","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055858,"status":"passed","title":"should block node addition operations on deleted models"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Operation Blocking for Deleted Models","BlockNodeOperations_OnDeletedModel_ShouldPreventModification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Operation Blocking for Deleted Models BlockNodeOperations_OnDeletedModel_ShouldPreventModification should block node removal operations on deleted models","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055859,"status":"passed","title":"should block node removal operations on deleted models"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Operation Blocking for Deleted Models","BlockNodeOperations_OnDeletedModel_ShouldPreventModification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Operation Blocking for Deleted Models BlockNodeOperations_OnDeletedModel_ShouldPreventModification should block node updates on deleted models","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055860,"status":"passed","title":"should block node updates on deleted models"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Operation Blocking for Deleted Models","BlockModelOperations_OnDeletedModel_ShouldPreventStatusChanges"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Operation Blocking for Deleted Models BlockModelOperations_OnDeletedModel_ShouldPreventStatusChanges should block publishing operations on deleted models","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055862,"status":"passed","title":"should block publishing operations on deleted models"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Operation Blocking for Deleted Models","BlockModelOperations_OnDeletedModel_ShouldPreventStatusChanges"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Operation Blocking for Deleted Models BlockModelOperations_OnDeletedModel_ShouldPreventStatusChanges should block archiving operations on deleted models","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055862,"status":"passed","title":"should block archiving operations on deleted models"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Operation Blocking for Deleted Models","BlockModelOperations_OnDeletedModel_ShouldPreventStatusChanges"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Operation Blocking for Deleted Models BlockModelOperations_OnDeletedModel_ShouldPreventStatusChanges should block metadata updates on deleted models","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055863,"status":"passed","title":"should block metadata updates on deleted models"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Operation Blocking for Deleted Models","AllowReadOperations_OnDeletedModel_ShouldPermitInspection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Operation Blocking for Deleted Models AllowReadOperations_OnDeletedModel_ShouldPermitInspection should allow read-only operations on deleted models","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394055865,"status":"passed","title":"should allow read-only operations on deleted models"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Operation Blocking for Deleted Models","AllowReadOperations_OnDeletedModel_ShouldPermitInspection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Operation Blocking for Deleted Models AllowReadOperations_OnDeletedModel_ShouldPermitInspection should allow node inspection on deleted models","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055866,"status":"passed","title":"should allow node inspection on deleted models"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Data Preservation in Deleted State","PreserveModelStructure_OnSoftDeletion_ShouldMaintainIntegrity"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Data Preservation in Deleted State PreserveModelStructure_OnSoftDeletion_ShouldMaintainIntegrity should preserve complete model structure when soft deleted","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394055867,"status":"passed","title":"should preserve complete model structure when soft deleted"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Data Preservation in Deleted State","PreserveNodeRelationships_OnSoftDeletion_ShouldMaintainConnections"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Data Preservation in Deleted State PreserveNodeRelationships_OnSoftDeletion_ShouldMaintainConnections should preserve node relationships when model is soft deleted","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055870,"status":"passed","title":"should preserve node relationships when model is soft deleted"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Data Preservation in Deleted State","PreserveExecutionHistory_OnSoftDeletion_ShouldMaintainAuditTrail"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Data Preservation in Deleted State PreserveExecutionHistory_OnSoftDeletion_ShouldMaintainAuditTrail should preserve execution history in model metadata when soft deleted","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055871,"status":"passed","title":"should preserve execution history in model metadata when soft deleted"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","State Validation and Business Rules","ValidateModelState_BeforeSoftDeletion_ShouldEnforceBusinessRules"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management State Validation and Business Rules ValidateModelState_BeforeSoftDeletion_ShouldEnforceBusinessRules should validate model state meets deletion preconditions","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055872,"status":"passed","title":"should validate model state meets deletion preconditions"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","State Validation and Business Rules","ValidateDeletionTimestamp_OnSoftDelete_ShouldSetAccurateTime"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management State Validation and Business Rules ValidateDeletionTimestamp_OnSoftDelete_ShouldSetAccurateTime should set deletion timestamp to current time within reasonable bounds","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055876,"status":"passed","title":"should set deletion timestamp to current time within reasonable bounds"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","State Validation and Business Rules","ValidateDeletedByParameter_OnSoftDelete_ShouldHandleVariousInputs"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management State Validation and Business Rules ValidateDeletedByParameter_OnSoftDelete_ShouldHandleVariousInputs should handle various deletedBy parameter formats correctly","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394055878,"status":"passed","title":"should handle various deletedBy parameter formats correctly"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Clean Architecture Entity Compliance","EntityBehavior_ShouldNotDependOnExternalServices"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Clean Architecture Entity Compliance EntityBehavior_ShouldNotDependOnExternalServices should handle soft deletion using only internal entity logic","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055880,"status":"passed","title":"should handle soft deletion using only internal entity logic"},{"ancestorTitles":["FunctionModel - Soft Deletion State Management","Clean Architecture Entity Compliance","DomainInvariants_ShouldBeMaintained_AfterSoftDeletion"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Soft Deletion State Management Clean Architecture Entity Compliance DomainInvariants_ShouldBeMaintained_AfterSoftDeletion should maintain all domain invariants after soft deletion","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394055881,"status":"passed","title":"should maintain all domain invariants after soft deletion"}],"endTime":1756394055884,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\function-model-soft-deletion-state.test.ts","startTime":1756394055641,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["NodeLink","Factory Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Factory Creation should create node link with valid properties","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055840,"status":"passed","title":"should create node link with valid properties"},{"ancestorTitles":["NodeLink","Factory Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Factory Creation should create entity-level link without node IDs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055841,"status":"passed","title":"should create entity-level link without node IDs"},{"ancestorTitles":["NodeLink","Factory Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Factory Creation should create node-level link with both node IDs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055842,"status":"passed","title":"should create node-level link with both node IDs"},{"ancestorTitles":["NodeLink","Factory Creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Factory Creation should set creation and update timestamps","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055843,"status":"passed","title":"should set creation and update timestamps"},{"ancestorTitles":["NodeLink","Property Access"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Property Access should provide access to all properties","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394055844,"status":"passed","title":"should provide access to all properties"},{"ancestorTitles":["NodeLink","Property Access"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Property Access should provide readonly access to link context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055845,"status":"passed","title":"should provide readonly access to link context"},{"ancestorTitles":["NodeLink","Property Access"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Property Access should return undefined for missing link context","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055846,"status":"passed","title":"should return undefined for missing link context"},{"ancestorTitles":["NodeLink","Property Access"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Property Access should return undefined for missing node IDs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055846,"status":"passed","title":"should return undefined for missing node IDs"},{"ancestorTitles":["NodeLink","Link Strength Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Strength Management should update link strength successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055847,"status":"passed","title":"should update link strength successfully"},{"ancestorTitles":["NodeLink","Link Strength Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Strength Management should allow minimum link strength (0.0)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055849,"status":"passed","title":"should allow minimum link strength (0.0)"},{"ancestorTitles":["NodeLink","Link Strength Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Strength Management should allow maximum link strength (1.0)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055850,"status":"passed","title":"should allow maximum link strength (1.0)"},{"ancestorTitles":["NodeLink","Link Strength Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Strength Management should reject negative link strength","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055850,"status":"passed","title":"should reject negative link strength"},{"ancestorTitles":["NodeLink","Link Strength Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Strength Management should reject link strength greater than 1.0","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055851,"status":"passed","title":"should reject link strength greater than 1.0"},{"ancestorTitles":["NodeLink","Link Context Management"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Context Management should update link context successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055851,"status":"passed","title":"should update link context successfully"},{"ancestorTitles":["NodeLink","Link Context Management"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Context Management should allow setting context to undefined","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055857,"status":"passed","title":"should allow setting context to undefined"},{"ancestorTitles":["NodeLink","Link Context Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Context Management should create defensive copy of context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055864,"status":"passed","title":"should create defensive copy of context"},{"ancestorTitles":["NodeLink","Link Context Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Context Management should handle empty object context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055865,"status":"passed","title":"should handle empty object context"},{"ancestorTitles":["NodeLink","Link Type Management"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Type Management should update link type successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055865,"status":"passed","title":"should update link type successfully"},{"ancestorTitles":["NodeLink","Link Type Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Type Management should handle all link types","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"startAt":1756394055881,"status":"passed","title":"should handle all link types"},{"ancestorTitles":["NodeLink","Link Classification Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Classification Methods should identify node-level link correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055882,"status":"passed","title":"should identify node-level link correctly"},{"ancestorTitles":["NodeLink","Link Classification Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Classification Methods should identify entity-level link correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055883,"status":"passed","title":"should identify entity-level link correctly"},{"ancestorTitles":["NodeLink","Link Classification Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Classification Methods should identify cross-feature link correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055883,"status":"passed","title":"should identify cross-feature link correctly"},{"ancestorTitles":["NodeLink","Link Classification Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Classification Methods should identify same-feature link correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055884,"status":"passed","title":"should identify same-feature link correctly"},{"ancestorTitles":["NodeLink","Link Classification Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Classification Methods should identify self-link correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055884,"status":"passed","title":"should identify self-link correctly"},{"ancestorTitles":["NodeLink","Link Classification Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Classification Methods should identify strong link correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055885,"status":"passed","title":"should identify strong link correctly"},{"ancestorTitles":["NodeLink","Link Classification Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Classification Methods should identify weak link correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055885,"status":"passed","title":"should identify weak link correctly"},{"ancestorTitles":["NodeLink","Link Classification Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Classification Methods should handle boundary values for strong/weak links","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055886,"status":"passed","title":"should handle boundary values for strong/weak links"},{"ancestorTitles":["NodeLink","Equality and Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Equality and Comparison should be equal when link IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055886,"status":"passed","title":"should be equal when link IDs match"},{"ancestorTitles":["NodeLink","Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Equality and Comparison should not be equal when link IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055887,"status":"passed","title":"should not be equal when link IDs differ"},{"ancestorTitles":["NodeLink","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Validation Rules should reject empty source entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055887,"status":"passed","title":"should reject empty source entity ID"},{"ancestorTitles":["NodeLink","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Validation Rules should reject whitespace-only source entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055887,"status":"passed","title":"should reject whitespace-only source entity ID"},{"ancestorTitles":["NodeLink","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Validation Rules should reject empty target entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055888,"status":"passed","title":"should reject empty target entity ID"},{"ancestorTitles":["NodeLink","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Validation Rules should reject whitespace-only target entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055889,"status":"passed","title":"should reject whitespace-only target entity ID"},{"ancestorTitles":["NodeLink","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Validation Rules should reject invalid link strength during creation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055889,"status":"passed","title":"should reject invalid link strength during creation"},{"ancestorTitles":["NodeLink","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Validation Rules should reject source node without target node","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055890,"status":"passed","title":"should reject source node without target node"},{"ancestorTitles":["NodeLink","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Validation Rules should reject target node without source node","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055890,"status":"passed","title":"should reject target node without source node"},{"ancestorTitles":["NodeLink","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Validation Rules should allow entity-level self-links (same feature, same entity, no nodes)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055891,"status":"passed","title":"should allow entity-level self-links (same feature, same entity, no nodes)"},{"ancestorTitles":["NodeLink","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Validation Rules should reject self-links at node level","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055891,"status":"passed","title":"should reject self-links at node level"},{"ancestorTitles":["NodeLink","Business Logic Integration"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Business Logic Integration should maintain consistency during complex operations","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055892,"status":"passed","title":"should maintain consistency during complex operations"},{"ancestorTitles":["NodeLink","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Business Logic Integration should handle error scenarios gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055896,"status":"passed","title":"should handle error scenarios gracefully"},{"ancestorTitles":["NodeLink","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Business Logic Integration should support different feature combinations","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"startAt":1756394055897,"status":"passed","title":"should support different feature combinations"},{"ancestorTitles":["NodeLink","Link Strength Categories"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeLink Link Strength Categories should correctly categorize various link strengths","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"startAt":1756394055898,"status":"passed","title":"should correctly categorize various link strengths"}],"endTime":1756394055900,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\node-link.test.ts","startTime":1756394055654,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["KBNode","creation and initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode creation and initialization should create KB node with valid properties","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394055861,"status":"passed","title":"should create KB node with valid properties"},{"ancestorTitles":["KBNode","creation and initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode creation and initialization should reject creation with missing KB reference ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055865,"status":"passed","title":"should reject creation with missing KB reference ID"},{"ancestorTitles":["KBNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode creation and initialization should reject creation with missing short description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055865,"status":"passed","title":"should reject creation with missing short description"},{"ancestorTitles":["KBNode","creation and initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode creation and initialization should reject creation with short description too long","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055866,"status":"passed","title":"should reject creation with short description too long"},{"ancestorTitles":["KBNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode creation and initialization should reject creation with documentation context too long","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055866,"status":"passed","title":"should reject creation with documentation context too long"},{"ancestorTitles":["KBNode","creation and initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode creation and initialization should reject creation with too many search keywords","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055867,"status":"passed","title":"should reject creation with too many search keywords"},{"ancestorTitles":["KBNode","creation and initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode creation and initialization should reject creation with edit permissions not in view permissions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055867,"status":"passed","title":"should reject creation with edit permissions not in view permissions"},{"ancestorTitles":["KBNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode creation and initialization should create with minimal valid data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055867,"status":"passed","title":"should create with minimal valid data"},{"ancestorTitles":["KBNode","KB reference management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode KB reference management should update KB reference ID successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055868,"status":"passed","title":"should update KB reference ID successfully"},{"ancestorTitles":["KBNode","KB reference management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode KB reference management should trim whitespace from KB reference ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055869,"status":"passed","title":"should trim whitespace from KB reference ID"},{"ancestorTitles":["KBNode","KB reference management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode KB reference management should reject empty KB reference ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055870,"status":"passed","title":"should reject empty KB reference ID"},{"ancestorTitles":["KBNode","KB reference management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode KB reference management should reject whitespace-only KB reference ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055871,"status":"passed","title":"should reject whitespace-only KB reference ID"},{"ancestorTitles":["KBNode","KB reference management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode KB reference management should update timestamp when reference ID changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055871,"status":"passed","title":"should update timestamp when reference ID changes"},{"ancestorTitles":["KBNode","short description management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode short description management should update short description successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055872,"status":"passed","title":"should update short description successfully"},{"ancestorTitles":["KBNode","short description management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode short description management should trim whitespace from description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055872,"status":"passed","title":"should trim whitespace from description"},{"ancestorTitles":["KBNode","short description management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode short description management should reject empty description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055873,"status":"passed","title":"should reject empty description"},{"ancestorTitles":["KBNode","short description management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode short description management should reject whitespace-only description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055873,"status":"passed","title":"should reject whitespace-only description"},{"ancestorTitles":["KBNode","short description management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode short description management should reject description that is too long","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055874,"status":"passed","title":"should reject description that is too long"},{"ancestorTitles":["KBNode","short description management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode short description management should accept description at maximum length","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055874,"status":"passed","title":"should accept description at maximum length"},{"ancestorTitles":["KBNode","documentation context management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode documentation context management should update documentation context successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055874,"status":"passed","title":"should update documentation context successfully"},{"ancestorTitles":["KBNode","documentation context management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode documentation context management should trim whitespace from context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055875,"status":"passed","title":"should trim whitespace from context"},{"ancestorTitles":["KBNode","documentation context management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode documentation context management should allow clearing context with undefined","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055875,"status":"passed","title":"should allow clearing context with undefined"},{"ancestorTitles":["KBNode","documentation context management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode documentation context management should allow empty string to clear context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055876,"status":"passed","title":"should allow empty string to clear context"},{"ancestorTitles":["KBNode","documentation context management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode documentation context management should reject context that is too long","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055876,"status":"passed","title":"should reject context that is too long"},{"ancestorTitles":["KBNode","documentation context management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode documentation context management should accept context at maximum length","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055877,"status":"passed","title":"should accept context at maximum length"},{"ancestorTitles":["KBNode","search keywords management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should add search keyword successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055877,"status":"passed","title":"should add search keyword successfully"},{"ancestorTitles":["KBNode","search keywords management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should convert keyword to lowercase","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055877,"status":"passed","title":"should convert keyword to lowercase"},{"ancestorTitles":["KBNode","search keywords management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should trim whitespace from keyword","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055878,"status":"passed","title":"should trim whitespace from keyword"},{"ancestorTitles":["KBNode","search keywords management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should reject empty keyword","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055878,"status":"passed","title":"should reject empty keyword"},{"ancestorTitles":["KBNode","search keywords management"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should reject whitespace-only keyword","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055879,"status":"passed","title":"should reject whitespace-only keyword"},{"ancestorTitles":["KBNode","search keywords management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should reject duplicate keywords","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055883,"status":"passed","title":"should reject duplicate keywords"},{"ancestorTitles":["KBNode","search keywords management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should reject adding keyword when at maximum limit","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055884,"status":"passed","title":"should reject adding keyword when at maximum limit"},{"ancestorTitles":["KBNode","search keywords management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should remove search keyword successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055884,"status":"passed","title":"should remove search keyword successfully"},{"ancestorTitles":["KBNode","search keywords management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should reject removing non-existent keyword","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055885,"status":"passed","title":"should reject removing non-existent keyword"},{"ancestorTitles":["KBNode","search keywords management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should handle keyword removal with case sensitivity","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055886,"status":"passed","title":"should handle keyword removal with case sensitivity"},{"ancestorTitles":["KBNode","search keywords management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode search keywords management should handle keyword removal with whitespace","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055886,"status":"passed","title":"should handle keyword removal with whitespace"},{"ancestorTitles":["KBNode","access permissions management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode access permissions management should update access permissions successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055887,"status":"passed","title":"should update access permissions successfully"},{"ancestorTitles":["KBNode","access permissions management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode access permissions management should reject permissions where edit users are not in view","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055888,"status":"passed","title":"should reject permissions where edit users are not in view"},{"ancestorTitles":["KBNode","access permissions management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode access permissions management should remove duplicates from permissions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055888,"status":"passed","title":"should remove duplicates from permissions"},{"ancestorTitles":["KBNode","access permissions management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode access permissions management should remove empty strings from permissions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055889,"status":"passed","title":"should remove empty strings from permissions"},{"ancestorTitles":["KBNode","access permissions management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode access permissions management should allow empty permissions arrays","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055890,"status":"passed","title":"should allow empty permissions arrays"},{"ancestorTitles":["KBNode","individual access management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should grant view access successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055890,"status":"passed","title":"should grant view access successfully"},{"ancestorTitles":["KBNode","individual access management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should trim user ID when granting view access","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055891,"status":"passed","title":"should trim user ID when granting view access"},{"ancestorTitles":["KBNode","individual access management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should reject granting view access to empty user ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055891,"status":"passed","title":"should reject granting view access to empty user ID"},{"ancestorTitles":["KBNode","individual access management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should reject granting view access to user who already has it","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055892,"status":"passed","title":"should reject granting view access to user who already has it"},{"ancestorTitles":["KBNode","individual access management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should grant edit access successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055892,"status":"passed","title":"should grant edit access successfully"},{"ancestorTitles":["KBNode","individual access management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should auto-grant view access when granting edit access","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055893,"status":"passed","title":"should auto-grant view access when granting edit access"},{"ancestorTitles":["KBNode","individual access management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should not duplicate view access when user already has it","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055894,"status":"passed","title":"should not duplicate view access when user already has it"},{"ancestorTitles":["KBNode","individual access management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should reject granting edit access to user who already has it","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055894,"status":"passed","title":"should reject granting edit access to user who already has it"},{"ancestorTitles":["KBNode","individual access management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should revoke access successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055894,"status":"passed","title":"should revoke access successfully"},{"ancestorTitles":["KBNode","individual access management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should revoke only view access if user has no edit access","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055895,"status":"passed","title":"should revoke only view access if user has no edit access"},{"ancestorTitles":["KBNode","individual access management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should reject revoking access from user who has no access","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055896,"status":"passed","title":"should reject revoking access from user who has no access"},{"ancestorTitles":["KBNode","individual access management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode individual access management should reject empty user ID for access operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055896,"status":"passed","title":"should reject empty user ID for access operations"},{"ancestorTitles":["KBNode","data access and immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode data access and immutability should return readonly KB data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055896,"status":"passed","title":"should return readonly KB data"},{"ancestorTitles":["KBNode","data access and immutability"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode data access and immutability should return correct action type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055897,"status":"passed","title":"should return correct action type"},{"ancestorTitles":["KBNode","timestamps and audit trail"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode timestamps and audit trail should update timestamp when KB reference changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055897,"status":"passed","title":"should update timestamp when KB reference changes"},{"ancestorTitles":["KBNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode timestamps and audit trail should update timestamp when description changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055898,"status":"passed","title":"should update timestamp when description changes"},{"ancestorTitles":["KBNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode timestamps and audit trail should update timestamp when context changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055899,"status":"passed","title":"should update timestamp when context changes"},{"ancestorTitles":["KBNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode timestamps and audit trail should update timestamp when keywords change","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055899,"status":"passed","title":"should update timestamp when keywords change"},{"ancestorTitles":["KBNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"KBNode timestamps and audit trail should update timestamp when permissions change","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055900,"status":"passed","title":"should update timestamp when permissions change"}],"endTime":1756394055902,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\nodes\\kb-node.test.ts","startTime":1756394055669,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Node Registration in Hierarchy","registerNodeInHierarchy"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Node Registration in Hierarchy registerNodeInHierarchy should register root node successfully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055851,"status":"passed","title":"should register root node successfully"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Node Registration in Hierarchy","registerNodeInHierarchy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Node Registration in Hierarchy registerNodeInHierarchy should register child node with parent relationship","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055856,"status":"passed","title":"should register child node with parent relationship"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Node Registration in Hierarchy","registerNodeInHierarchy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Node Registration in Hierarchy registerNodeInHierarchy should register sibling nodes at same hierarchy level","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055857,"status":"passed","title":"should register sibling nodes at same hierarchy level"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Node Registration in Hierarchy","registerNodeInHierarchy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Node Registration in Hierarchy registerNodeInHierarchy should reject registration with invalid node data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055858,"status":"passed","title":"should reject registration with invalid node data"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Node Registration in Hierarchy","registerNodeInHierarchy"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Node Registration in Hierarchy registerNodeInHierarchy should handle service registration failure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055859,"status":"passed","title":"should handle service registration failure"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Node Registration in Hierarchy","hierarchy validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Node Registration in Hierarchy hierarchy validation should validate parent-child relationships during registration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055859,"status":"passed","title":"should validate parent-child relationships during registration"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Node Registration in Hierarchy","hierarchy validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Node Registration in Hierarchy hierarchy validation should enforce maximum hierarchy depth limits","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055861,"status":"passed","title":"should enforce maximum hierarchy depth limits"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Sibling Access Control (Read-Only)","validateSiblingAccess"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Sibling Access Control (Read-Only) validateSiblingAccess should allow read-only access between sibling nodes","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055861,"status":"passed","title":"should allow read-only access between sibling nodes"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Sibling Access Control (Read-Only)","validateSiblingAccess"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Sibling Access Control (Read-Only) validateSiblingAccess should deny write access between sibling nodes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055866,"status":"passed","title":"should deny write access between sibling nodes"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Sibling Access Control (Read-Only)","validateSiblingAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Sibling Access Control (Read-Only) validateSiblingAccess should provide correct sibling context data with read access","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055866,"status":"passed","title":"should provide correct sibling context data with read access"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Sibling Access Control (Read-Only)","validateSiblingAccess"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Sibling Access Control (Read-Only) validateSiblingAccess should deny access between non-sibling nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055867,"status":"passed","title":"should deny access between non-sibling nodes"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Children Access Control (Own Context Only)","validateChildAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Children Access Control (Own Context Only) validateChildAccess should allow child to access only its own context","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055869,"status":"passed","title":"should allow child to access only its own context"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Children Access Control (Own Context Only)","validateChildAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Children Access Control (Own Context Only) validateChildAccess should deny child access to other child contexts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055870,"status":"passed","title":"should deny child access to other child contexts"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Children Access Control (Own Context Only)","validateChildAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Children Access Control (Own Context Only) validateChildAccess should allow child to read parent context but not write","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055871,"status":"passed","title":"should allow child to read parent context but not write"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Children Access Control (Own Context Only)","validateChildAccess"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Children Access Control (Own Context Only) validateChildAccess should deny child write access to parent context","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055872,"status":"passed","title":"should deny child write access to parent context"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Parent Access Control (Read/Write to All Descendants)","validateParentAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Parent Access Control (Read/Write to All Descendants) validateParentAccess should allow parent read/write access to direct children","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055873,"status":"passed","title":"should allow parent read/write access to direct children"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Parent Access Control (Read/Write to All Descendants)","validateParentAccess"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Parent Access Control (Read/Write to All Descendants) validateParentAccess should allow parent read/write access to all descendants (grandchildren)","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055874,"status":"passed","title":"should allow parent read/write access to all descendants (grandchildren)"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Parent Access Control (Read/Write to All Descendants)","validateParentAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Parent Access Control (Read/Write to All Descendants) validateParentAccess should provide complete list of all descendant contexts for parent","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055874,"status":"passed","title":"should provide complete list of all descendant contexts for parent"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Parent Access Control (Read/Write to All Descendants)","validateParentAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Parent Access Control (Read/Write to All Descendants) validateParentAccess should successfully update child context data as parent","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055875,"status":"passed","title":"should successfully update child context data as parent"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Parent Access Control (Read/Write to All Descendants)","validateParentAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Parent Access Control (Read/Write to All Descendants) validateParentAccess should deny parent access to non-descendant nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055876,"status":"passed","title":"should deny parent access to non-descendant nodes"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Uncle/Aunt Access Control (Read-Only Lateral)","validateUncleAuntAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Uncle/Aunt Access Control (Read-Only Lateral) validateUncleAuntAccess should allow uncle/aunt read-only access to nephews/nieces","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055877,"status":"passed","title":"should allow uncle/aunt read-only access to nephews/nieces"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Uncle/Aunt Access Control (Read-Only Lateral)","validateUncleAuntAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Uncle/Aunt Access Control (Read-Only Lateral) validateUncleAuntAccess should deny uncle/aunt write access to nephews/nieces","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055878,"status":"passed","title":"should deny uncle/aunt write access to nephews/nieces"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Uncle/Aunt Access Control (Read-Only Lateral)","validateUncleAuntAccess"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Uncle/Aunt Access Control (Read-Only Lateral) validateUncleAuntAccess should provide debug context for root cause analysis","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055879,"status":"passed","title":"should provide debug context for root cause analysis"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Uncle/Aunt Access Control (Read-Only Lateral)","validateUncleAuntAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Uncle/Aunt Access Control (Read-Only Lateral) validateUncleAuntAccess should deny uncle/aunt access to unrelated node hierarchies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055880,"status":"passed","title":"should deny uncle/aunt access to unrelated node hierarchies"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Context Access Validation and Request Handling","validateContextAccess"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Context Access Validation and Request Handling validateContextAccess should validate complete access request with proper authorization","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055881,"status":"passed","title":"should validate complete access request with proper authorization"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Context Access Validation and Request Handling","validateContextAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Context Access Validation and Request Handling validateContextAccess should perform property-level access validation","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055883,"status":"passed","title":"should perform property-level access validation"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Context Access Validation and Request Handling","validateContextAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Context Access Validation and Request Handling validateContextAccess should validate access requests with time-based constraints","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055884,"status":"passed","title":"should validate access requests with time-based constraints"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Context Access Validation and Request Handling","validateContextAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Context Access Validation and Request Handling validateContextAccess should deny access outside of valid time constraints","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055885,"status":"passed","title":"should deny access outside of valid time constraints"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Context Access Validation and Request Handling","validateContextAccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Context Access Validation and Request Handling validateContextAccess should handle emergency access scenarios with elevated permissions","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055886,"status":"passed","title":"should handle emergency access scenarios with elevated permissions"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Context Access Validation and Request Handling","updateNodeContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Context Access Validation and Request Handling updateNodeContext should successfully update context with proper parent authorization","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055887,"status":"passed","title":"should successfully update context with proper parent authorization"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Context Access Validation and Request Handling","updateNodeContext"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Context Access Validation and Request Handling updateNodeContext should reject context update with insufficient permissions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055888,"status":"passed","title":"should reject context update with insufficient permissions"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Context Access Validation and Request Handling","updateNodeContext"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Context Access Validation and Request Handling updateNodeContext should validate context data before update","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055891,"status":"passed","title":"should validate context data before update"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Context Access Validation and Request Handling","getAccessibleContexts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Context Access Validation and Request Handling getAccessibleContexts should return complete hierarchy of accessible contexts","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055892,"status":"passed","title":"should return complete hierarchy of accessible contexts"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Error Handling and Edge Cases","service failure handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Error Handling and Edge Cases service failure handling should handle NodeContextAccessService failures gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055893,"status":"passed","title":"should handle NodeContextAccessService failures gracefully"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Error Handling and Edge Cases","service failure handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Error Handling and Edge Cases service failure handling should handle concurrent access requests safely","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055893,"status":"passed","title":"should handle concurrent access requests safely"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Error Handling and Edge Cases","input validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Error Handling and Edge Cases input validation should reject requests with invalid node IDs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055894,"status":"passed","title":"should reject requests with invalid node IDs"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Error Handling and Edge Cases","input validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Error Handling and Edge Cases input validation should reject requests with invalid access types","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055895,"status":"passed","title":"should reject requests with invalid access types"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Error Handling and Edge Cases","input validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Error Handling and Edge Cases input validation should reject requests with missing user ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055895,"status":"passed","title":"should reject requests with missing user ID"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Error Handling and Edge Cases","circular reference prevention"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Error Handling and Edge Cases circular reference prevention should detect and prevent circular hierarchy relationships","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055896,"status":"passed","title":"should detect and prevent circular hierarchy relationships"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Error Handling and Edge Cases","memory and performance constraints"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Error Handling and Edge Cases memory and performance constraints should handle large context data efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055896,"status":"passed","title":"should handle large context data efficiently"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Error Handling and Edge Cases","memory and performance constraints"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Error Handling and Edge Cases memory and performance constraints should enforce maximum number of accessible contexts","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055899,"status":"passed","title":"should enforce maximum number of accessible contexts"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Architecture Compliance and Clean Architecture Boundaries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Architecture Compliance and Clean Architecture Boundaries should only depend on domain services and value objects","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055905,"status":"passed","title":"should only depend on domain services and value objects"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Architecture Compliance and Clean Architecture Boundaries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Architecture Compliance and Clean Architecture Boundaries should enforce business rules through domain service orchestration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055906,"status":"passed","title":"should enforce business rules through domain service orchestration"},{"ancestorTitles":["ManageHierarchicalContextAccessUseCase - UC-011","Architecture Compliance and Clean Architecture Boundaries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageHierarchicalContextAccessUseCase - UC-011 Architecture Compliance and Clean Architecture Boundaries should return rich domain results with proper error handling","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055907,"status":"passed","title":"should return rich domain results with proper error handling"}],"endTime":1756394055910,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\manage-hierarchical-context-access-use-case.test.ts","startTime":1756394055620,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["WorkflowOrchestrationService","workflow execution"],"duration":121,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService workflow execution should execute simple workflow successfully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394053522,"status":"passed","title":"should execute simple workflow successfully"},{"ancestorTitles":["WorkflowOrchestrationService","workflow execution"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService workflow execution should validate workflow before execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394053645,"status":"passed","title":"should validate workflow before execution"},{"ancestorTitles":["WorkflowOrchestrationService","workflow execution"],"duration":229,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService workflow execution should execute workflow with action nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053647,"status":"passed","title":"should execute workflow with action nodes"},{"ancestorTitles":["WorkflowOrchestrationService","workflow execution"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService workflow execution should handle workflow execution failure gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394053877,"status":"passed","title":"should handle workflow execution failure gracefully"},{"ancestorTitles":["WorkflowOrchestrationService","workflow execution"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService workflow execution should calculate execution order correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394053986,"status":"passed","title":"should calculate execution order correctly"},{"ancestorTitles":["WorkflowOrchestrationService","workflow execution"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService workflow execution should handle circular dependencies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054092,"status":"passed","title":"should handle circular dependencies"},{"ancestorTitles":["WorkflowOrchestrationService","workflow execution"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService workflow execution should update execution progress during workflow execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054098,"status":"passed","title":"should update execution progress during workflow execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","pause execution"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control pause execution should pause running execution successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054215,"status":"passed","title":"should pause running execution successfully"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","pause execution"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control pause execution should reject pausing non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054217,"status":"passed","title":"should reject pausing non-existent execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","pause execution"],"duration":104,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control pause execution should reject pausing completed execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054219,"status":"passed","title":"should reject pausing completed execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","resume execution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control resume execution should resume paused execution successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054323,"status":"passed","title":"should resume paused execution successfully"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","resume execution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control resume execution should reject resuming non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054325,"status":"passed","title":"should reject resuming non-existent execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","resume execution"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control resume execution should reject resuming non-paused execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054325,"status":"passed","title":"should reject resuming non-paused execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","stop execution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control stop execution should stop running execution successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054430,"status":"passed","title":"should stop running execution successfully"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","stop execution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control stop execution should stop paused execution successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054431,"status":"passed","title":"should stop paused execution successfully"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","stop execution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control stop execution should reject stopping non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054431,"status":"passed","title":"should reject stopping non-existent execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","stop execution"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control stop execution should reject stopping already completed execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054432,"status":"passed","title":"should reject stopping already completed execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution control","stop execution"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution control stop execution should reject stopping already stopped execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054538,"status":"passed","title":"should reject stopping already stopped execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution status"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution status should return execution status for existing execution","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394054644,"status":"passed","title":"should return execution status for existing execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution status should return error for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054753,"status":"passed","title":"should return error for non-existent execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution status"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution status should return independent copy of execution status","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054754,"status":"passed","title":"should return independent copy of execution status"},{"ancestorTitles":["WorkflowOrchestrationService","action node execution"],"duration":215,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: StringContaining \"Executing Tether Node: Test Tether\"\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: StringContaining \"Executing Tether Node: Test Tether\"\n\nNumber of calls: 0\n    at Object.toHaveBeenCalledWith (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\workflow-orchestration-service.test.ts:484:26)"],"fullName":"WorkflowOrchestrationService action node execution should execute tether nodes with mock implementation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394054862,"status":"failed","title":"should execute tether nodes with mock implementation"},{"ancestorTitles":["WorkflowOrchestrationService","action node execution"],"duration":103,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: StringContaining \"Processing KB Node: Test KB\"\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: StringContaining \"Processing KB Node: Test KB\"\n\nNumber of calls: 0\n    at Object.toHaveBeenCalledWith (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\workflow-orchestration-service.test.ts:533:26)"],"fullName":"WorkflowOrchestrationService action node execution should execute KB nodes with mock implementation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055096,"status":"failed","title":"should execute KB nodes with mock implementation"},{"ancestorTitles":["WorkflowOrchestrationService","action node execution"],"duration":325,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\nExpected number of calls: 3\nReceived number of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\nExpected number of calls: 3\nReceived number of calls: 0\n    at Object.toHaveBeenCalledTimes (C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\workflow-orchestration-service.test.ts:577:26)"],"fullName":"WorkflowOrchestrationService action node execution should handle action execution in different modes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055199,"status":"failed","title":"should handle action execution in different modes"},{"ancestorTitles":["WorkflowOrchestrationService","error handling and edge cases"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService error handling and edge cases should handle workflow with no action nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055524,"status":"passed","title":"should handle workflow with no action nodes"},{"ancestorTitles":["WorkflowOrchestrationService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService error handling and edge cases should handle empty workflow","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055631,"status":"passed","title":"should handle empty workflow"},{"ancestorTitles":["WorkflowOrchestrationService","error handling and edge cases"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService error handling and edge cases should handle execution context validation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055632,"status":"passed","title":"should handle execution context validation"},{"ancestorTitles":["WorkflowOrchestrationService","error handling and edge cases"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService error handling and edge cases should handle concurrent executions","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055740,"status":"passed","title":"should handle concurrent executions"},{"ancestorTitles":["WorkflowOrchestrationService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService error handling and edge cases should handle unexpected errors during execution","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055850,"status":"passed","title":"should handle unexpected errors during execution"},{"ancestorTitles":["WorkflowOrchestrationService","execution order calculation"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution order calculation should handle nodes with no dependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394055851,"status":"passed","title":"should handle nodes with no dependencies"},{"ancestorTitles":["WorkflowOrchestrationService","execution order calculation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WorkflowOrchestrationService execution order calculation should handle complex dependency chains","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055958,"status":"passed","title":"should handle complex dependency chains"}],"endTime":1756394056010,"message":"  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should execute tether nodes with mock implementation\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: StringContaining \"Executing Tether Node: Test Tether\"\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 482 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n     \u001b[90m 483 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 484 |\u001b[39m       expect(consoleSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 485 |\u001b[39m         expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'Executing Tether Node: Test Tether'\u001b[39m)\n     \u001b[90m 486 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 487 |\u001b[39m       \u001b[0m\n\n      at Object.toHaveBeenCalledWith (tests/unit/domain/services/workflow-orchestration-service.test.ts:484:26)\n\n  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should execute KB nodes with mock implementation\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: StringContaining \"Processing KB Node: Test KB\"\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 531 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n     \u001b[90m 532 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 533 |\u001b[39m       expect(consoleSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 534 |\u001b[39m         expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'Processing KB Node: Test KB'\u001b[39m)\n     \u001b[90m 535 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 536 |\u001b[39m       \u001b[0m\n\n      at Object.toHaveBeenCalledWith (tests/unit/domain/services/workflow-orchestration-service.test.ts:533:26)\n\n  ‚óè WorkflowOrchestrationService ‚Ä∫ action node execution ‚Ä∫ should handle action execution in different modes\n\n    expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\n    Expected number of calls: 3\n    Received number of calls: 0\n\n    \u001b[0m \u001b[90m 575 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n     \u001b[90m 576 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoBeValidResult()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 577 |\u001b[39m       expect(consoleSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// All 3 actions executed (original + 2 new ones)\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 578 |\u001b[39m       \n     \u001b[90m 579 |\u001b[39m       \u001b[90m// Cleanup\u001b[39m\n     \u001b[90m 580 |\u001b[39m       consoleSpy\u001b[33m.\u001b[39mmockRestore()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveBeenCalledTimes (tests/unit/domain/services/workflow-orchestration-service.test.ts:577:26)\n","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\workflow-orchestration-service.test.ts","startTime":1756394051915,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-017: Register AI Agent","registerAgent_ValidRequest_ReturnsAgentId"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-017: Register AI Agent registerAgent_ValidRequest_ReturnsAgentId should successfully register agent when all parameters are valid","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394055966,"status":"passed","title":"should successfully register agent when all parameters are valid"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-017: Register AI Agent","registerAgent_ValidRequest_ReturnsAgentId"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-017: Register AI Agent registerAgent_ValidRequest_ReturnsAgentId should initialize agent performance metrics during registration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055970,"status":"passed","title":"should initialize agent performance metrics during registration"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-017: Register AI Agent","registerAgent_ValidRequest_ReturnsAgentId"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-017: Register AI Agent registerAgent_ValidRequest_ReturnsAgentId should register agent without nodeId for feature-level agents","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055971,"status":"passed","title":"should register agent without nodeId for feature-level agents"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-017: Register AI Agent","registerAgent_InvalidRequest_ReturnsFailure"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-017: Register AI Agent registerAgent_InvalidRequest_ReturnsFailure should fail when agent name is empty","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055972,"status":"passed","title":"should fail when agent name is empty"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-017: Register AI Agent","registerAgent_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-017: Register AI Agent registerAgent_InvalidRequest_ReturnsFailure should fail when agent instructions are empty","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055972,"status":"passed","title":"should fail when agent instructions are empty"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-017: Register AI Agent","registerAgent_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-017: Register AI Agent registerAgent_InvalidRequest_ReturnsFailure should fail when agent has no available tools","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055973,"status":"passed","title":"should fail when agent has no available tools"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-017: Register AI Agent","registerAgent_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-017: Register AI Agent registerAgent_InvalidRequest_ReturnsFailure should fail when agent entity creation fails due to invalid entity ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055974,"status":"passed","title":"should fail when agent entity creation fails due to invalid entity ID"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-017: Register AI Agent","registerAgent_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-017: Register AI Agent registerAgent_InvalidRequest_ReturnsFailure should fail when orchestration service registration fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055975,"status":"passed","title":"should fail when orchestration service registration fails"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-018: Discover Agents by Capability","discoverAgentsByCapability_ValidRequest_ReturnsMatches"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-018: Discover Agents by Capability discoverAgentsByCapability_ValidRequest_ReturnsMatches should discover agents with matching capabilities sorted by score","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055976,"status":"passed","title":"should discover agents with matching capabilities sorted by score"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-018: Discover Agents by Capability","discoverAgentsByCapability_ValidRequest_ReturnsMatches"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-018: Discover Agents by Capability discoverAgentsByCapability_ValidRequest_ReturnsMatches should filter out agents with low match scores","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055977,"status":"passed","title":"should filter out agents with low match scores"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-018: Discover Agents by Capability","discoverAgentsByCapability_ValidRequest_ReturnsMatches"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-018: Discover Agents by Capability discoverAgentsByCapability_ValidRequest_ReturnsMatches should discover agents by node-specific filtering","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055983,"status":"passed","title":"should discover agents by node-specific filtering"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-018: Discover Agents by Capability","discoverAgentsByCapability_InvalidRequest_ReturnsFailure"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-018: Discover Agents by Capability discoverAgentsByCapability_InvalidRequest_ReturnsFailure should fail when no capabilities are specified","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055984,"status":"passed","title":"should fail when no capabilities are specified"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-018: Discover Agents by Capability","discoverAgentsByCapability_InvalidRequest_ReturnsFailure"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-018: Discover Agents by Capability discoverAgentsByCapability_InvalidRequest_ReturnsFailure should fail when orchestration service discovery fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055984,"status":"passed","title":"should fail when orchestration service discovery fails"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-019: Execute AI Agent Task","executeAgentTask_ValidRequest_ReturnsExecutionId"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-019: Execute AI Agent Task executeAgentTask_ValidRequest_ReturnsExecutionId should execute task and return execution request ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055985,"status":"passed","title":"should execute task and return execution request ID"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-019: Execute AI Agent Task","executeAgentTask_ValidRequest_ReturnsExecutionId"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-019: Execute AI Agent Task executeAgentTask_ValidRequest_ReturnsExecutionId should execute task with minimal required parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055985,"status":"passed","title":"should execute task with minimal required parameters"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-019: Execute AI Agent Task","executeAgentTask_ValidRequest_ReturnsExecutionId"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-019: Execute AI Agent Task executeAgentTask_ValidRequest_ReturnsExecutionId should handle queued execution when at capacity","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055986,"status":"passed","title":"should handle queued execution when at capacity"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-019: Execute AI Agent Task","executeAgentTask_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-019: Execute AI Agent Task executeAgentTask_InvalidRequest_ReturnsFailure should fail when task description is empty","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055986,"status":"passed","title":"should fail when task description is empty"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-019: Execute AI Agent Task","executeAgentTask_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-019: Execute AI Agent Task executeAgentTask_InvalidRequest_ReturnsFailure should fail when agent ID is not provided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055987,"status":"passed","title":"should fail when agent ID is not provided"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-019: Execute AI Agent Task","executeAgentTask_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-019: Execute AI Agent Task executeAgentTask_InvalidRequest_ReturnsFailure should fail when priority is out of valid range","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055988,"status":"passed","title":"should fail when priority is out of valid range"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-019: Execute AI Agent Task","executeAgentTask_InvalidRequest_ReturnsFailure"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-019: Execute AI Agent Task executeAgentTask_InvalidRequest_ReturnsFailure should fail when orchestration service execution fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055989,"status":"passed","title":"should fail when orchestration service execution fails"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-020: Perform Semantic Agent Search","performSemanticAgentSearch_ValidQuery_ReturnsRankedResults"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-020: Perform Semantic Agent Search performSemanticAgentSearch_ValidQuery_ReturnsRankedResults should perform semantic search with natural language query","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055990,"status":"passed","title":"should perform semantic search with natural language query"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-020: Perform Semantic Agent Search","performSemanticAgentSearch_ValidQuery_ReturnsRankedResults"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-020: Perform Semantic Agent Search performSemanticAgentSearch_ValidQuery_ReturnsRankedResults should use default max results when not specified","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055991,"status":"passed","title":"should use default max results when not specified"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-020: Perform Semantic Agent Search","performSemanticAgentSearch_ValidQuery_ReturnsRankedResults"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-020: Perform Semantic Agent Search performSemanticAgentSearch_ValidQuery_ReturnsRankedResults should filter agents by feature type in semantic search","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055991,"status":"passed","title":"should filter agents by feature type in semantic search"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-020: Perform Semantic Agent Search","performSemanticAgentSearch_InvalidQuery_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-020: Perform Semantic Agent Search performSemanticAgentSearch_InvalidQuery_ReturnsFailure should fail when search query is empty","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055992,"status":"passed","title":"should fail when search query is empty"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-020: Perform Semantic Agent Search","performSemanticAgentSearch_InvalidQuery_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-020: Perform Semantic Agent Search performSemanticAgentSearch_InvalidQuery_ReturnsFailure should fail when query is too short","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055993,"status":"passed","title":"should fail when query is too short"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-020: Perform Semantic Agent Search","performSemanticAgentSearch_InvalidQuery_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-020: Perform Semantic Agent Search performSemanticAgentSearch_InvalidQuery_ReturnsFailure should fail when max results is out of range","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055994,"status":"passed","title":"should fail when max results is out of range"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-020: Perform Semantic Agent Search","performSemanticAgentSearch_InvalidQuery_ReturnsFailure"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-020: Perform Semantic Agent Search performSemanticAgentSearch_InvalidQuery_ReturnsFailure should fail when orchestration service search fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394055995,"status":"passed","title":"should fail when orchestration service search fails"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_ValidRequest_ReturnsAggregatedResults"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_ValidRequest_ReturnsAggregatedResults should execute sequential workflow and aggregate results","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055995,"status":"passed","title":"should execute sequential workflow and aggregate results"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_ValidRequest_ReturnsAggregatedResults"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_ValidRequest_ReturnsAggregatedResults should execute parallel workflow and aggregate results","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394055997,"status":"passed","title":"should execute parallel workflow and aggregate results"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_ValidRequest_ReturnsAggregatedResults"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_ValidRequest_ReturnsAggregatedResults should handle workflow with mixed success and failure results","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394055998,"status":"passed","title":"should handle workflow with mixed success and failure results"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_InvalidRequest_ReturnsFailure should fail when workflow has no tasks","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055999,"status":"passed","title":"should fail when workflow has no tasks"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_InvalidRequest_ReturnsFailure should fail when workflow exceeds maximum tasks","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056000,"status":"passed","title":"should fail when workflow exceeds maximum tasks"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_InvalidRequest_ReturnsFailure should fail when execution mode is invalid","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056001,"status":"passed","title":"should fail when execution mode is invalid"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_InvalidRequest_ReturnsFailure"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_InvalidRequest_ReturnsFailure should fail when task has empty description","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056002,"status":"passed","title":"should fail when task has empty description"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_InvalidRequest_ReturnsFailure"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_InvalidRequest_ReturnsFailure should fail when task has no agent ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056003,"status":"passed","title":"should fail when task has no agent ID"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_InvalidRequest_ReturnsFailure should fail when result count does not match task count","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056003,"status":"passed","title":"should fail when result count does not match task count"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","UC-021: Coordinate Workflow Agent Execution","coordinateWorkflowExecution_InvalidRequest_ReturnsFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase UC-021: Coordinate Workflow Agent Execution coordinateWorkflowExecution_InvalidRequest_ReturnsFailure should fail when orchestration service coordination fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056004,"status":"passed","title":"should fail when orchestration service coordination fails"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","Complex Orchestration Scenarios","multiAgentWorkflow_ComplexScenario_HandlesAllCases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase Complex Orchestration Scenarios multiAgentWorkflow_ComplexScenario_HandlesAllCases should handle complete multi-agent orchestration lifecycle","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394056005,"status":"passed","title":"should handle complete multi-agent orchestration lifecycle"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","Supporting Operations","registerNodeMetadata_ValidMetadata_ReturnsSuccess"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase Supporting Operations registerNodeMetadata_ValidMetadata_ReturnsSuccess should register node metadata for semantic search","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056007,"status":"passed","title":"should register node metadata for semantic search"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","Supporting Operations","registerNodeMetadata_ValidMetadata_ReturnsSuccess"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase Supporting Operations registerNodeMetadata_ValidMetadata_ReturnsSuccess should fail when orchestration service metadata registration fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056008,"status":"passed","title":"should fail when orchestration service metadata registration fails"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","Supporting Operations","getExecutionResult_ValidRequestId_ReturnsResult"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase Supporting Operations getExecutionResult_ValidRequestId_ReturnsResult should return execution result when request ID is valid","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056012,"status":"passed","title":"should return execution result when request ID is valid"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","Supporting Operations","getExecutionResult_ValidRequestId_ReturnsResult"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase Supporting Operations getExecutionResult_ValidRequestId_ReturnsResult should fail when request ID is empty","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056013,"status":"passed","title":"should fail when request ID is empty"},{"ancestorTitles":["ManageAiAgentOrchestrationUseCase","Supporting Operations","getAgentPerformanceMetrics_ValidAgentId_ReturnsMetrics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageAiAgentOrchestrationUseCase Supporting Operations getAgentPerformanceMetrics_ValidAgentId_ReturnsMetrics should return agent performance metrics","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056014,"status":"passed","title":"should return agent performance metrics"}],"endTime":1756394056017,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\manage-ai-agent-orchestration-use-case.test.ts","startTime":1756394055741,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Comprehensive Domain Events","Function Model Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Function Model Events should define all required function model lifecycle events","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394056114,"status":"passed","title":"should define all required function model lifecycle events"},{"ancestorTitles":["Comprehensive Domain Events","Function Model Events"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Function Model Events should define all required container node events","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056115,"status":"passed","title":"should define all required container node events"},{"ancestorTitles":["Comprehensive Domain Events","Function Model Events"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Function Model Events should define all required action node events","invocations":1,"location":null,"numPassingAsserts":30,"retryReasons":[],"startAt":1756394056117,"status":"passed","title":"should define all required action node events"},{"ancestorTitles":["Comprehensive Domain Events","Function Model Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Function Model Events should define orchestration-related events","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056120,"status":"passed","title":"should define orchestration-related events"},{"ancestorTitles":["Comprehensive Domain Events","Relationship Events"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Relationship Events should define all node link events","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056122,"status":"passed","title":"should define all node link events"},{"ancestorTitles":["Comprehensive Domain Events","Relationship Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Relationship Events should define all cross-feature link events","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056122,"status":"passed","title":"should define all cross-feature link events"},{"ancestorTitles":["Comprehensive Domain Events","AI Agent Events"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events AI Agent Events should define all AI agent lifecycle events","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394056123,"status":"passed","title":"should define all AI agent lifecycle events"},{"ancestorTitles":["Comprehensive Domain Events","Event Data Structure Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Data Structure Validation should validate function model event data structure","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056130,"status":"passed","title":"should validate function model event data structure"},{"ancestorTitles":["Comprehensive Domain Events","Event Data Structure Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Data Structure Validation should validate action node execution event data structure","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056131,"status":"passed","title":"should validate action node execution event data structure"},{"ancestorTitles":["Comprehensive Domain Events","Event Data Structure Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Data Structure Validation should validate relationship event data structure","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056133,"status":"passed","title":"should validate relationship event data structure"},{"ancestorTitles":["Comprehensive Domain Events","Event Data Structure Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Data Structure Validation should validate AI agent event data structure","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056134,"status":"passed","title":"should validate AI agent event data structure"},{"ancestorTitles":["Comprehensive Domain Events","Event Ordering and Causality"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Ordering and Causality should maintain proper event ordering for model lifecycle","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056136,"status":"passed","title":"should maintain proper event ordering for model lifecycle"},{"ancestorTitles":["Comprehensive Domain Events","Event Ordering and Causality"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Ordering and Causality should maintain proper causality for action node execution","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056138,"status":"passed","title":"should maintain proper causality for action node execution"},{"ancestorTitles":["Comprehensive Domain Events","Event Integration with Business Rules"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Integration with Business Rules should trigger events for all significant domain changes","invocations":1,"location":null,"numPassingAsserts":24,"retryReasons":[],"startAt":1756394056139,"status":"passed","title":"should trigger events for all significant domain changes"},{"ancestorTitles":["Comprehensive Domain Events","Event Integration with Business Rules"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Integration with Business Rules should ensure event consistency with aggregate boundaries","invocations":1,"location":null,"numPassingAsserts":33,"retryReasons":[],"startAt":1756394056142,"status":"passed","title":"should ensure event consistency with aggregate boundaries"},{"ancestorTitles":["Comprehensive Domain Events","Event Subscription and Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Subscription and Handling should support event subscription patterns","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"startAt":1756394056146,"status":"passed","title":"should support event subscription patterns"},{"ancestorTitles":["Comprehensive Domain Events","Event Subscription and Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Comprehensive Domain Events Event Subscription and Handling should validate event handler requirements","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056147,"status":"passed","title":"should validate event handler requirements"}],"endTime":1756394056149,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\events\\comprehensive-domain-events.test.ts","startTime":1756394055924,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["RACI","creation and validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI creation and validation should create RACI with valid roles","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056099,"status":"passed","title":"should create RACI with valid roles"},{"ancestorTitles":["RACI","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI creation and validation should create RACI with only responsible parties","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056101,"status":"passed","title":"should create RACI with only responsible parties"},{"ancestorTitles":["RACI","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI creation and validation should create RACI with multiple parties in same role","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056102,"status":"passed","title":"should create RACI with multiple parties in same role"},{"ancestorTitles":["RACI","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI creation and validation should reject RACI with no responsible parties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056102,"status":"passed","title":"should reject RACI with no responsible parties"},{"ancestorTitles":["RACI","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI creation and validation should reject RACI with duplicate parties across roles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056103,"status":"passed","title":"should reject RACI with duplicate parties across roles"},{"ancestorTitles":["RACI","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI creation and validation should reject RACI with duplicate parties within same role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056103,"status":"passed","title":"should reject RACI with duplicate parties within same role"},{"ancestorTitles":["RACI","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI creation and validation should reject RACI with empty party name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056104,"status":"passed","title":"should reject RACI with empty party name"},{"ancestorTitles":["RACI","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI creation and validation should reject RACI with whitespace-only party name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056104,"status":"passed","title":"should reject RACI with whitespace-only party name"},{"ancestorTitles":["RACI","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI creation and validation should detect duplicates across different roles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056104,"status":"passed","title":"should detect duplicates across different roles"},{"ancestorTitles":["RACI","factory methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI factory methods should create empty RACI with system as responsible","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056105,"status":"passed","title":"should create empty RACI with system as responsible"},{"ancestorTitles":["RACI","factory methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI factory methods should always return same empty structure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056106,"status":"passed","title":"should always return same empty structure"},{"ancestorTitles":["RACI","role checking"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role checking should correctly identify responsible parties","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056107,"status":"passed","title":"should correctly identify responsible parties"},{"ancestorTitles":["RACI","role checking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role checking should correctly identify accountable parties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056107,"status":"passed","title":"should correctly identify accountable parties"},{"ancestorTitles":["RACI","role checking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role checking should correctly identify consulted parties","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056108,"status":"passed","title":"should correctly identify consulted parties"},{"ancestorTitles":["RACI","role checking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role checking should correctly identify informed parties","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056109,"status":"passed","title":"should correctly identify informed parties"},{"ancestorTitles":["RACI","role checking"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role checking should return false for non-existent party","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056110,"status":"passed","title":"should return false for non-existent party"},{"ancestorTitles":["RACI","role checking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role checking should handle case-sensitive party names","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056110,"status":"passed","title":"should handle case-sensitive party names"},{"ancestorTitles":["RACI","role retrieval"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role retrieval should return parties for responsible role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056111,"status":"passed","title":"should return parties for responsible role"},{"ancestorTitles":["RACI","role retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role retrieval should return parties for accountable role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056111,"status":"passed","title":"should return parties for accountable role"},{"ancestorTitles":["RACI","role retrieval"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role retrieval should return parties for consulted role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056112,"status":"passed","title":"should return parties for consulted role"},{"ancestorTitles":["RACI","role retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role retrieval should return parties for informed role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056112,"status":"passed","title":"should return parties for informed role"},{"ancestorTitles":["RACI","role retrieval"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role retrieval should return readonly arrays","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056113,"status":"passed","title":"should return readonly arrays"},{"ancestorTitles":["RACI","role retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI role retrieval should return empty array for invalid role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056129,"status":"passed","title":"should return empty array for invalid role"},{"ancestorTitles":["RACI","party management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should get all parties across roles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056130,"status":"passed","title":"should get all parties across roles"},{"ancestorTitles":["RACI","party management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should return defensive copy of all parties","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056131,"status":"passed","title":"should return defensive copy of all parties"},{"ancestorTitles":["RACI","party management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should add party to responsible role","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056131,"status":"passed","title":"should add party to responsible role"},{"ancestorTitles":["RACI","party management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should add party to accountable role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056132,"status":"passed","title":"should add party to accountable role"},{"ancestorTitles":["RACI","party management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should add party to consulted role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056132,"status":"passed","title":"should add party to consulted role"},{"ancestorTitles":["RACI","party management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should add party to informed role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056133,"status":"passed","title":"should add party to informed role"},{"ancestorTitles":["RACI","party management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should trim whitespace when adding party","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056133,"status":"passed","title":"should trim whitespace when adding party"},{"ancestorTitles":["RACI","party management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should reject adding empty party name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056134,"status":"passed","title":"should reject adding empty party name"},{"ancestorTitles":["RACI","party management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should reject adding whitespace-only party name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056134,"status":"passed","title":"should reject adding whitespace-only party name"},{"ancestorTitles":["RACI","party management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should reject adding party that already exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056135,"status":"passed","title":"should reject adding party that already exists"},{"ancestorTitles":["RACI","party management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should reject adding party that exists in different role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056136,"status":"passed","title":"should reject adding party that exists in different role"},{"ancestorTitles":["RACI","party management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI party management should not modify original RACI when adding party","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056136,"status":"passed","title":"should not modify original RACI when adding party"},{"ancestorTitles":["RACI","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI equality and comparison should be equal when all roles match exactly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056137,"status":"passed","title":"should be equal when all roles match exactly"},{"ancestorTitles":["RACI","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI equality and comparison should be equal when parties are in different order","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056137,"status":"passed","title":"should be equal when parties are in different order"},{"ancestorTitles":["RACI","equality and comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI equality and comparison should not be equal when responsible parties differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056137,"status":"passed","title":"should not be equal when responsible parties differ"},{"ancestorTitles":["RACI","equality and comparison"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI equality and comparison should not be equal when accountable parties differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056138,"status":"passed","title":"should not be equal when accountable parties differ"},{"ancestorTitles":["RACI","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI equality and comparison should not be equal when consulted parties differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056143,"status":"passed","title":"should not be equal when consulted parties differ"},{"ancestorTitles":["RACI","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI equality and comparison should not be equal when informed parties differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056143,"status":"passed","title":"should not be equal when informed parties differ"},{"ancestorTitles":["RACI","equality and comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI equality and comparison should not be equal when number of parties differs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056143,"status":"passed","title":"should not be equal when number of parties differs"},{"ancestorTitles":["RACI","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI equality and comparison should be equal with empty roles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056144,"status":"passed","title":"should be equal with empty roles"},{"ancestorTitles":["RACI","equality and comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI equality and comparison should handle comparison with complex multi-role setup","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056144,"status":"passed","title":"should handle comparison with complex multi-role setup"},{"ancestorTitles":["RACI","object conversion"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI object conversion should convert to object with all role arrays","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056145,"status":"passed","title":"should convert to object with all role arrays"},{"ancestorTitles":["RACI","object conversion"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI object conversion should convert with empty roles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056145,"status":"passed","title":"should convert with empty roles"},{"ancestorTitles":["RACI","object conversion"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI object conversion should create independent arrays in object","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056146,"status":"passed","title":"should create independent arrays in object"},{"ancestorTitles":["RACI","object conversion"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI object conversion should work with JSON serialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056146,"status":"passed","title":"should work with JSON serialization"},{"ancestorTitles":["RACI","immutability"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI immutability should have readonly role arrays","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056147,"status":"passed","title":"should have readonly role arrays"},{"ancestorTitles":["RACI","immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI immutability should not allow modification of internal arrays","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056149,"status":"passed","title":"should not allow modification of internal arrays"},{"ancestorTitles":["RACI","immutability"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI immutability should return new instance when adding party","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056150,"status":"passed","title":"should return new instance when adding party"},{"ancestorTitles":["RACI","edge cases and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI edge cases and validation should handle single character party names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056150,"status":"passed","title":"should handle single character party names"},{"ancestorTitles":["RACI","edge cases and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI edge cases and validation should handle very long party names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056151,"status":"passed","title":"should handle very long party names"},{"ancestorTitles":["RACI","edge cases and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI edge cases and validation should handle special characters in party names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056151,"status":"passed","title":"should handle special characters in party names"},{"ancestorTitles":["RACI","edge cases and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI edge cases and validation should handle unicode characters in party names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056152,"status":"passed","title":"should handle unicode characters in party names"},{"ancestorTitles":["RACI","edge cases and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI edge cases and validation should detect duplicates case-sensitively","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056152,"status":"passed","title":"should detect duplicates case-sensitively"},{"ancestorTitles":["RACI","edge cases and validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI edge cases and validation should handle null values gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056153,"status":"passed","title":"should handle null values gracefully"},{"ancestorTitles":["RACI","edge cases and validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI edge cases and validation should handle undefined values gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056156,"status":"passed","title":"should handle undefined values gracefully"},{"ancestorTitles":["RACI","business rule validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI business rule validation should enforce that responsible role cannot be empty in any operation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056158,"status":"passed","title":"should enforce that responsible role cannot be empty in any operation"},{"ancestorTitles":["RACI","business rule validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI business rule validation should maintain RACI principle of unique party-role assignment","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056158,"status":"passed","title":"should maintain RACI principle of unique party-role assignment"},{"ancestorTitles":["RACI","business rule validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RACI business rule validation should allow same name in different RACI instances","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056159,"status":"passed","title":"should allow same name in different RACI instances"}],"endTime":1756394056161,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\value-objects\\raci.test.ts","startTime":1756394055898,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AuditLog","Factory Pattern - Creation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Factory Pattern - Creation should create audit log with create operation","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056113,"status":"passed","title":"should create audit log with create operation"},{"ancestorTitles":["AuditLog","Factory Pattern - Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Factory Pattern - Creation should create audit log with update operation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056115,"status":"passed","title":"should create audit log with update operation"},{"ancestorTitles":["AuditLog","Factory Pattern - Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Factory Pattern - Creation should create audit log with delete operation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056116,"status":"passed","title":"should create audit log with delete operation"},{"ancestorTitles":["AuditLog","Factory Pattern - Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Factory Pattern - Creation should automatically set changedAt timestamp","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056117,"status":"passed","title":"should automatically set changedAt timestamp"},{"ancestorTitles":["AuditLog","Validation Rules","Basic field validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Basic field validation should reject empty audit ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056118,"status":"passed","title":"should reject empty audit ID"},{"ancestorTitles":["AuditLog","Validation Rules","Basic field validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Basic field validation should reject whitespace-only audit ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056118,"status":"passed","title":"should reject whitespace-only audit ID"},{"ancestorTitles":["AuditLog","Validation Rules","Basic field validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Basic field validation should reject empty table name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056119,"status":"passed","title":"should reject empty table name"},{"ancestorTitles":["AuditLog","Validation Rules","Basic field validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Basic field validation should reject empty record ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056119,"status":"passed","title":"should reject empty record ID"},{"ancestorTitles":["AuditLog","Validation Rules","Basic field validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Basic field validation should reject empty changedBy user ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056120,"status":"passed","title":"should reject empty changedBy user ID"},{"ancestorTitles":["AuditLog","Validation Rules","Operation validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Operation validation should reject invalid operation type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056121,"status":"passed","title":"should reject invalid operation type"},{"ancestorTitles":["AuditLog","Validation Rules","Operation validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Operation validation should accept all valid operation types","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056121,"status":"passed","title":"should accept all valid operation types"},{"ancestorTitles":["AuditLog","Validation Rules","Operation-specific data validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Operation-specific data validation should require new data for create operation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056122,"status":"passed","title":"should require new data for create operation"},{"ancestorTitles":["AuditLog","Validation Rules","Operation-specific data validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Operation-specific data validation should require old data for delete operation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056123,"status":"passed","title":"should require old data for delete operation"},{"ancestorTitles":["AuditLog","Validation Rules","Operation-specific data validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Operation-specific data validation should require old data or new data for update operation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056123,"status":"passed","title":"should require old data or new data for update operation"},{"ancestorTitles":["AuditLog","Validation Rules","Operation-specific data validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Operation-specific data validation should allow update operation with only old data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056124,"status":"passed","title":"should allow update operation with only old data"},{"ancestorTitles":["AuditLog","Validation Rules","Operation-specific data validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Validation Rules Operation-specific data validation should allow update operation with only new data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056124,"status":"passed","title":"should allow update operation with only new data"},{"ancestorTitles":["AuditLog","Operation Detection"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Operation Detection should correctly identify create operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056125,"status":"passed","title":"should correctly identify create operations"},{"ancestorTitles":["AuditLog","Operation Detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Operation Detection should correctly identify update operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056128,"status":"passed","title":"should correctly identify update operations"},{"ancestorTitles":["AuditLog","Operation Detection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Operation Detection should correctly identify delete operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056129,"status":"passed","title":"should correctly identify delete operations"},{"ancestorTitles":["AuditLog","Data Change Detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Data Change Detection should detect data changes when old data exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056129,"status":"passed","title":"should detect data changes when old data exists"},{"ancestorTitles":["AuditLog","Data Change Detection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Data Change Detection should detect data changes when new data exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056130,"status":"passed","title":"should detect data changes when new data exists"},{"ancestorTitles":["AuditLog","Data Change Detection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Data Change Detection should detect data changes when both old and new data exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056130,"status":"passed","title":"should detect data changes when both old and new data exist"},{"ancestorTitles":["AuditLog","Data Change Detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Data Change Detection should not detect data changes when neither old nor new data exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056130,"status":"passed","title":"should not detect data changes when neither old nor new data exists"},{"ancestorTitles":["AuditLog","Field Change Analysis"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Field Change Analysis should identify changed fields for update operations","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056131,"status":"passed","title":"should identify changed fields for update operations"},{"ancestorTitles":["AuditLog","Field Change Analysis"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Field Change Analysis should identify removed fields as changes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056132,"status":"passed","title":"should identify removed fields as changes"},{"ancestorTitles":["AuditLog","Field Change Analysis"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Field Change Analysis should return empty array for create operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056132,"status":"passed","title":"should return empty array for create operations"},{"ancestorTitles":["AuditLog","Field Change Analysis"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Field Change Analysis should return empty array for delete operations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056133,"status":"passed","title":"should return empty array for delete operations"},{"ancestorTitles":["AuditLog","Field Change Analysis"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Field Change Analysis should return empty array when update has no old data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056133,"status":"passed","title":"should return empty array when update has no old data"},{"ancestorTitles":["AuditLog","Field Change Analysis"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Field Change Analysis should return empty array when update has no new data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056133,"status":"passed","title":"should return empty array when update has no new data"},{"ancestorTitles":["AuditLog","Field Change Analysis"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Field Change Analysis should handle complex nested objects in change detection","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056134,"status":"passed","title":"should handle complex nested objects in change detection"},{"ancestorTitles":["AuditLog","Field Change Analysis"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Field Change Analysis should handle null and undefined values in change detection","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056134,"status":"passed","title":"should handle null and undefined values in change detection"},{"ancestorTitles":["AuditLog","Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Equality and Comparison should be equal when audit IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056135,"status":"passed","title":"should be equal when audit IDs match"},{"ancestorTitles":["AuditLog","Equality and Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Equality and Comparison should not be equal when audit IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056135,"status":"passed","title":"should not be equal when audit IDs differ"},{"ancestorTitles":["AuditLog","Property Access and Immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Property Access and Immutability should provide read-only access to all properties","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056136,"status":"passed","title":"should provide read-only access to all properties"},{"ancestorTitles":["AuditLog","Property Access and Immutability"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Property Access and Immutability should return consistent values on multiple property accesses","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056137,"status":"passed","title":"should return consistent values on multiple property accesses"},{"ancestorTitles":["AuditLog","Edge Cases and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Edge Cases and Error Handling should handle very large data objects","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056137,"status":"passed","title":"should handle very large data objects"},{"ancestorTitles":["AuditLog","Edge Cases and Error Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Edge Cases and Error Handling should handle special characters in string fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056138,"status":"passed","title":"should handle special characters in string fields"},{"ancestorTitles":["AuditLog","Edge Cases and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Edge Cases and Error Handling should handle empty objects as data","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056138,"status":"passed","title":"should handle empty objects as data"},{"ancestorTitles":["AuditLog","Edge Cases and Error Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Edge Cases and Error Handling should handle arrays as data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056139,"status":"passed","title":"should handle arrays as data"},{"ancestorTitles":["AuditLog","Result Pattern Integration"],"duration":18,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Result Pattern Integration should follow Result pattern for successful creation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056139,"status":"passed","title":"should follow Result pattern for successful creation"},{"ancestorTitles":["AuditLog","Result Pattern Integration"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog Result Pattern Integration should provide meaningful error messages for validation failures","invocations":1,"location":null,"numPassingAsserts":40,"retryReasons":[],"startAt":1756394056157,"status":"passed","title":"should provide meaningful error messages for validation failures"}],"endTime":1756394056171,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\audit-log.test.ts","startTime":1756394055915,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Domain Events Test Suite - Fixed","Base Domain Event"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Base Domain Event should create event with required properties","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056173,"status":"passed","title":"should create event with required properties"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Base Domain Event"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Base Domain Event should generate unique event IDs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056175,"status":"passed","title":"should generate unique event IDs"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Base Domain Event"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Base Domain Event should support custom event versions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056176,"status":"passed","title":"should support custom event versions"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Base Domain Event"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Base Domain Event should serialize to object correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056176,"status":"passed","title":"should serialize to object correctly"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Base Domain Event"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Base Domain Event should implement equality correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056177,"status":"passed","title":"should implement equality correctly"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Model Events","ModelCreated"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Model Events ModelCreated should create model created event with correct data","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056178,"status":"passed","title":"should create model created event with correct data"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Model Events","ModelCreated"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Model Events ModelCreated should serialize correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056179,"status":"passed","title":"should serialize correctly"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Model Events","ModelUpdated"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Model Events ModelUpdated should create model updated event with changes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056180,"status":"passed","title":"should create model updated event with changes"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Model Events","ModelPublished"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Model Events ModelPublished should create model published event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056181,"status":"passed","title":"should create model published event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Model Events","ModelArchived"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Model Events ModelArchived should create model archived event with reason","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056182,"status":"passed","title":"should create model archived event with reason"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Model Events","ModelArchived"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Model Events ModelArchived should create model archived event without reason","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056182,"status":"passed","title":"should create model archived event without reason"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Model Events","VersionCreated"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Model Events VersionCreated should create version created event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056183,"status":"passed","title":"should create version created event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Model Events","ActionNodeRetryPolicyUpdated"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Model Events ActionNodeRetryPolicyUpdated should create retry policy updated event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056184,"status":"passed","title":"should create retry policy updated event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Action Node Events","ActionNodeAdded"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Action Node Events ActionNodeAdded should create action node added event","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056184,"status":"passed","title":"should create action node added event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Action Node Events","ActionNodeExecutionStarted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Action Node Events ActionNodeExecutionStarted should create action execution started event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056185,"status":"passed","title":"should create action execution started event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Action Node Events","ActionNodeExecutionCompleted"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Action Node Events ActionNodeExecutionCompleted should create action execution completed event with output","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056186,"status":"passed","title":"should create action execution completed event with output"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Action Node Events","ActionNodeExecutionOrderChanged"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Action Node Events ActionNodeExecutionOrderChanged should create execution order changed event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056186,"status":"passed","title":"should create execution order changed event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Action Node Events","ActionNodeExecutionModeChanged"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Action Node Events ActionNodeExecutionModeChanged should create execution mode changed event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056187,"status":"passed","title":"should create execution mode changed event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Action Node Events","ActionNodePriorityChanged"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Action Node Events ActionNodePriorityChanged should create priority changed event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056187,"status":"passed","title":"should create priority changed event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","AI Agent Events","AIAgentConfigured"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed AI Agent Events AIAgentConfigured should create AI agent configured event with node ID","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056188,"status":"passed","title":"should create AI agent configured event with node ID"},{"ancestorTitles":["Domain Events Test Suite - Fixed","AI Agent Events","AIAgentConfigured"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed AI Agent Events AIAgentConfigured should create AI agent configured event without optional fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056192,"status":"passed","title":"should create AI agent configured event without optional fields"},{"ancestorTitles":["Domain Events Test Suite - Fixed","AI Agent Events","AIAgentConfigurationUpdated"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed AI Agent Events AIAgentConfigurationUpdated should create AI agent configuration updated event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056192,"status":"passed","title":"should create AI agent configuration updated event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","AI Agent Events","AIAgentTaskCompleted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed AI Agent Events AIAgentTaskCompleted should create AI agent task completed event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056193,"status":"passed","title":"should create AI agent task completed event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","AI Agent Events","AIAgentTaskFailed"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed AI Agent Events AIAgentTaskFailed should create AI agent task failed event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056194,"status":"passed","title":"should create AI agent task failed event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Orchestration Events","ContainerNodeOrchestrationStarted"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Orchestration Events ContainerNodeOrchestrationStarted should create container orchestration started event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056195,"status":"passed","title":"should create container orchestration started event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Orchestration Events","ContainerNodeOrchestrationCompleted"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Orchestration Events ContainerNodeOrchestrationCompleted should create container orchestration completed event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056196,"status":"passed","title":"should create container orchestration completed event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Orchestration Events","FractalOrchestrationLevelChanged"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Orchestration Events FractalOrchestrationLevelChanged should create fractal orchestration level changed event","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056196,"status":"passed","title":"should create fractal orchestration level changed event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Execution Events","ExecutionStarted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Execution Events ExecutionStarted should create execution started event","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056197,"status":"passed","title":"should create execution started event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Execution Events","NodeExecuted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Execution Events NodeExecuted should create node executed event with success","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056198,"status":"passed","title":"should create node executed event with success"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Execution Events","NodeExecuted"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Execution Events NodeExecuted should create node executed event with failure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056200,"status":"passed","title":"should create node executed event with failure"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Cross-Feature Link Events","CrossFeatureLinkEstablished"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Cross-Feature Link Events CrossFeatureLinkEstablished should create cross feature link established event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056200,"status":"passed","title":"should create cross feature link established event"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Cross-Feature Link Events","CrossFeatureLinkBroken"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Cross-Feature Link Events CrossFeatureLinkBroken should create cross feature link broken event with reason","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056201,"status":"passed","title":"should create cross feature link broken event with reason"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Cross-Feature Link Events","CrossFeatureLinkBroken"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Cross-Feature Link Events CrossFeatureLinkBroken should create cross feature link broken event without reason","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056202,"status":"passed","title":"should create cross feature link broken event without reason"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Event Business Context Validation"],"duration":21,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Event Business Context Validation should validate that all events have consistent timestamp ordering","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056202,"status":"passed","title":"should validate that all events have consistent timestamp ordering"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Event Business Context Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Event Business Context Validation should validate model lifecycle event sequence business rules","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056223,"status":"passed","title":"should validate model lifecycle event sequence business rules"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Event Business Context Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Event Business Context Validation should validate orchestration event completeness","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056224,"status":"passed","title":"should validate orchestration event completeness"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Event Data Validation and Serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Event Data Validation and Serialization should serialize complex event data correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056225,"status":"passed","title":"should serialize complex event data correctly"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Event Data Validation and Serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Event Data Validation and Serialization should handle undefined optional fields in serialization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056226,"status":"passed","title":"should handle undefined optional fields in serialization"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Event Data Validation and Serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Event Data Validation and Serialization should validate retry policy event data integrity","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056227,"status":"passed","title":"should validate retry policy event data integrity"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Event Data Validation and Serialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Event Data Validation and Serialization should validate event data immutability","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056228,"status":"passed","title":"should validate event data immutability"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Event Version Compatibility"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Event Version Compatibility should support event versioning for backward compatibility","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056228,"status":"passed","title":"should support event versioning for backward compatibility"},{"ancestorTitles":["Domain Events Test Suite - Fixed","Event Version Compatibility"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite - Fixed Event Version Compatibility should handle event schema evolution gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056229,"status":"passed","title":"should handle event schema evolution gracefully"}],"endTime":1756394056232,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\events\\domain-events-fixed.test.ts","startTime":1756394055916,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Basic CRUD Operations"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Basic CRUD Operations should save and retrieve models","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056236,"status":"passed","title":"should save and retrieve models"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Basic CRUD Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Basic CRUD Operations should return error when model not found","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056242,"status":"passed","title":"should return error when model not found"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Basic CRUD Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Basic CRUD Operations should delete models successfully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056243,"status":"passed","title":"should delete models successfully"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Basic CRUD Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Basic CRUD Operations should check model existence","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056244,"status":"passed","title":"should check model existence"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Query Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Query Operations should find models by status","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056245,"status":"passed","title":"should find models by status"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Query Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Query Operations should find models by owner","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056247,"status":"passed","title":"should find models by owner"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Query Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Query Operations should find all models","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056248,"status":"passed","title":"should find all models"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Query Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Query Operations should find models by name pattern","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056249,"status":"passed","title":"should find models by name pattern"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Query Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Query Operations should count models by status","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056251,"status":"passed","title":"should count models by status"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Model State Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Model State Management should publish models","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056252,"status":"passed","title":"should publish models"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Model State Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Model State Management should archive models","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056253,"status":"passed","title":"should archive models"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Model State Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Model State Management should soft delete models","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056254,"status":"passed","title":"should soft delete models"},{"ancestorTitles":["Repository Contract Tests","FunctionModelRepository Contract","Model State Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests FunctionModelRepository Contract Model State Management should restore soft deleted models","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056256,"status":"passed","title":"should restore soft deleted models"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Basic Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Basic Operations should save and retrieve audit logs","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056257,"status":"passed","title":"should save and retrieve audit logs"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Basic Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Basic Operations should check audit log existence","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056258,"status":"passed","title":"should check audit log existence"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Query Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Query Operations should find logs by record ID","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056259,"status":"passed","title":"should find logs by record ID"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Query Operations"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Query Operations should find logs by operation type","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056260,"status":"passed","title":"should find logs by operation type"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Query Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Query Operations should find logs by user","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056265,"status":"passed","title":"should find logs by user"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Query Operations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Query Operations should count logs by operation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056266,"status":"passed","title":"should count logs by operation"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Query Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Query Operations should find recent logs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056266,"status":"passed","title":"should find recent logs"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Date Range Operations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Date Range Operations should find logs by date range","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056267,"status":"passed","title":"should find logs by date range"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Date Range Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Date Range Operations should count logs by date range","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056267,"status":"passed","title":"should count logs by date range"},{"ancestorTitles":["Repository Contract Tests","AuditLogRepository Contract","Maintenance Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AuditLogRepository Contract Maintenance Operations should delete old entries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056268,"status":"passed","title":"should delete old entries"},{"ancestorTitles":["Repository Contract Tests","NodeRepository Contract"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests NodeRepository Contract should follow basic CRUD contract","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056269,"status":"passed","title":"should follow basic CRUD contract"},{"ancestorTitles":["Repository Contract Tests","NodeRepository Contract"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests NodeRepository Contract should follow Result pattern consistently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056270,"status":"passed","title":"should follow Result pattern consistently"},{"ancestorTitles":["Repository Contract Tests","NodeLinkRepository Contract"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests NodeLinkRepository Contract should follow basic CRUD contract","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056271,"status":"passed","title":"should follow basic CRUD contract"},{"ancestorTitles":["Repository Contract Tests","AIAgentRepository Contract"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests AIAgentRepository Contract should follow basic CRUD contract","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056271,"status":"passed","title":"should follow basic CRUD contract"},{"ancestorTitles":["Repository Contract Tests","Cross-Repository Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests Cross-Repository Contract Compliance should all repositories use Result pattern consistently","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"startAt":1756394056272,"status":"passed","title":"should all repositories use Result pattern consistently"},{"ancestorTitles":["Repository Contract Tests","Cross-Repository Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests Cross-Repository Contract Compliance should all repositories handle save operations consistently","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056274,"status":"passed","title":"should all repositories handle save operations consistently"},{"ancestorTitles":["Repository Contract Tests","Cross-Repository Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests Cross-Repository Contract Compliance should all repositories handle exists check consistently","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056275,"status":"passed","title":"should all repositories handle exists check consistently"},{"ancestorTitles":["Repository Contract Tests","Repository Error Handling Contracts"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests Repository Error Handling Contracts should handle validation errors in function model repository","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056276,"status":"passed","title":"should handle validation errors in function model repository"},{"ancestorTitles":["Repository Contract Tests","Repository Error Handling Contracts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests Repository Error Handling Contracts should maintain data integrity across operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056276,"status":"passed","title":"should maintain data integrity across operations"},{"ancestorTitles":["Repository Contract Tests","Repository Error Handling Contracts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Contract Tests Repository Error Handling Contracts should handle concurrent operations gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056277,"status":"passed","title":"should handle concurrent operations gracefully"}],"endTime":1756394056279,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\repositories\\repository-contracts.test.ts","startTime":1756394056030,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModelVersion","Factory Pattern - Creation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Factory Pattern - Creation should create version with valid properties","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056295,"status":"passed","title":"should create version with valid properties"},{"ancestorTitles":["FunctionModelVersion","Factory Pattern - Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Factory Pattern - Creation should automatically set createdAt timestamp","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056298,"status":"passed","title":"should automatically set createdAt timestamp"},{"ancestorTitles":["FunctionModelVersion","Factory Pattern - Creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Factory Pattern - Creation should create version with published state","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056299,"status":"passed","title":"should create version with published state"},{"ancestorTitles":["FunctionModelVersion","Factory Pattern - Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Factory Pattern - Creation should create version with complex version data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056299,"status":"passed","title":"should create version with complex version data"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Version ID validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Version ID validation should reject empty version ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056300,"status":"passed","title":"should reject empty version ID"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Version ID validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Version ID validation should reject whitespace-only version ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056300,"status":"passed","title":"should reject whitespace-only version ID"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Model ID validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Model ID validation should reject empty model ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056304,"status":"passed","title":"should reject empty model ID"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Model ID validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Model ID validation should reject whitespace-only model ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056305,"status":"passed","title":"should reject whitespace-only model ID"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Semantic versioning validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Semantic versioning validation should accept valid semantic versions","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056305,"status":"passed","title":"should accept valid semantic versions"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Semantic versioning validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Semantic versioning validation should reject non-semantic version formats","invocations":1,"location":null,"numPassingAsserts":22,"retryReasons":[],"startAt":1756394056307,"status":"passed","title":"should reject non-semantic version formats"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Semantic versioning validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Semantic versioning validation should reject empty and whitespace version numbers","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056309,"status":"passed","title":"should reject empty and whitespace version numbers"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Author ID validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Author ID validation should reject empty author ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056309,"status":"passed","title":"should reject empty author ID"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Author ID validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Author ID validation should reject whitespace-only author ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056310,"status":"passed","title":"should reject whitespace-only author ID"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Version data validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Version data validation should reject null version data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056310,"status":"passed","title":"should reject null version data"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Version data validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Version data validation should reject undefined version data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056311,"status":"passed","title":"should reject undefined version data"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Version data validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Version data validation should accept empty object as version data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056311,"status":"passed","title":"should accept empty object as version data"},{"ancestorTitles":["FunctionModelVersion","Validation Rules","Version data validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Validation Rules Version data validation should accept array as version data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056312,"status":"passed","title":"should accept array as version data"},{"ancestorTitles":["FunctionModelVersion","State Transitions - Publication","Publishing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion State Transitions - Publication Publishing should publish unpublished version","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056312,"status":"passed","title":"should publish unpublished version"},{"ancestorTitles":["FunctionModelVersion","State Transitions - Publication","Publishing"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion State Transitions - Publication Publishing should reject publishing already published version","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056313,"status":"passed","title":"should reject publishing already published version"},{"ancestorTitles":["FunctionModelVersion","State Transitions - Publication","Publishing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion State Transitions - Publication Publishing should maintain immutability of other properties when publishing","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056313,"status":"passed","title":"should maintain immutability of other properties when publishing"},{"ancestorTitles":["FunctionModelVersion","State Transitions - Publication","Unpublishing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion State Transitions - Publication Unpublishing should unpublish published version","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056314,"status":"passed","title":"should unpublish published version"},{"ancestorTitles":["FunctionModelVersion","State Transitions - Publication","Unpublishing"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion State Transitions - Publication Unpublishing should reject unpublishing unpublished version","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056315,"status":"passed","title":"should reject unpublishing unpublished version"},{"ancestorTitles":["FunctionModelVersion","State Transitions - Publication","Unpublishing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion State Transitions - Publication Unpublishing should maintain immutability of other properties when unpublishing","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056315,"status":"passed","title":"should maintain immutability of other properties when unpublishing"},{"ancestorTitles":["FunctionModelVersion","State Transitions - Publication","State transition workflows"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion State Transitions - Publication State transition workflows should allow publish-unpublish-publish cycle","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056316,"status":"passed","title":"should allow publish-unpublish-publish cycle"},{"ancestorTitles":["FunctionModelVersion","State Transitions - Publication","State transition workflows"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion State Transitions - Publication State transition workflows should handle multiple failed state transitions gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056317,"status":"passed","title":"should handle multiple failed state transitions gracefully"},{"ancestorTitles":["FunctionModelVersion","Business Logic - Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Business Logic - Equality and Comparison should be equal when version IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056318,"status":"passed","title":"should be equal when version IDs match"},{"ancestorTitles":["FunctionModelVersion","Business Logic - Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Business Logic - Equality and Comparison should not be equal when version IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056318,"status":"passed","title":"should not be equal when version IDs differ"},{"ancestorTitles":["FunctionModelVersion","Business Logic - Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Business Logic - Equality and Comparison should maintain equality contract (reflexive, symmetric, transitive)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056319,"status":"passed","title":"should maintain equality contract (reflexive, symmetric, transitive)"},{"ancestorTitles":["FunctionModelVersion","Property Access and Immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Property Access and Immutability should provide read-only access to all properties","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056319,"status":"passed","title":"should provide read-only access to all properties"},{"ancestorTitles":["FunctionModelVersion","Property Access and Immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Property Access and Immutability should prevent modification of version data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056320,"status":"passed","title":"should prevent modification of version data"},{"ancestorTitles":["FunctionModelVersion","Property Access and Immutability"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Property Access and Immutability should return consistent values on multiple property accesses","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056321,"status":"passed","title":"should return consistent values on multiple property accesses"},{"ancestorTitles":["FunctionModelVersion","Edge Cases and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Edge Cases and Error Handling should handle UUID-like version IDs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056321,"status":"passed","title":"should handle UUID-like version IDs"},{"ancestorTitles":["FunctionModelVersion","Edge Cases and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Edge Cases and Error Handling should handle very long version IDs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056322,"status":"passed","title":"should handle very long version IDs"},{"ancestorTitles":["FunctionModelVersion","Edge Cases and Error Handling"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Edge Cases and Error Handling should handle special characters in version ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056323,"status":"passed","title":"should handle special characters in version ID"},{"ancestorTitles":["FunctionModelVersion","Edge Cases and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Edge Cases and Error Handling should handle large numeric version components","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056326,"status":"passed","title":"should handle large numeric version components"},{"ancestorTitles":["FunctionModelVersion","Edge Cases and Error Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Edge Cases and Error Handling should handle complex nested version data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056327,"status":"passed","title":"should handle complex nested version data"},{"ancestorTitles":["FunctionModelVersion","Version Snapshot Capture","Complete Model State Capture"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Snapshot Capture Complete Model State Capture createFromModel_ComplexModel_CapturesAllState","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056327,"status":"passed","title":"createFromModel_ComplexModel_CapturesAllState"},{"ancestorTitles":["FunctionModelVersion","Version Snapshot Capture","Complete Model State Capture"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Snapshot Capture Complete Model State Capture createFromModel_WithActionNodes_CapturesActionConfiguration","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056328,"status":"passed","title":"createFromModel_WithActionNodes_CapturesActionConfiguration"},{"ancestorTitles":["FunctionModelVersion","Version Snapshot Capture","Complete Model State Capture"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Snapshot Capture Complete Model State Capture createFromModel_WithNestedMetadata_CapturesDeepStructure","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056329,"status":"passed","title":"createFromModel_WithNestedMetadata_CapturesDeepStructure"},{"ancestorTitles":["FunctionModelVersion","Version Snapshot Capture","Complete Model State Capture"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Snapshot Capture Complete Model State Capture createFromModel_WithCircularReferences_HandlesGracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056329,"status":"passed","title":"createFromModel_WithCircularReferences_HandlesGracefully"},{"ancestorTitles":["FunctionModelVersion","Version Snapshot Capture","Version Integrity Guarantees"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Snapshot Capture Version Integrity Guarantees versionData_AfterCreation_MaintainsIntegrity","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056330,"status":"passed","title":"versionData_AfterCreation_MaintainsIntegrity"},{"ancestorTitles":["FunctionModelVersion","Version Snapshot Capture","Version Integrity Guarantees"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Snapshot Capture Version Integrity Guarantees versionData_ConsistentAccess_ReturnsSameData","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056330,"status":"passed","title":"versionData_ConsistentAccess_ReturnsSameData"},{"ancestorTitles":["FunctionModelVersion","Version Snapshot Capture","Version Integrity Guarantees"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Snapshot Capture Version Integrity Guarantees versionData_EntityBoundaryProtection_PreservesState","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056331,"status":"passed","title":"versionData_EntityBoundaryProtection_PreservesState"},{"ancestorTitles":["FunctionModelVersion","Version Metadata Management","Author and Tracking"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Metadata Management Author and Tracking create_WithValidAuthor_SetsAuthorMetadata","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056332,"status":"passed","title":"create_WithValidAuthor_SetsAuthorMetadata"},{"ancestorTitles":["FunctionModelVersion","Version Metadata Management","Author and Tracking"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Metadata Management Author and Tracking create_WithInvalidAuthor_FailsValidation","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056333,"status":"passed","title":"create_WithInvalidAuthor_FailsValidation"},{"ancestorTitles":["FunctionModelVersion","Version Metadata Management","Author and Tracking"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Metadata Management Author and Tracking getVersionInfo_IncludesCreationTimestamp","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056333,"status":"passed","title":"getVersionInfo_IncludesCreationTimestamp"},{"ancestorTitles":["FunctionModelVersion","Version Metadata Management","Change Descriptions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Metadata Management Change Descriptions create_WithChangeDescription_StoresDescription","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056334,"status":"passed","title":"create_WithChangeDescription_StoresDescription"},{"ancestorTitles":["FunctionModelVersion","Version Metadata Management","Change Descriptions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Metadata Management Change Descriptions create_WithEmptyDescription_AllowsEmptyDescription","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056334,"status":"passed","title":"create_WithEmptyDescription_AllowsEmptyDescription"},{"ancestorTitles":["FunctionModelVersion","Version Metadata Management","Change Descriptions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Version Metadata Management Change Descriptions getChangeSummary_ReturnsStructuredChangeInfo","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056334,"status":"passed","title":"getChangeSummary_ReturnsStructuredChangeInfo"},{"ancestorTitles":["FunctionModelVersion","Result Pattern Integration"],"duration":22,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Result Pattern Integration should follow Result pattern consistently","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056335,"status":"passed","title":"should follow Result pattern consistently"},{"ancestorTitles":["FunctionModelVersion","Result Pattern Integration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Result Pattern Integration should provide meaningful error messages","invocations":1,"location":null,"numPassingAsserts":25,"retryReasons":[],"startAt":1756394056357,"status":"passed","title":"should provide meaningful error messages"},{"ancestorTitles":["FunctionModelVersion","Result Pattern Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersion Result Pattern Integration should handle publish/unpublish results correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056360,"status":"passed","title":"should handle publish/unpublish results correctly"}],"endTime":1756394056363,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\function-model-version.test.ts","startTime":1756394056031,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Domain Enumerations","FeatureType"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations FeatureType should contain all required feature types","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056392,"status":"passed","title":"should contain all required feature types"},{"ancestorTitles":["Domain Enumerations","FeatureType"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations FeatureType should have exactly 4 feature types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056393,"status":"passed","title":"should have exactly 4 feature types"},{"ancestorTitles":["Domain Enumerations","FeatureType"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations FeatureType should be consistent with domain model specification","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056394,"status":"passed","title":"should be consistent with domain model specification"},{"ancestorTitles":["Domain Enumerations","ContainerNodeType"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ContainerNodeType should contain all required container node types","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056394,"status":"passed","title":"should contain all required container node types"},{"ancestorTitles":["Domain Enumerations","ContainerNodeType"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ContainerNodeType should have exactly 2 container node types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056395,"status":"passed","title":"should have exactly 2 container node types"},{"ancestorTitles":["Domain Enumerations","ContainerNodeType"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ContainerNodeType should be consistent with domain model specification","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056395,"status":"passed","title":"should be consistent with domain model specification"},{"ancestorTitles":["Domain Enumerations","ActionNodeType"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ActionNodeType should contain all required action node types","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056396,"status":"passed","title":"should contain all required action node types"},{"ancestorTitles":["Domain Enumerations","ActionNodeType"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ActionNodeType should have exactly 3 action node types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056396,"status":"passed","title":"should have exactly 3 action node types"},{"ancestorTitles":["Domain Enumerations","ActionNodeType"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ActionNodeType should be consistent with domain model specification","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056397,"status":"passed","title":"should be consistent with domain model specification"},{"ancestorTitles":["Domain Enumerations","ExecutionMode"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ExecutionMode should contain all required execution modes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056397,"status":"passed","title":"should contain all required execution modes"},{"ancestorTitles":["Domain Enumerations","ExecutionMode"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ExecutionMode should have exactly 3 execution modes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056398,"status":"passed","title":"should have exactly 3 execution modes"},{"ancestorTitles":["Domain Enumerations","ExecutionMode"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ExecutionMode should be consistent with domain model specification","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056398,"status":"passed","title":"should be consistent with domain model specification"},{"ancestorTitles":["Domain Enumerations","ActionStatus"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ActionStatus should contain all required action statuses","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056398,"status":"passed","title":"should contain all required action statuses"},{"ancestorTitles":["Domain Enumerations","ActionStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ActionStatus should have exactly 10 action statuses","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056403,"status":"passed","title":"should have exactly 10 action statuses"},{"ancestorTitles":["Domain Enumerations","ActionStatus"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ActionStatus should be consistent with domain model specification","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056404,"status":"passed","title":"should be consistent with domain model specification"},{"ancestorTitles":["Domain Enumerations","ActionStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ActionStatus should support valid status transitions","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056404,"status":"passed","title":"should support valid status transitions"},{"ancestorTitles":["Domain Enumerations","NodeStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations NodeStatus should contain all required node statuses","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056405,"status":"passed","title":"should contain all required node statuses"},{"ancestorTitles":["Domain Enumerations","NodeStatus"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations NodeStatus should have exactly 5 node statuses","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056406,"status":"passed","title":"should have exactly 5 node statuses"},{"ancestorTitles":["Domain Enumerations","NodeStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations NodeStatus should be consistent with domain model specification","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056406,"status":"passed","title":"should be consistent with domain model specification"},{"ancestorTitles":["Domain Enumerations","ModelStatus"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ModelStatus should contain all required model statuses","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056407,"status":"passed","title":"should contain all required model statuses"},{"ancestorTitles":["Domain Enumerations","ModelStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ModelStatus should have exactly 3 model statuses","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056407,"status":"passed","title":"should have exactly 3 model statuses"},{"ancestorTitles":["Domain Enumerations","ModelStatus"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ModelStatus should be consistent with domain model specification","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056408,"status":"passed","title":"should be consistent with domain model specification"},{"ancestorTitles":["Domain Enumerations","ModelStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations ModelStatus should support valid status transitions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056408,"status":"passed","title":"should support valid status transitions"},{"ancestorTitles":["Domain Enumerations","LinkType"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations LinkType should contain all required link types","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056409,"status":"passed","title":"should contain all required link types"},{"ancestorTitles":["Domain Enumerations","LinkType"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations LinkType should have exactly 8 link types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056410,"status":"passed","title":"should have exactly 8 link types"},{"ancestorTitles":["Domain Enumerations","LinkType"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations LinkType should be consistent with domain model specification","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056410,"status":"passed","title":"should be consistent with domain model specification"},{"ancestorTitles":["Domain Enumerations","LinkType"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations LinkType should have semantic meaning for each link type","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056410,"status":"passed","title":"should have semantic meaning for each link type"},{"ancestorTitles":["Domain Enumerations","RACIRole"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations RACIRole should contain all required RACI roles","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056412,"status":"passed","title":"should contain all required RACI roles"},{"ancestorTitles":["Domain Enumerations","RACIRole"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations RACIRole should have exactly 4 RACI roles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056412,"status":"passed","title":"should have exactly 4 RACI roles"},{"ancestorTitles":["Domain Enumerations","RACIRole"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations RACIRole should be consistent with domain model specification","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056413,"status":"passed","title":"should be consistent with domain model specification"},{"ancestorTitles":["Domain Enumerations","RACIRole"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations RACIRole should follow RACI matrix principles","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056413,"status":"passed","title":"should follow RACI matrix principles"},{"ancestorTitles":["Domain Enumerations","Enumeration Completeness"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations Enumeration Completeness should cover all enumeration types mentioned in domain model","invocations":1,"location":null,"numPassingAsserts":19,"retryReasons":[],"startAt":1756394056414,"status":"passed","title":"should cover all enumeration types mentioned in domain model"},{"ancestorTitles":["Domain Enumerations","Cross-Enumeration Relationships"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations Cross-Enumeration Relationships should maintain consistency between related enumerations","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056417,"status":"passed","title":"should maintain consistency between related enumerations"},{"ancestorTitles":["Domain Enumerations","Cross-Enumeration Relationships"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Enumerations Cross-Enumeration Relationships should support hierarchical relationships","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056419,"status":"passed","title":"should support hierarchical relationships"}],"endTime":1756394056421,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\enums\\domain-enums.test.ts","startTime":1756394056192,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should create container node with valid properties","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056373,"status":"passed","title":"should create container node with valid properties"},{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should reject creation with missing nested model ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056375,"status":"passed","title":"should reject creation with missing nested model ID"},{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should reject creation with invalid execution trigger","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056376,"status":"passed","title":"should reject creation with invalid execution trigger"},{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should reject creation with conditional trigger without conditions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056377,"status":"passed","title":"should reject creation with conditional trigger without conditions"},{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should reject creation with invalid timeout","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056377,"status":"passed","title":"should reject creation with invalid timeout"},{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should reject creation with invalid orchestration mode","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056378,"status":"passed","title":"should reject creation with invalid orchestration mode"},{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should reject creation with no extracted outputs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056378,"status":"passed","title":"should reject creation with no extracted outputs"},{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should reject creation with duplicate extracted outputs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056379,"status":"passed","title":"should reject creation with duplicate extracted outputs"},{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should reject creation with duplicate inherited contexts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056380,"status":"passed","title":"should reject creation with duplicate inherited contexts"},{"ancestorTitles":["FunctionModelContainerNode","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode creation and initialization should create with conditional trigger and conditions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056381,"status":"passed","title":"should create with conditional trigger and conditions"},{"ancestorTitles":["FunctionModelContainerNode","nested model management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode nested model management should update nested model ID successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056382,"status":"passed","title":"should update nested model ID successfully"},{"ancestorTitles":["FunctionModelContainerNode","nested model management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode nested model management should trim whitespace from nested model ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056383,"status":"passed","title":"should trim whitespace from nested model ID"},{"ancestorTitles":["FunctionModelContainerNode","nested model management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode nested model management should reject empty nested model ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056383,"status":"passed","title":"should reject empty nested model ID"},{"ancestorTitles":["FunctionModelContainerNode","nested model management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode nested model management should reject whitespace-only nested model ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056384,"status":"passed","title":"should reject whitespace-only nested model ID"},{"ancestorTitles":["FunctionModelContainerNode","nested model management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode nested model management should reject self-referencing nested model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056384,"status":"passed","title":"should reject self-referencing nested model"},{"ancestorTitles":["FunctionModelContainerNode","nested model management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode nested model management should update timestamp when nested model ID changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056385,"status":"passed","title":"should update timestamp when nested model ID changes"},{"ancestorTitles":["FunctionModelContainerNode","context mapping management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context mapping management should update context mapping successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056385,"status":"passed","title":"should update context mapping successfully"},{"ancestorTitles":["FunctionModelContainerNode","context mapping management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context mapping management should replace all context mappings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056386,"status":"passed","title":"should replace all context mappings"},{"ancestorTitles":["FunctionModelContainerNode","context mapping management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context mapping management should handle empty mapping object","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056387,"status":"passed","title":"should handle empty mapping object"},{"ancestorTitles":["FunctionModelContainerNode","context mapping management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context mapping management should create defensive copy of mapping","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056388,"status":"passed","title":"should create defensive copy of mapping"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should update output extraction successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056389,"status":"passed","title":"should update output extraction successfully"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should reject extraction with no outputs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056390,"status":"passed","title":"should reject extraction with no outputs"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should reject extraction with duplicate outputs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056390,"status":"passed","title":"should reject extraction with duplicate outputs"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should handle extraction without transformations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056391,"status":"passed","title":"should handle extraction without transformations"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should create defensive copies of extraction data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056392,"status":"passed","title":"should create defensive copies of extraction data"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should add extracted output successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056392,"status":"passed","title":"should add extracted output successfully"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should trim whitespace when adding output","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056393,"status":"passed","title":"should trim whitespace when adding output"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should reject adding empty output","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056393,"status":"passed","title":"should reject adding empty output"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should reject adding duplicate output","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056394,"status":"passed","title":"should reject adding duplicate output"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should remove extracted output successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056394,"status":"passed","title":"should remove extracted output successfully"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should reject removing non-existent output","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056395,"status":"passed","title":"should reject removing non-existent output"},{"ancestorTitles":["FunctionModelContainerNode","output extraction management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode output extraction management should reject removing last output","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056396,"status":"passed","title":"should reject removing last output"},{"ancestorTitles":["FunctionModelContainerNode","execution policy management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode execution policy management should update execution policy successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056397,"status":"passed","title":"should update execution policy successfully"},{"ancestorTitles":["FunctionModelContainerNode","execution policy management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode execution policy management should update conditional execution policy with conditions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056398,"status":"passed","title":"should update conditional execution policy with conditions"},{"ancestorTitles":["FunctionModelContainerNode","execution policy management"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode execution policy management should reject invalid execution trigger","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056399,"status":"passed","title":"should reject invalid execution trigger"},{"ancestorTitles":["FunctionModelContainerNode","execution policy management"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode execution policy management should reject conditional trigger without conditions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056402,"status":"passed","title":"should reject conditional trigger without conditions"},{"ancestorTitles":["FunctionModelContainerNode","execution policy management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode execution policy management should reject invalid timeout values","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056408,"status":"passed","title":"should reject invalid timeout values"},{"ancestorTitles":["FunctionModelContainerNode","execution policy management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode execution policy management should allow maximum timeout value","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056409,"status":"passed","title":"should allow maximum timeout value"},{"ancestorTitles":["FunctionModelContainerNode","execution policy management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode execution policy management should create defensive copy of conditions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056410,"status":"passed","title":"should create defensive copy of conditions"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should update context inheritance successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056411,"status":"passed","title":"should update context inheritance successfully"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should reject inheritance with duplicate contexts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056412,"status":"passed","title":"should reject inheritance with duplicate contexts"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should handle inheritance without transformations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056413,"status":"passed","title":"should handle inheritance without transformations"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should create defensive copies of inheritance data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056413,"status":"passed","title":"should create defensive copies of inheritance data"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should add inherited context successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056414,"status":"passed","title":"should add inherited context successfully"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should trim whitespace when adding context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056417,"status":"passed","title":"should trim whitespace when adding context"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should reject adding empty context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056417,"status":"passed","title":"should reject adding empty context"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should reject adding duplicate context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056418,"status":"passed","title":"should reject adding duplicate context"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should remove inherited context successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056419,"status":"passed","title":"should remove inherited context successfully"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should reject removing non-inherited context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056420,"status":"passed","title":"should reject removing non-inherited context"},{"ancestorTitles":["FunctionModelContainerNode","context inheritance management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode context inheritance management should handle context removal with whitespace","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056420,"status":"passed","title":"should handle context removal with whitespace"},{"ancestorTitles":["FunctionModelContainerNode","orchestration mode management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode orchestration mode management should update orchestration mode successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056421,"status":"passed","title":"should update orchestration mode successfully"},{"ancestorTitles":["FunctionModelContainerNode","orchestration mode management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode orchestration mode management should accept all valid orchestration modes","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056421,"status":"passed","title":"should accept all valid orchestration modes"},{"ancestorTitles":["FunctionModelContainerNode","orchestration mode management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode orchestration mode management should reject invalid orchestration mode","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056422,"status":"passed","title":"should reject invalid orchestration mode"},{"ancestorTitles":["FunctionModelContainerNode","data access and immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode data access and immutability should return readonly container data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056422,"status":"passed","title":"should return readonly container data"},{"ancestorTitles":["FunctionModelContainerNode","data access and immutability"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode data access and immutability should return correct action type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056423,"status":"passed","title":"should return correct action type"},{"ancestorTitles":["FunctionModelContainerNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode timestamps and audit trail should update timestamp when nested model changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056424,"status":"passed","title":"should update timestamp when nested model changes"},{"ancestorTitles":["FunctionModelContainerNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode timestamps and audit trail should update timestamp when context mapping changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056424,"status":"passed","title":"should update timestamp when context mapping changes"},{"ancestorTitles":["FunctionModelContainerNode","timestamps and audit trail"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode timestamps and audit trail should update timestamp when output extraction changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056424,"status":"passed","title":"should update timestamp when output extraction changes"},{"ancestorTitles":["FunctionModelContainerNode","timestamps and audit trail"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode timestamps and audit trail should update timestamp when execution policy changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056425,"status":"passed","title":"should update timestamp when execution policy changes"},{"ancestorTitles":["FunctionModelContainerNode","timestamps and audit trail"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode timestamps and audit trail should update timestamp when context inheritance changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056426,"status":"passed","title":"should update timestamp when context inheritance changes"},{"ancestorTitles":["FunctionModelContainerNode","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelContainerNode timestamps and audit trail should update timestamp when orchestration mode changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056427,"status":"passed","title":"should update timestamp when orchestration mode changes"}],"endTime":1756394056430,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\nodes\\function-model-container-node.test.ts","startTime":1756394056176,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ExecutionRules","model validation"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules model validation should validate executable published model","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056391,"status":"passed","title":"should validate executable published model"},{"ancestorTitles":["ExecutionRules","model validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules model validation should reject draft models for execution","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056398,"status":"passed","title":"should reject draft models for execution"},{"ancestorTitles":["ExecutionRules","model validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules model validation should reject archived models for execution","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056400,"status":"passed","title":"should reject archived models for execution"},{"ancestorTitles":["ExecutionRules","model validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules model validation should reject deleted models for execution","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056403,"status":"passed","title":"should reject deleted models for execution"},{"ancestorTitles":["ExecutionRules","model validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules model validation should detect models with no input nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056404,"status":"passed","title":"should detect models with no input nodes"},{"ancestorTitles":["ExecutionRules","model validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules model validation should detect models with no output nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056406,"status":"passed","title":"should detect models with no output nodes"},{"ancestorTitles":["ExecutionRules","model validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules model validation should warn about nodes without actions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056408,"status":"passed","title":"should warn about nodes without actions"},{"ancestorTitles":["ExecutionRules","model validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules model validation should detect nodes with validation errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056409,"status":"passed","title":"should detect nodes with validation errors"},{"ancestorTitles":["ExecutionRules","precondition validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules precondition validation should validate all preconditions successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056412,"status":"passed","title":"should validate all preconditions successfully"},{"ancestorTitles":["ExecutionRules","precondition validation"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules precondition validation should detect failed preconditions","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056413,"status":"passed","title":"should detect failed preconditions"},{"ancestorTitles":["ExecutionRules","precondition validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules precondition validation should handle precondition validator exceptions","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056418,"status":"passed","title":"should handle precondition validator exceptions"},{"ancestorTitles":["ExecutionRules","precondition validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules precondition validation should handle empty preconditions list","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056419,"status":"passed","title":"should handle empty preconditions list"},{"ancestorTitles":["ExecutionRules","node execution order validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules node execution order validation should validate correct execution order","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056420,"status":"passed","title":"should validate correct execution order"},{"ancestorTitles":["ExecutionRules","node execution order validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules node execution order validation should detect duplicate execution orders","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056421,"status":"passed","title":"should detect duplicate execution orders"},{"ancestorTitles":["ExecutionRules","node execution order validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules node execution order validation should detect gaps in execution order","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056422,"status":"passed","title":"should detect gaps in execution order"},{"ancestorTitles":["ExecutionRules","node execution order validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules node execution order validation should validate execution order starting from 1","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056423,"status":"passed","title":"should validate execution order starting from 1"},{"ancestorTitles":["ExecutionRules","resource requirements validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules resource requirements validation should validate sufficient resources","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056423,"status":"passed","title":"should validate sufficient resources"},{"ancestorTitles":["ExecutionRules","resource requirements validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules resource requirements validation should detect CPU requirement exceeding limits","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056424,"status":"passed","title":"should detect CPU requirement exceeding limits"},{"ancestorTitles":["ExecutionRules","resource requirements validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules resource requirements validation should detect memory requirement exceeding limits","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056425,"status":"passed","title":"should detect memory requirement exceeding limits"},{"ancestorTitles":["ExecutionRules","resource requirements validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules resource requirements validation should calculate total resource requirements","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056426,"status":"passed","title":"should calculate total resource requirements"},{"ancestorTitles":["ExecutionRules","execution error handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules execution error handling should create execution error with context","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056427,"status":"passed","title":"should create execution error with context"},{"ancestorTitles":["ExecutionRules","execution error handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules execution error handling should create execution error without context","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056428,"status":"passed","title":"should create execution error without context"},{"ancestorTitles":["ExecutionRules","execution error handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules execution error handling should format execution errors consistently","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056429,"status":"passed","title":"should format execution errors consistently"},{"ancestorTitles":["ExecutionRules","comprehensive execution validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules comprehensive execution validation should perform complete execution validation successfully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056430,"status":"passed","title":"should perform complete execution validation successfully"},{"ancestorTitles":["ExecutionRules","comprehensive execution validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules comprehensive execution validation should fail complete validation when any check fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056432,"status":"passed","title":"should fail complete validation when any check fails"},{"ancestorTitles":["ExecutionRules","comprehensive execution validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionRules comprehensive execution validation should collect all validation errors in summary","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056433,"status":"passed","title":"should collect all validation errors in summary"}],"endTime":1756394056435,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\rules\\execution-rules.test.ts","startTime":1756394056164,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Service Interface Architecture Compliance","Domain Service Contract Validation","NodeContextAccessService Interface Compliance"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Domain Service Contract Validation NodeContextAccessService Interface Compliance should have registerNode method with correct Clean Architecture signature","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054289,"status":"passed","title":"should have registerNode method with correct Clean Architecture signature"},{"ancestorTitles":["Service Interface Architecture Compliance","Domain Service Contract Validation","NodeContextAccessService Interface Compliance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Domain Service Contract Validation NodeContextAccessService Interface Compliance should have getAccessibleContexts method returning Result<ContextAccessResult[]>","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054292,"status":"passed","title":"should have getAccessibleContexts method returning Result<ContextAccessResult[]>"},{"ancestorTitles":["Service Interface Architecture Compliance","Domain Service Contract Validation","NodeContextAccessService Interface Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Domain Service Contract Validation NodeContextAccessService Interface Compliance should have getNodeContext method with proper parameter validation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054294,"status":"passed","title":"should have getNodeContext method with proper parameter validation"},{"ancestorTitles":["Service Interface Architecture Compliance","Domain Service Contract Validation","NodeContextAccessService Interface Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Domain Service Contract Validation NodeContextAccessService Interface Compliance should HAVE extended methods that are now implemented","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054295,"status":"passed","title":"should HAVE extended methods that are now implemented"},{"ancestorTitles":["Service Interface Architecture Compliance","Domain Service Contract Validation","ActionNodeExecutionService Interface Compliance"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Domain Service Contract Validation ActionNodeExecutionService Interface Compliance should validate expected method signatures exist","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394054296,"status":"passed","title":"should validate expected method signatures exist"},{"ancestorTitles":["Service Interface Architecture Compliance","Domain Service Contract Validation","ActionNodeExecutionService Interface Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Domain Service Contract Validation ActionNodeExecutionService Interface Compliance should enforce async method return type pattern","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394054299,"status":"passed","title":"should enforce async method return type pattern"},{"ancestorTitles":["Service Interface Architecture Compliance","Domain Service Contract Validation","AIAgentOrchestrationService Interface Compliance"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Domain Service Contract Validation AIAgentOrchestrationService Interface Compliance should validate orchestration service interface","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394054300,"status":"passed","title":"should validate orchestration service interface"},{"ancestorTitles":["Service Interface Architecture Compliance","Domain Service Contract Validation","BusinessRuleValidationService Interface Compliance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Domain Service Contract Validation BusinessRuleValidationService Interface Compliance should validate business rule service interface","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394054304,"status":"passed","title":"should validate business rule service interface"},{"ancestorTitles":["Service Interface Architecture Compliance","Use Case Interface Compliance","ManageErrorHandlingAndRecoveryUseCase Architecture Validation"],"duration":1076,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Use Case Interface Compliance ManageErrorHandlingAndRecoveryUseCase Architecture Validation should have handleActionNodeFailure method with correct async signature","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054306,"status":"passed","title":"should have handleActionNodeFailure method with correct async signature"},{"ancestorTitles":["Service Interface Architecture Compliance","Use Case Interface Compliance","ManageErrorHandlingAndRecoveryUseCase Architecture Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Use Case Interface Compliance ManageErrorHandlingAndRecoveryUseCase Architecture Validation should have handleAgentExecutionFailure method with correct signature","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055382,"status":"passed","title":"should have handleAgentExecutionFailure method with correct signature"},{"ancestorTitles":["Service Interface Architecture Compliance","Use Case Interface Compliance","ManageErrorHandlingAndRecoveryUseCase Architecture Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Use Case Interface Compliance ManageErrorHandlingAndRecoveryUseCase Architecture Validation should have validateBusinessRules method with correct signature","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055383,"status":"passed","title":"should have validateBusinessRules method with correct signature"},{"ancestorTitles":["Service Interface Architecture Compliance","Use Case Interface Compliance","ManageErrorHandlingAndRecoveryUseCase Architecture Validation"],"duration":1102,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Use Case Interface Compliance ManageErrorHandlingAndRecoveryUseCase Architecture Validation should have executeErrorHandlingAndRecovery as primary orchestration method","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394055384,"status":"passed","title":"should have executeErrorHandlingAndRecovery as primary orchestration method"},{"ancestorTitles":["Service Interface Architecture Compliance","Use Case Interface Compliance","ManageErrorHandlingAndRecoveryUseCase Architecture Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Use Case Interface Compliance ManageErrorHandlingAndRecoveryUseCase Architecture Validation should NOT have generic execute method (common mistake)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056486,"status":"passed","title":"should NOT have generic execute method (common mistake)"},{"ancestorTitles":["Service Interface Architecture Compliance","Use Case Interface Compliance","ManageErrorHandlingAndRecoveryUseCase Architecture Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Use Case Interface Compliance ManageErrorHandlingAndRecoveryUseCase Architecture Validation should follow dependency inversion principle","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056487,"status":"passed","title":"should follow dependency inversion principle"},{"ancestorTitles":["Service Interface Architecture Compliance","Result Pattern Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Result Pattern Compliance should validate Result<T> pattern usage across all services","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056488,"status":"passed","title":"should validate Result<T> pattern usage across all services"},{"ancestorTitles":["Service Interface Architecture Compliance","Result Pattern Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Result Pattern Compliance should validate async Result pattern for use cases","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056489,"status":"passed","title":"should validate async Result pattern for use cases"},{"ancestorTitles":["Service Interface Architecture Compliance","Interface Contract Documentation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Interface Contract Documentation should document correct method call patterns","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056490,"status":"passed","title":"should document correct method call patterns"},{"ancestorTitles":["Service Interface Architecture Compliance","Interface Contract Documentation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Interface Contract Documentation should document incorrect patterns to avoid","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056491,"status":"passed","title":"should document incorrect patterns to avoid"},{"ancestorTitles":["Service Interface Architecture Compliance","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Clean Architecture Compliance should validate layer dependency rules","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056491,"status":"passed","title":"should validate layer dependency rules"},{"ancestorTitles":["Service Interface Architecture Compliance","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Interface Architecture Compliance Clean Architecture Compliance should validate interface segregation principle","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056492,"status":"passed","title":"should validate interface segregation principle"}],"endTime":1756394056494,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\architecture\\service-interface-architecture-compliance.test.ts","startTime":1756394054059,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","startExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management startExecution should start execution successfully for new action","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056489,"status":"passed","title":"should start execution successfully for new action"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","startExecution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management startExecution should create proper execution context when starting","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056491,"status":"passed","title":"should create proper execution context when starting"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","startExecution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management startExecution should initialize execution metrics when starting","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056492,"status":"passed","title":"should initialize execution metrics when starting"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","startExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management startExecution should reject starting execution for already executing action","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056492,"status":"passed","title":"should reject starting execution for already executing action"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","completeExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management completeExecution should complete execution successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056493,"status":"passed","title":"should complete execution successfully"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","completeExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management completeExecution should update execution metrics on completion","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056494,"status":"passed","title":"should update execution metrics on completion"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","completeExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management completeExecution should update execution snapshot on completion","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056495,"status":"passed","title":"should update execution snapshot on completion"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","completeExecution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management completeExecution should reject completion for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056496,"status":"passed","title":"should reject completion for non-existent execution"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","failExecution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management failExecution should fail execution successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056497,"status":"passed","title":"should fail execution successfully"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","failExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management failExecution should update execution metrics on failure","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056498,"status":"passed","title":"should update execution metrics on failure"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","failExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management failExecution should update execution snapshot on failure","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056499,"status":"passed","title":"should update execution snapshot on failure"},{"ancestorTitles":["ActionNodeExecutionService","execution lifecycle management","failExecution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution lifecycle management failExecution should reject failure for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056500,"status":"passed","title":"should reject failure for non-existent execution"},{"ancestorTitles":["ActionNodeExecutionService","retry policy management","retryExecution"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService retry policy management retryExecution should retry execution when under retry limit","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056500,"status":"passed","title":"should retry execution when under retry limit"},{"ancestorTitles":["ActionNodeExecutionService","retry policy management","retryExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService retry policy management retryExecution should update metrics when retrying","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056502,"status":"passed","title":"should update metrics when retrying"},{"ancestorTitles":["ActionNodeExecutionService","retry policy management","retryExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService retry policy management retryExecution should reject retry when max attempts exceeded","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056503,"status":"passed","title":"should reject retry when max attempts exceeded"},{"ancestorTitles":["ActionNodeExecutionService","retry policy management","retryExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService retry policy management retryExecution should reject retry for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056504,"status":"passed","title":"should reject retry for non-existent execution"},{"ancestorTitles":["ActionNodeExecutionService","retry policy management","evaluateRetryPolicy"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService retry policy management evaluateRetryPolicy should allow retry when under limit and time passed","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056505,"status":"passed","title":"should allow retry when under limit and time passed"},{"ancestorTitles":["ActionNodeExecutionService","retry policy management","evaluateRetryPolicy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService retry policy management evaluateRetryPolicy should reject retry when max attempts reached","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056505,"status":"passed","title":"should reject retry when max attempts reached"},{"ancestorTitles":["ActionNodeExecutionService","retry policy management","evaluateRetryPolicy"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService retry policy management evaluateRetryPolicy should implement exponential backoff timing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056506,"status":"passed","title":"should implement exponential backoff timing"},{"ancestorTitles":["ActionNodeExecutionService","retry policy management","evaluateRetryPolicy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService retry policy management evaluateRetryPolicy should reject policy evaluation for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056506,"status":"passed","title":"should reject policy evaluation for non-existent execution"},{"ancestorTitles":["ActionNodeExecutionService","progress tracking and monitoring","updateProgress"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService progress tracking and monitoring updateProgress should update progress successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056507,"status":"passed","title":"should update progress successfully"},{"ancestorTitles":["ActionNodeExecutionService","progress tracking and monitoring","updateProgress"],"duration":20,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService progress tracking and monitoring updateProgress should estimate remaining time based on progress","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056512,"status":"passed","title":"should estimate remaining time based on progress"},{"ancestorTitles":["ActionNodeExecutionService","progress tracking and monitoring","updateProgress"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService progress tracking and monitoring updateProgress should reject invalid progress values","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056532,"status":"passed","title":"should reject invalid progress values"},{"ancestorTitles":["ActionNodeExecutionService","progress tracking and monitoring","updateProgress"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService progress tracking and monitoring updateProgress should reject progress update for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056533,"status":"passed","title":"should reject progress update for non-existent execution"},{"ancestorTitles":["ActionNodeExecutionService","progress tracking and monitoring","trackResourceUsage"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService progress tracking and monitoring trackResourceUsage should track resource usage successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056533,"status":"passed","title":"should track resource usage successfully"},{"ancestorTitles":["ActionNodeExecutionService","progress tracking and monitoring","trackResourceUsage"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService progress tracking and monitoring trackResourceUsage should reject resource tracking for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056534,"status":"passed","title":"should reject resource tracking for non-existent execution"},{"ancestorTitles":["ActionNodeExecutionService","execution control and cancellation","cancelExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution control and cancellation cancelExecution should cancel execution successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056535,"status":"passed","title":"should cancel execution successfully"},{"ancestorTitles":["ActionNodeExecutionService","execution control and cancellation","cancelExecution"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution control and cancellation cancelExecution should update snapshot to cancelled state","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056536,"status":"passed","title":"should update snapshot to cancelled state"},{"ancestorTitles":["ActionNodeExecutionService","execution control and cancellation","cancelExecution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService execution control and cancellation cancelExecution should reject cancellation for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056536,"status":"passed","title":"should reject cancellation for non-existent execution"},{"ancestorTitles":["ActionNodeExecutionService","query operations","getExecutionMetrics"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService query operations getExecutionMetrics should return metrics copy for existing execution","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056537,"status":"passed","title":"should return metrics copy for existing execution"},{"ancestorTitles":["ActionNodeExecutionService","query operations","getExecutionMetrics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService query operations getExecutionMetrics should reject metrics request for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056537,"status":"passed","title":"should reject metrics request for non-existent execution"},{"ancestorTitles":["ActionNodeExecutionService","query operations","getExecutionSnapshot"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService query operations getExecutionSnapshot should return snapshot copy for existing execution","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056538,"status":"passed","title":"should return snapshot copy for existing execution"},{"ancestorTitles":["ActionNodeExecutionService","query operations","getExecutionSnapshot"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService query operations getExecutionSnapshot should reject snapshot request for non-existent execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056538,"status":"passed","title":"should reject snapshot request for non-existent execution"},{"ancestorTitles":["ActionNodeExecutionService","query operations","utility queries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService query operations utility queries should correctly report execution status","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056539,"status":"passed","title":"should correctly report execution status"},{"ancestorTitles":["ActionNodeExecutionService","query operations","utility queries"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService query operations utility queries should track multiple concurrent executions","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056540,"status":"passed","title":"should track multiple concurrent executions"},{"ancestorTitles":["ActionNodeExecutionService","error handling and edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService error handling and edge cases should handle execution ID generation uniqueness","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056541,"status":"passed","title":"should handle execution ID generation uniqueness"},{"ancestorTitles":["ActionNodeExecutionService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService error handling and edge cases should handle concurrent operations on same action","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056541,"status":"passed","title":"should handle concurrent operations on same action"},{"ancestorTitles":["ActionNodeExecutionService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNodeExecutionService error handling and edge cases should handle malformed input gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056542,"status":"passed","title":"should handle malformed input gracefully"}],"endTime":1756394056544,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\action-node-execution-service.test.ts","startTime":1756394056252,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Result Pattern - Core Behavior Definition","Result Creation and Basic Properties"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Result Creation and Basic Properties ok_ValidValue_ShouldCreateSuccessResult","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056516,"status":"passed","title":"ok_ValidValue_ShouldCreateSuccessResult"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Result Creation and Basic Properties"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Result Creation and Basic Properties fail_ErrorMessage_ShouldCreateFailureResult","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056518,"status":"passed","title":"fail_ErrorMessage_ShouldCreateFailureResult"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Result Creation and Basic Properties"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Result Creation and Basic Properties value_OnFailedResult_ShouldThrowError","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056518,"status":"passed","title":"value_OnFailedResult_ShouldThrowError"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Result Creation and Basic Properties"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Result Creation and Basic Properties error_OnSuccessResult_ShouldThrowError","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056534,"status":"passed","title":"error_OnSuccessResult_ShouldThrowError"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Functional Composition - Map Operations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Functional Composition - Map Operations map_OnSuccessResult_ShouldTransformValue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056535,"status":"passed","title":"map_OnSuccessResult_ShouldTransformValue"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Functional Composition - Map Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Functional Composition - Map Operations map_OnFailedResult_ShouldPropagateFailure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056535,"status":"passed","title":"map_OnFailedResult_ShouldPropagateFailure"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Functional Composition - Map Operations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Functional Composition - Map Operations map_ChainedOperations_ShouldComposeCorrectly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056536,"status":"passed","title":"map_ChainedOperations_ShouldComposeCorrectly"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Functional Composition - Map Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Functional Composition - Map Operations map_ChainWithFailure_ShouldStopAtFirstFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056536,"status":"passed","title":"map_ChainWithFailure_ShouldStopAtFirstFailure"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Functional Composition - Map Operations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Functional Composition - Map Operations map_WithTypeTransformation_ShouldChangeResultType","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056537,"status":"passed","title":"map_WithTypeTransformation_ShouldChangeResultType"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Monadic Operations - FlatMap"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Monadic Operations - FlatMap flatMap_OnSuccessResult_ShouldFlattenNestedResult","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056537,"status":"passed","title":"flatMap_OnSuccessResult_ShouldFlattenNestedResult"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Monadic Operations - FlatMap"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Monadic Operations - FlatMap flatMap_OnFailedResult_ShouldPropagateFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056538,"status":"passed","title":"flatMap_OnFailedResult_ShouldPropagateFailure"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Monadic Operations - FlatMap"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Monadic Operations - FlatMap flatMap_FunctionReturnsFailure_ShouldPropagateInnerFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056539,"status":"passed","title":"flatMap_FunctionReturnsFailure_ShouldPropagateInnerFailure"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Monadic Operations - FlatMap"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Monadic Operations - FlatMap flatMap_ChainedOperations_ShouldComposeMonadically","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056540,"status":"passed","title":"flatMap_ChainedOperations_ShouldComposeMonadically"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Monadic Operations - FlatMap"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Monadic Operations - FlatMap flatMap_WithEarlyFailure_ShouldStopChainExecution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056540,"status":"passed","title":"flatMap_WithEarlyFailure_ShouldStopChainExecution"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Safe Value Access Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Safe Value Access Patterns getOrElse_OnSuccessResult_ShouldReturnValue","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056541,"status":"passed","title":"getOrElse_OnSuccessResult_ShouldReturnValue"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Safe Value Access Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Safe Value Access Patterns getOrElse_OnFailedResult_ShouldReturnDefault","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056541,"status":"passed","title":"getOrElse_OnFailedResult_ShouldReturnDefault"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Safe Value Access Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Safe Value Access Patterns fold_OnSuccessResult_ShouldExecuteSuccessHandler","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056541,"status":"passed","title":"fold_OnSuccessResult_ShouldExecuteSuccessHandler"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Safe Value Access Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Safe Value Access Patterns fold_OnFailedResult_ShouldExecuteFailureHandler","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056542,"status":"passed","title":"fold_OnFailedResult_ShouldExecuteFailureHandler"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Result Combination Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Result Combination Patterns combine_AllSuccessResults_ShouldReturnSuccessWithValues","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056542,"status":"passed","title":"combine_AllSuccessResults_ShouldReturnSuccessWithValues"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Result Combination Patterns"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Result Combination Patterns combine_WithFailureResult_ShouldReturnFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056542,"status":"passed","title":"combine_WithFailureResult_ShouldReturnFailure"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Result Combination Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Result Combination Patterns combine_MultipleFailures_ShouldCombineErrors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056543,"status":"passed","title":"combine_MultipleFailures_ShouldCombineErrors"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Result Combination Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Result Combination Patterns combine_EmptyArray_ShouldReturnEmptySuccess","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056543,"status":"passed","title":"combine_EmptyArray_ShouldReturnEmptySuccess"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Error Recovery Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Error Recovery Patterns recover_OnFailedResult_ShouldRecoverWithValue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056544,"status":"passed","title":"recover_OnFailedResult_ShouldRecoverWithValue"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Error Recovery Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Error Recovery Patterns recover_OnSuccessResult_ShouldReturnOriginal","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056544,"status":"passed","title":"recover_OnSuccessResult_ShouldReturnOriginal"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Error Recovery Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Error Recovery Patterns recoverWith_OnFailedResult_ShouldRecoverWithResult","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056544,"status":"passed","title":"recoverWith_OnFailedResult_ShouldRecoverWithResult"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Error Recovery Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Error Recovery Patterns recoverWith_RecoveryAlsoFails_ShouldReturnRecoveryFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056545,"status":"passed","title":"recoverWith_RecoveryAlsoFails_ShouldReturnRecoveryFailure"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Side Effects and Inspection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Side Effects and Inspection tap_OnSuccessResult_ShouldExecuteSideEffectAndReturnOriginal","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056545,"status":"passed","title":"tap_OnSuccessResult_ShouldExecuteSideEffectAndReturnOriginal"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Side Effects and Inspection"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Side Effects and Inspection tap_OnFailedResult_ShouldNotExecuteSideEffect","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056545,"status":"passed","title":"tap_OnFailedResult_ShouldNotExecuteSideEffect"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Side Effects and Inspection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Side Effects and Inspection tapError_OnFailedResult_ShouldExecuteSideEffectAndReturnOriginal","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056550,"status":"passed","title":"tapError_OnFailedResult_ShouldExecuteSideEffectAndReturnOriginal"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Side Effects and Inspection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Side Effects and Inspection tapError_OnSuccessResult_ShouldNotExecuteSideEffect","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056551,"status":"passed","title":"tapError_OnSuccessResult_ShouldNotExecuteSideEffect"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Architectural Boundary Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Architectural Boundary Enforcement Result_ShouldPreventDirectValueAccess_OnFailedResult","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056551,"status":"passed","title":"Result_ShouldPreventDirectValueAccess_OnFailedResult"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Architectural Boundary Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Architectural Boundary Enforcement Result_ShouldEnforceProperUsagePattern_InTestCode","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056552,"status":"passed","title":"Result_ShouldEnforceProperUsagePattern_InTestCode"},{"ancestorTitles":["Result Pattern - Core Behavior Definition","Architectural Boundary Enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Core Behavior Definition Architectural Boundary Enforcement Result_ShouldSupportTemplatePattern_ForEntityCreation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056553,"status":"passed","title":"Result_ShouldSupportTemplatePattern_ForEntityCreation"},{"ancestorTitles":["Result Pattern - Usage Templates","Entity Creation Pattern Template"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Usage Templates Entity Creation Pattern Template CreateEntity_WithValidation_ShouldUseResultPattern","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056553,"status":"passed","title":"CreateEntity_WithValidation_ShouldUseResultPattern"},{"ancestorTitles":["Result Pattern - Usage Templates","Entity Creation Pattern Template"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Usage Templates Entity Creation Pattern Template ValueObject_Creation_ShouldFollowResultPattern","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056554,"status":"passed","title":"ValueObject_Creation_ShouldFollowResultPattern"},{"ancestorTitles":["Result Pattern - Usage Templates","Error Handling Pattern Template"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Result Pattern - Usage Templates Error Handling Pattern Template MultiStep_Operation_ShouldUseResultChaining","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056555,"status":"passed","title":"MultiStep_Operation_ShouldUseResultChaining"}],"endTime":1756394056557,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\shared\\result.test.ts","startTime":1756394056295,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Version Management Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Version Management Rules should enforce immutability of published models","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056604,"status":"passed","title":"should enforce immutability of published models"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Version Management Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Version Management Rules should enforce semantic versioning increments","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056605,"status":"passed","title":"should enforce semantic versioning increments"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Version Management Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Version Management Rules should require version count to be at least 1","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056606,"status":"passed","title":"should require version count to be at least 1"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Container Node Composition Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Container Node Composition Rules should enforce unique container node per model belonging","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056608,"status":"passed","title":"should enforce unique container node per model belonging"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Container Node Composition Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Container Node Composition Rules should prevent circular dependencies in container nodes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056608,"status":"passed","title":"should prevent circular dependencies in container nodes"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Container Node Composition Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Container Node Composition Rules should enforce numeric coordinates for visual positions","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"startAt":1756394056609,"status":"passed","title":"should enforce numeric coordinates for visual positions"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Container Node Composition Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Container Node Composition Rules should enforce structural organization only for container nodes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056611,"status":"passed","title":"should enforce structural organization only for container nodes"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Action Node Composition Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Action Node Composition Rules should enforce single container parent for action nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056611,"status":"passed","title":"should enforce single container parent for action nodes"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Action Node Composition Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Action Node Composition Rules should allow multiple action types in same container","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056612,"status":"passed","title":"should allow multiple action types in same container"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Action Node Composition Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Action Node Composition Rules should enforce unique execution order within containers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056613,"status":"passed","title":"should enforce unique execution order within containers"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Action Node Composition Rules"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Action Node Composition Rules should enforce valid priority range 1-10","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056613,"status":"passed","title":"should enforce valid priority range 1-10"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Action Node Composition Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Action Node Composition Rules should enforce positive estimated duration","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056617,"status":"passed","title":"should enforce positive estimated duration"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Action Node Orchestration Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Action Node Orchestration Rules should validate execution modes for action orchestration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056618,"status":"passed","title":"should validate execution modes for action orchestration"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Action Node Orchestration Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Action Node Orchestration Rules should enforce priority-based scheduling in parallel mode","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394056619,"status":"passed","title":"should enforce priority-based scheduling in parallel mode"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Action Node Orchestration Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Action Node Orchestration Rules should validate status transition lifecycle patterns","invocations":1,"location":null,"numPassingAsserts":17,"retryReasons":[],"startAt":1756394056621,"status":"passed","title":"should validate status transition lifecycle patterns"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Hierarchical Context Access Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Hierarchical Context Access Rules should enforce sibling read-only access","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056623,"status":"passed","title":"should enforce sibling read-only access"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Hierarchical Context Access Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Hierarchical Context Access Rules should enforce child context restrictions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056625,"status":"passed","title":"should enforce child context restrictions"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Hierarchical Context Access Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Hierarchical Context Access Rules should enforce parent read/write access to child contexts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056626,"status":"passed","title":"should enforce parent read/write access to child contexts"},{"ancestorTitles":["Business Rules Validation","Function Model Business Rules","Hierarchical Context Access Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Function Model Business Rules Hierarchical Context Access Rules should enforce uncle/aunt lateral read-only access","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056627,"status":"passed","title":"should enforce uncle/aunt lateral read-only access"},{"ancestorTitles":["Business Rules Validation","Cross-Feature Relationship Rules","Link Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Cross-Feature Relationship Rules Link Validation Rules should enforce valid feature references","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056628,"status":"passed","title":"should enforce valid feature references"},{"ancestorTitles":["Business Rules Validation","Cross-Feature Relationship Rules","Link Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Cross-Feature Relationship Rules Link Validation Rules should enforce link strength range 0.0-1.0","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394056629,"status":"passed","title":"should enforce link strength range 0.0-1.0"},{"ancestorTitles":["Business Rules Validation","Cross-Feature Relationship Rules","Link Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Cross-Feature Relationship Rules Link Validation Rules should enforce valid link type vocabulary","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056630,"status":"passed","title":"should enforce valid link type vocabulary"},{"ancestorTitles":["Business Rules Validation","Cross-Feature Relationship Rules","Link Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Cross-Feature Relationship Rules Link Validation Rules should prohibit self-links","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056631,"status":"passed","title":"should prohibit self-links"},{"ancestorTitles":["Business Rules Validation","Cross-Feature Relationship Rules","Relationship Semantics Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Cross-Feature Relationship Rules Relationship Semantics Rules should validate relationship type semantics","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"startAt":1756394056632,"status":"passed","title":"should validate relationship type semantics"},{"ancestorTitles":["Business Rules Validation","AI Agent Rules","Agent Attachment Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation AI Agent Rules Agent Attachment Rules should support multi-level agent attachment","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056633,"status":"passed","title":"should support multi-level agent attachment"},{"ancestorTitles":["Business Rules Validation","AI Agent Rules","Agent Attachment Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation AI Agent Rules Agent Attachment Rules should allow multiple agents per target","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056634,"status":"passed","title":"should allow multiple agents per target"},{"ancestorTitles":["Business Rules Validation","AI Agent Rules","Agent Attachment Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation AI Agent Rules Agent Attachment Rules should preserve disabled agents without execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056635,"status":"passed","title":"should preserve disabled agents without execution"},{"ancestorTitles":["Business Rules Validation","AI Agent Rules","Execution Control Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation AI Agent Rules Execution Control Rules should enforce enabled agents participation only","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056635,"status":"passed","title":"should enforce enabled agents participation only"},{"ancestorTitles":["Business Rules Validation","AI Agent Rules","Execution Control Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation AI Agent Rules Execution Control Rules should validate agent tool approval","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056636,"status":"passed","title":"should validate agent tool approval"},{"ancestorTitles":["Business Rules Validation","Domain Event Rules"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Domain Event Rules should raise events for all significant domain changes","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394056636,"status":"passed","title":"should raise events for all significant domain changes"},{"ancestorTitles":["Business Rules Validation","Aggregate Consistency Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Aggregate Consistency Rules should enforce FunctionModel aggregate boundaries","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056641,"status":"passed","title":"should enforce FunctionModel aggregate boundaries"},{"ancestorTitles":["Business Rules Validation","Aggregate Consistency Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Aggregate Consistency Rules should enforce aggregate consistency rules","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056642,"status":"passed","title":"should enforce aggregate consistency rules"},{"ancestorTitles":["Business Rules Validation","Edge Cases and Constraints"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Edge Cases and Constraints should prevent orphaned entities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056643,"status":"passed","title":"should prevent orphaned entities"},{"ancestorTitles":["Business Rules Validation","Edge Cases and Constraints"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Business Rules Validation Edge Cases and Constraints should handle concurrent modification conflicts","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056643,"status":"passed","title":"should handle concurrent modification conflicts"}],"endTime":1756394056646,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\rules\\business-rules-validation.test.ts","startTime":1756394056384,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Domain Entity Layer Compliance","FunctionModel_SoftDeletion_ShouldNotHaveInfrastructureDependencies"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Domain Entity Layer Compliance FunctionModel_SoftDeletion_ShouldNotHaveInfrastructureDependencies should contain no imports or references to infrastructure layers","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056667,"status":"passed","title":"should contain no imports or references to infrastructure layers"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Domain Entity Layer Compliance","AuditLog_Entity_ShouldFollowDomainEntityPatterns"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Domain Entity Layer Compliance AuditLog_Entity_ShouldFollowDomainEntityPatterns should be a pure domain entity without external dependencies","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056669,"status":"passed","title":"should be a pure domain entity without external dependencies"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Domain Entity Layer Compliance","DomainEntities_ShouldEncapsulateBusinessLogic"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Domain Entity Layer Compliance DomainEntities_ShouldEncapsulateBusinessLogic should contain business logic within entities, not external services","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056673,"status":"passed","title":"should contain business logic within entities, not external services"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Domain Service Layer Compliance","DomainServices_ShouldOnlyDependOnDomainLayer"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Domain Service Layer Compliance DomainServices_ShouldOnlyDependOnDomainLayer should validate that domain services depend only on other domain components","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056675,"status":"passed","title":"should validate that domain services depend only on other domain components"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Domain Service Layer Compliance","DomainServices_ShouldReturnDomainResults"],"duration":21,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Domain Service Layer Compliance DomainServices_ShouldReturnDomainResults should use Result pattern consistently across domain service operations","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056677,"status":"passed","title":"should use Result pattern consistently across domain service operations"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Domain Event Layer Compliance","DomainEvents_ShouldFollowEventSourcingPatterns"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Domain Event Layer Compliance DomainEvents_ShouldFollowEventSourcingPatterns should implement domain events following proper event sourcing architecture","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394056698,"status":"passed","title":"should implement domain events following proper event sourcing architecture"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Domain Event Layer Compliance","DomainEvents_ShouldNotContainInfrastructureConcerns"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Domain Event Layer Compliance DomainEvents_ShouldNotContainInfrastructureConcerns should contain only domain data without infrastructure dependencies","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394056700,"status":"passed","title":"should contain only domain data without infrastructure dependencies"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Layer Boundary Enforcement","DomainLayer_ShouldNotImportFromOuterLayers"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Layer Boundary Enforcement DomainLayer_ShouldNotImportFromOuterLayers should enforce that domain layer has no dependencies on outer layers","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394056702,"status":"passed","title":"should enforce that domain layer has no dependencies on outer layers"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Layer Boundary Enforcement","InterfaceAbstraction_ShouldProvideProperContracts"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Layer Boundary Enforcement InterfaceAbstraction_ShouldProvideProperContracts should define proper abstractions for external dependencies","invocations":1,"location":null,"numPassingAsserts":17,"retryReasons":[],"startAt":1756394056704,"status":"passed","title":"should define proper abstractions for external dependencies"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Cross-Cutting Concern Compliance","ErrorHandling_ShouldBeConsistentAcrossDomain"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Cross-Cutting Concern Compliance ErrorHandling_ShouldBeConsistentAcrossDomain should use consistent error handling patterns throughout domain layer","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056706,"status":"passed","title":"should use consistent error handling patterns throughout domain layer"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Cross-Cutting Concern Compliance","Logging_ShouldBeInfrastructureAgnostic"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Cross-Cutting Concern Compliance Logging_ShouldBeInfrastructureAgnostic should not contain infrastructure-specific logging in domain layer","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056708,"status":"passed","title":"should not contain infrastructure-specific logging in domain layer"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Clean Architecture Boundary Validation","DomainPurity_ShouldMaintainBusinessLogicSeparation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Clean Architecture Boundary Validation DomainPurity_ShouldMaintainBusinessLogicSeparation should maintain clear separation between business logic and technical concerns","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056710,"status":"passed","title":"should maintain clear separation between business logic and technical concerns"},{"ancestorTitles":["Clean Architecture Compliance - UC-009 Soft Deletion","Clean Architecture Boundary Validation","ArchitecturalCompliance_ShouldEnforceLayerDiscipline"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Clean Architecture Compliance - UC-009 Soft Deletion Clean Architecture Boundary Validation ArchitecturalCompliance_ShouldEnforceLayerDiscipline should enforce strict layer discipline across all soft deletion components","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"startAt":1756394056712,"status":"passed","title":"should enforce strict layer discipline across all soft deletion components"}],"endTime":1756394056715,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\architecture\\clean-architecture-soft-deletion-compliance.test.ts","startTime":1756394056441,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SoftDeletionCoordinationService","Soft Deletion Coordination","CoordinateSoftDeletion_ValidModel_ShouldAnalyzeDependencies"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Soft Deletion Coordination CoordinateSoftDeletion_ValidModel_ShouldAnalyzeDependencies should coordinate soft deletion with full dependency analysis","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056686,"status":"passed","title":"should coordinate soft deletion with full dependency analysis"},{"ancestorTitles":["SoftDeletionCoordinationService","Soft Deletion Coordination","CoordinateSoftDeletion_WithActiveReferences_ShouldPreventDeletion"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Soft Deletion Coordination CoordinateSoftDeletion_WithActiveReferences_ShouldPreventDeletion should prevent deletion when model has active critical references","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056690,"status":"passed","title":"should prevent deletion when model has active critical references"},{"ancestorTitles":["SoftDeletionCoordinationService","Soft Deletion Coordination","CoordinateSoftDeletion_WithCascadingDeletion_ShouldHandleChain"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Soft Deletion Coordination CoordinateSoftDeletion_WithCascadingDeletion_ShouldHandleChain should coordinate cascading soft deletion across related models","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056692,"status":"passed","title":"should coordinate cascading soft deletion across related models"},{"ancestorTitles":["SoftDeletionCoordinationService","Access Control and State Validation","ValidateModelAccessibility_DeletedModel_ShouldRestrictAccess"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Access Control and State Validation ValidateModelAccessibility_DeletedModel_ShouldRestrictAccess should validate access permissions for deleted models","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394056694,"status":"passed","title":"should validate access permissions for deleted models"},{"ancestorTitles":["SoftDeletionCoordinationService","Access Control and State Validation","ValidateModelState_ForSoftDeletion_ShouldCheckPreconditions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Access Control and State Validation ValidateModelState_ForSoftDeletion_ShouldCheckPreconditions should validate model state before allowing soft deletion","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056697,"status":"passed","title":"should validate model state before allowing soft deletion"},{"ancestorTitles":["SoftDeletionCoordinationService","Access Control and State Validation","ValidateRestoreEligibility_ForDeletedModel_ShouldCheckConditions"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Access Control and State Validation ValidateRestoreEligibility_ForDeletedModel_ShouldCheckConditions should validate eligibility for model restoration","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056698,"status":"passed","title":"should validate eligibility for model restoration"},{"ancestorTitles":["SoftDeletionCoordinationService","Audit Trail and Compliance","GenerateAuditData_ForSoftDeletion_ShouldCaptureCompleteState"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Audit Trail and Compliance GenerateAuditData_ForSoftDeletion_ShouldCaptureCompleteState should generate comprehensive audit data for soft deletion","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056700,"status":"passed","title":"should generate comprehensive audit data for soft deletion"},{"ancestorTitles":["SoftDeletionCoordinationService","Audit Trail and Compliance","CalculateRetentionPolicy_ForDeletedModel_ShouldDetermineLifecycle"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Audit Trail and Compliance CalculateRetentionPolicy_ForDeletedModel_ShouldDetermineLifecycle should calculate retention policy and deletion lifecycle","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056701,"status":"passed","title":"should calculate retention policy and deletion lifecycle"},{"ancestorTitles":["SoftDeletionCoordinationService","Recovery and Restoration Coordination","CoordinateModelRestoration_ValidRequest_ShouldRestoreState"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Recovery and Restoration Coordination CoordinateModelRestoration_ValidRequest_ShouldRestoreState should coordinate complete model restoration process","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056703,"status":"passed","title":"should coordinate complete model restoration process"},{"ancestorTitles":["SoftDeletionCoordinationService","Recovery and Restoration Coordination","CoordinateModelRestoration_IntegrityViolations_ShouldProvideRepairPlan"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Recovery and Restoration Coordination CoordinateModelRestoration_IntegrityViolations_ShouldProvideRepairPlan should provide repair plan when restoration faces integrity violations","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056705,"status":"passed","title":"should provide repair plan when restoration faces integrity violations"},{"ancestorTitles":["SoftDeletionCoordinationService","Clean Architecture Compliance","DomainServiceCoordination_ShouldUseOnlyDomainDependencies"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Clean Architecture Compliance DomainServiceCoordination_ShouldUseOnlyDomainDependencies should coordinate deletion using only domain services and entities","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056707,"status":"passed","title":"should coordinate deletion using only domain services and entities"},{"ancestorTitles":["SoftDeletionCoordinationService","Clean Architecture Compliance","DomainEventGeneration_ShouldFollowEventSourcingPatterns"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Clean Architecture Compliance DomainEventGeneration_ShouldFollowEventSourcingPatterns should generate domain events following Clean Architecture patterns","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394056712,"status":"passed","title":"should generate domain events following Clean Architecture patterns"},{"ancestorTitles":["SoftDeletionCoordinationService","Clean Architecture Compliance","ResultPatternUsage_ShouldHandleErrorsGracefully"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeletionCoordinationService Clean Architecture Compliance ResultPatternUsage_ShouldHandleErrorsGracefully should use Result pattern for error handling throughout coordination","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056714,"status":"passed","title":"should use Result pattern for error handling throughout coordination"}],"endTime":1756394056716,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\soft-deletion-coordination-service.test.ts","startTime":1756394056452,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["NodeDependencyService","buildDependencyGraph"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService buildDependencyGraph should build simple dependency graph correctly","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056701,"status":"passed","title":"should build simple dependency graph correctly"},{"ancestorTitles":["NodeDependencyService","buildDependencyGraph"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService buildDependencyGraph should build complex dependency graph","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056705,"status":"passed","title":"should build complex dependency graph"},{"ancestorTitles":["NodeDependencyService","buildDependencyGraph"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService buildDependencyGraph should handle nodes with no dependencies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056719,"status":"passed","title":"should handle nodes with no dependencies"},{"ancestorTitles":["NodeDependencyService","buildDependencyGraph"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService buildDependencyGraph should reject nodes with invalid dependency references","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056720,"status":"passed","title":"should reject nodes with invalid dependency references"},{"ancestorTitles":["NodeDependencyService","detectCircularDependencies"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService detectCircularDependencies should detect no cycles in valid graph","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056721,"status":"passed","title":"should detect no cycles in valid graph"},{"ancestorTitles":["NodeDependencyService","detectCircularDependencies"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService detectCircularDependencies should detect simple circular dependency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056723,"status":"passed","title":"should detect simple circular dependency"},{"ancestorTitles":["NodeDependencyService","detectCircularDependencies"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService detectCircularDependencies should detect complex circular dependency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056724,"status":"passed","title":"should detect complex circular dependency"},{"ancestorTitles":["NodeDependencyService","detectCircularDependencies"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService detectCircularDependencies should detect self-referencing dependency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056725,"status":"passed","title":"should detect self-referencing dependency"},{"ancestorTitles":["NodeDependencyService","detectCircularDependencies"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService detectCircularDependencies should detect multiple independent cycles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056729,"status":"passed","title":"should detect multiple independent cycles"},{"ancestorTitles":["NodeDependencyService","calculateExecutionOrder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService calculateExecutionOrder should calculate correct execution order for linear chain","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056730,"status":"passed","title":"should calculate correct execution order for linear chain"},{"ancestorTitles":["NodeDependencyService","calculateExecutionOrder"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService calculateExecutionOrder should handle parallel execution paths correctly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056731,"status":"passed","title":"should handle parallel execution paths correctly"},{"ancestorTitles":["NodeDependencyService","calculateExecutionOrder"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService calculateExecutionOrder should fail with circular dependencies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056732,"status":"passed","title":"should fail with circular dependencies"},{"ancestorTitles":["NodeDependencyService","calculateExecutionOrder"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService calculateExecutionOrder should handle complex dependency trees","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056732,"status":"passed","title":"should handle complex dependency trees"},{"ancestorTitles":["NodeDependencyService","findReachableNodes"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService findReachableNodes should find all reachable nodes from start node","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056734,"status":"passed","title":"should find all reachable nodes from start node"},{"ancestorTitles":["NodeDependencyService","findReachableNodes"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService findReachableNodes should handle branching paths correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056735,"status":"passed","title":"should handle branching paths correctly"},{"ancestorTitles":["NodeDependencyService","findReachableNodes"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService findReachableNodes should return only start node when no connections","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056736,"status":"passed","title":"should return only start node when no connections"},{"ancestorTitles":["NodeDependencyService","findReachableNodes"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService findReachableNodes should handle non-existent start node","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056736,"status":"passed","title":"should handle non-existent start node"},{"ancestorTitles":["NodeDependencyService","getDependencyDepth"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService getDependencyDepth should calculate correct depth for linear chain","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056737,"status":"passed","title":"should calculate correct depth for linear chain"},{"ancestorTitles":["NodeDependencyService","getDependencyDepth"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService getDependencyDepth should handle diamond pattern depths correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056738,"status":"passed","title":"should handle diamond pattern depths correctly"},{"ancestorTitles":["NodeDependencyService","getDependencyDepth"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService getDependencyDepth should return -1 for non-existent node","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056739,"status":"passed","title":"should return -1 for non-existent node"},{"ancestorTitles":["NodeDependencyService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService error handling and edge cases should handle empty node array","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056739,"status":"passed","title":"should handle empty node array"},{"ancestorTitles":["NodeDependencyService","error handling and edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService error handling and edge cases should handle single node with no dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056740,"status":"passed","title":"should handle single node with no dependencies"},{"ancestorTitles":["NodeDependencyService","error handling and edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeDependencyService error handling and edge cases should handle malformed dependency data gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056740,"status":"passed","title":"should handle malformed dependency data gracefully"}],"endTime":1756394056742,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\node-dependency-service.test.ts","startTime":1756394056456,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PublishFunctionModelUseCase","Command Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Command Validation should fail when modelId is missing","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056747,"status":"passed","title":"should fail when modelId is missing"},{"ancestorTitles":["PublishFunctionModelUseCase","Command Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Command Validation should fail when userId is missing","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056750,"status":"passed","title":"should fail when userId is missing"},{"ancestorTitles":["PublishFunctionModelUseCase","Command Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Command Validation should fail when version is missing","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056751,"status":"passed","title":"should fail when version is missing"},{"ancestorTitles":["PublishFunctionModelUseCase","Command Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Command Validation should fail when publishNotes exceed 2000 characters","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056752,"status":"passed","title":"should fail when publishNotes exceed 2000 characters"},{"ancestorTitles":["PublishFunctionModelUseCase","Model Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Model Retrieval should fail when model is not found","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056752,"status":"passed","title":"should fail when model is not found"},{"ancestorTitles":["PublishFunctionModelUseCase","Model Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Model Retrieval should fail when repository throws error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056753,"status":"passed","title":"should fail when repository throws error"},{"ancestorTitles":["PublishFunctionModelUseCase","Permission Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Permission Validation should fail when user is not owner, editor, or publisher","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056754,"status":"passed","title":"should fail when user is not owner, editor, or publisher"},{"ancestorTitles":["PublishFunctionModelUseCase","Permission Validation"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Permission Validation should succeed when user is owner","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056755,"status":"passed","title":"should succeed when user is owner"},{"ancestorTitles":["PublishFunctionModelUseCase","Permission Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Permission Validation should succeed when user is editor","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056759,"status":"passed","title":"should succeed when user is editor"},{"ancestorTitles":["PublishFunctionModelUseCase","Permission Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Permission Validation should succeed when user is explicit publisher","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056760,"status":"passed","title":"should succeed when user is explicit publisher"},{"ancestorTitles":["PublishFunctionModelUseCase","Model State Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Model State Validation should fail when model is already published","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056761,"status":"passed","title":"should fail when model is already published"},{"ancestorTitles":["PublishFunctionModelUseCase","Model State Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Model State Validation should fail when model is archived","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056761,"status":"passed","title":"should fail when model is archived"},{"ancestorTitles":["PublishFunctionModelUseCase","Model State Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Model State Validation should fail when model is deleted","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056762,"status":"passed","title":"should fail when model is deleted"},{"ancestorTitles":["PublishFunctionModelUseCase","Version Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Version Validation should fail with invalid version format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056763,"status":"passed","title":"should fail with invalid version format"},{"ancestorTitles":["PublishFunctionModelUseCase","Version Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Version Validation should fail when new version is not greater than current","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056764,"status":"passed","title":"should fail when new version is not greater than current"},{"ancestorTitles":["PublishFunctionModelUseCase","Version Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Version Validation should fail when new version is lower than current","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056764,"status":"passed","title":"should fail when new version is lower than current"},{"ancestorTitles":["PublishFunctionModelUseCase","Version Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Version Validation should succeed with valid higher version","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056765,"status":"passed","title":"should succeed with valid higher version"},{"ancestorTitles":["PublishFunctionModelUseCase","Workflow Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Workflow Validation should fail when workflow validation fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056766,"status":"passed","title":"should fail when workflow validation fails"},{"ancestorTitles":["PublishFunctionModelUseCase","Workflow Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Workflow Validation should fail when workflow has validation errors","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056767,"status":"passed","title":"should fail when workflow has validation errors"},{"ancestorTitles":["PublishFunctionModelUseCase","Workflow Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Workflow Validation should fail when workflow has critical warnings","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056768,"status":"passed","title":"should fail when workflow has critical warnings"},{"ancestorTitles":["PublishFunctionModelUseCase","Workflow Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Workflow Validation should succeed with non-critical warnings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056769,"status":"passed","title":"should succeed with non-critical warnings"},{"ancestorTitles":["PublishFunctionModelUseCase","Domain Publication"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Domain Publication should fail when domain publish method fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056770,"status":"passed","title":"should fail when domain publish method fails"},{"ancestorTitles":["PublishFunctionModelUseCase","Domain Publication"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Domain Publication should call domain publish method when valid","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056771,"status":"passed","title":"should call domain publish method when valid"},{"ancestorTitles":["PublishFunctionModelUseCase","Repository Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Repository Operations should fail when repository save fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056772,"status":"passed","title":"should fail when repository save fails"},{"ancestorTitles":["PublishFunctionModelUseCase","Repository Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Repository Operations should call markSaved after successful repository save","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056773,"status":"passed","title":"should call markSaved after successful repository save"},{"ancestorTitles":["PublishFunctionModelUseCase","Event Publishing"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Event Publishing should publish FunctionModelPublished event with correct data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056775,"status":"passed","title":"should publish FunctionModelPublished event with correct data"},{"ancestorTitles":["PublishFunctionModelUseCase","Event Publishing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Event Publishing should publish FunctionModelVersionCreated event with correct version type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056778,"status":"passed","title":"should publish FunctionModelVersionCreated event with correct version type"},{"ancestorTitles":["PublishFunctionModelUseCase","Event Publishing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Event Publishing should determine major version type correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056779,"status":"passed","title":"should determine major version type correctly"},{"ancestorTitles":["PublishFunctionModelUseCase","Event Publishing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Event Publishing should determine patch version type correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056781,"status":"passed","title":"should determine patch version type correctly"},{"ancestorTitles":["PublishFunctionModelUseCase","Success Scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Success Scenarios should return correct PublishModelResult on success","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056782,"status":"passed","title":"should return correct PublishModelResult on success"},{"ancestorTitles":["PublishFunctionModelUseCase","Success Scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Success Scenarios should execute complete publication workflow","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056784,"status":"passed","title":"should execute complete publication workflow"},{"ancestorTitles":["PublishFunctionModelUseCase","Success Scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Success Scenarios should handle optional publishNotes correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056785,"status":"passed","title":"should handle optional publishNotes correctly"},{"ancestorTitles":["PublishFunctionModelUseCase","Critical Warning Filtering"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Critical Warning Filtering should block publication with no input warning","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056786,"status":"passed","title":"should block publication with no input warning"},{"ancestorTitles":["PublishFunctionModelUseCase","Critical Warning Filtering"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Critical Warning Filtering should block publication with no output warning","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056787,"status":"passed","title":"should block publication with no output warning"},{"ancestorTitles":["PublishFunctionModelUseCase","Critical Warning Filtering"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Critical Warning Filtering should block publication with unreachable nodes warning","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056789,"status":"passed","title":"should block publication with unreachable nodes warning"},{"ancestorTitles":["PublishFunctionModelUseCase","Critical Warning Filtering"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Critical Warning Filtering should block publication with infinite loop warning","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056789,"status":"passed","title":"should block publication with infinite loop warning"},{"ancestorTitles":["PublishFunctionModelUseCase","Critical Warning Filtering"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PublishFunctionModelUseCase Critical Warning Filtering should block publication with circular dependency warning","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056790,"status":"passed","title":"should block publication with circular dependency warning"}],"endTime":1756394056793,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\publish-function-model-use-case.test.ts","startTime":1756394056513,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should create position with valid coordinates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056785,"status":"passed","title":"should create position with valid coordinates"},{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should create position with zero coordinates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056786,"status":"passed","title":"should create position with zero coordinates"},{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should create position with negative coordinates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056787,"status":"passed","title":"should create position with negative coordinates"},{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should create position with decimal coordinates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056788,"status":"passed","title":"should create position with decimal coordinates"},{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should create position at minimum boundary","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056789,"status":"passed","title":"should create position at minimum boundary"},{"ancestorTitles":["Position","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should create position at maximum boundary","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056790,"status":"passed","title":"should create position at maximum boundary"},{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject infinite X coordinate","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056790,"status":"passed","title":"should reject infinite X coordinate"},{"ancestorTitles":["Position","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject infinite Y coordinate","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056791,"status":"passed","title":"should reject infinite Y coordinate"},{"ancestorTitles":["Position","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject negative infinite coordinates","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056792,"status":"passed","title":"should reject negative infinite coordinates"},{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject NaN X coordinate","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056792,"status":"passed","title":"should reject NaN X coordinate"},{"ancestorTitles":["Position","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject NaN Y coordinate","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056793,"status":"passed","title":"should reject NaN Y coordinate"},{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject X coordinate below minimum","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056793,"status":"passed","title":"should reject X coordinate below minimum"},{"ancestorTitles":["Position","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject Y coordinate below minimum","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056794,"status":"passed","title":"should reject Y coordinate below minimum"},{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject X coordinate above maximum","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056794,"status":"passed","title":"should reject X coordinate above maximum"},{"ancestorTitles":["Position","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject Y coordinate above maximum","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056795,"status":"passed","title":"should reject Y coordinate above maximum"},{"ancestorTitles":["Position","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position creation and validation should reject both coordinates out of bounds","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056795,"status":"passed","title":"should reject both coordinates out of bounds"},{"ancestorTitles":["Position","zero position factory"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position zero position factory should create position at origin","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056796,"status":"passed","title":"should create position at origin"},{"ancestorTitles":["Position","zero position factory"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position zero position factory should return same zero position values on multiple calls","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056796,"status":"passed","title":"should return same zero position values on multiple calls"},{"ancestorTitles":["Position","movement operations","moveTo"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveTo should move to new absolute position","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056797,"status":"passed","title":"should move to new absolute position"},{"ancestorTitles":["Position","movement operations","moveTo"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveTo should move to origin","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056798,"status":"passed","title":"should move to origin"},{"ancestorTitles":["Position","movement operations","moveTo"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveTo should move to negative coordinates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056798,"status":"passed","title":"should move to negative coordinates"},{"ancestorTitles":["Position","movement operations","moveTo"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveTo should reject move to invalid coordinates","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056799,"status":"passed","title":"should reject move to invalid coordinates"},{"ancestorTitles":["Position","movement operations","moveTo"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveTo should not modify original position","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056800,"status":"passed","title":"should not modify original position"},{"ancestorTitles":["Position","movement operations","moveBy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveBy should move by positive delta","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056800,"status":"passed","title":"should move by positive delta"},{"ancestorTitles":["Position","movement operations","moveBy"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveBy should move by negative delta","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056801,"status":"passed","title":"should move by negative delta"},{"ancestorTitles":["Position","movement operations","moveBy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveBy should move by zero delta","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056801,"status":"passed","title":"should move by zero delta"},{"ancestorTitles":["Position","movement operations","moveBy"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveBy should move by decimal delta","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056802,"status":"passed","title":"should move by decimal delta"},{"ancestorTitles":["Position","movement operations","moveBy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveBy should reject move that would exceed boundaries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056802,"status":"passed","title":"should reject move that would exceed boundaries"},{"ancestorTitles":["Position","movement operations","moveBy"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveBy should reject move that would go below boundaries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056803,"status":"passed","title":"should reject move that would go below boundaries"},{"ancestorTitles":["Position","movement operations","moveBy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position movement operations moveBy should not modify original position","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056803,"status":"passed","title":"should not modify original position"},{"ancestorTitles":["Position","distance calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position distance calculations should calculate distance to same position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056804,"status":"passed","title":"should calculate distance to same position"},{"ancestorTitles":["Position","distance calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position distance calculations should calculate distance along X axis","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056804,"status":"passed","title":"should calculate distance along X axis"},{"ancestorTitles":["Position","distance calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position distance calculations should calculate distance along Y axis","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056805,"status":"passed","title":"should calculate distance along Y axis"},{"ancestorTitles":["Position","distance calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position distance calculations should calculate distance using Pythagorean theorem","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056805,"status":"passed","title":"should calculate distance using Pythagorean theorem"},{"ancestorTitles":["Position","distance calculations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position distance calculations should calculate distance with negative coordinates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056805,"status":"passed","title":"should calculate distance with negative coordinates"},{"ancestorTitles":["Position","distance calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position distance calculations should calculate distance with decimal coordinates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056806,"status":"passed","title":"should calculate distance with decimal coordinates"},{"ancestorTitles":["Position","distance calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position distance calculations should calculate symmetric distance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056806,"status":"passed","title":"should calculate symmetric distance"},{"ancestorTitles":["Position","distance calculations"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position distance calculations should calculate large distances correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056807,"status":"passed","title":"should calculate large distances correctly"},{"ancestorTitles":["Position","equality and comparison"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position equality and comparison should be equal when coordinates are identical","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056807,"status":"passed","title":"should be equal when coordinates are identical"},{"ancestorTitles":["Position","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position equality and comparison should not be equal when X coordinates differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056812,"status":"passed","title":"should not be equal when X coordinates differ"},{"ancestorTitles":["Position","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position equality and comparison should not be equal when Y coordinates differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056812,"status":"passed","title":"should not be equal when Y coordinates differ"},{"ancestorTitles":["Position","equality and comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position equality and comparison should not be equal when both coordinates differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056812,"status":"passed","title":"should not be equal when both coordinates differ"},{"ancestorTitles":["Position","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position equality and comparison should be equal with decimal coordinates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056813,"status":"passed","title":"should be equal with decimal coordinates"},{"ancestorTitles":["Position","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position equality and comparison should be equal with negative coordinates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056813,"status":"passed","title":"should be equal with negative coordinates"},{"ancestorTitles":["Position","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position equality and comparison should be equal at origin","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056813,"status":"passed","title":"should be equal at origin"},{"ancestorTitles":["Position","string representation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position string representation should format positive coordinates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056814,"status":"passed","title":"should format positive coordinates"},{"ancestorTitles":["Position","string representation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position string representation should format negative coordinates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056814,"status":"passed","title":"should format negative coordinates"},{"ancestorTitles":["Position","string representation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position string representation should format zero coordinates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056814,"status":"passed","title":"should format zero coordinates"},{"ancestorTitles":["Position","string representation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position string representation should format decimal coordinates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056815,"status":"passed","title":"should format decimal coordinates"},{"ancestorTitles":["Position","string representation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position string representation should format mixed sign coordinates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056815,"status":"passed","title":"should format mixed sign coordinates"},{"ancestorTitles":["Position","object conversion"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position object conversion should convert to object with x and y properties","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056815,"status":"passed","title":"should convert to object with x and y properties"},{"ancestorTitles":["Position","object conversion"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position object conversion should convert negative coordinates to object","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056816,"status":"passed","title":"should convert negative coordinates to object"},{"ancestorTitles":["Position","object conversion"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position object conversion should convert decimal coordinates to object","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056816,"status":"passed","title":"should convert decimal coordinates to object"},{"ancestorTitles":["Position","object conversion"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position object conversion should create independent object","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056817,"status":"passed","title":"should create independent object"},{"ancestorTitles":["Position","object conversion"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position object conversion should work with JSON serialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056817,"status":"passed","title":"should work with JSON serialization"},{"ancestorTitles":["Position","immutability"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position immutability should be immutable after creation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056817,"status":"passed","title":"should be immutable after creation"},{"ancestorTitles":["Position","immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position immutability should not allow modification of coordinate properties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056834,"status":"passed","title":"should not allow modification of coordinate properties"},{"ancestorTitles":["Position","immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position immutability should return new instances from movement operations","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056835,"status":"passed","title":"should return new instances from movement operations"},{"ancestorTitles":["Position","edge cases and boundaries"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position edge cases and boundaries should handle position at exact boundary values","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056836,"status":"passed","title":"should handle position at exact boundary values"},{"ancestorTitles":["Position","edge cases and boundaries"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position edge cases and boundaries should handle very small decimal differences","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056836,"status":"passed","title":"should handle very small decimal differences"},{"ancestorTitles":["Position","edge cases and boundaries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Position edge cases and boundaries should handle floating point precision correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056836,"status":"passed","title":"should handle floating point precision correctly"}],"endTime":1756394056838,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\value-objects\\position.test.ts","startTime":1756394056562,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModel - Publication Domain Rules","publish() - State Transition Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules publish() - State Transition Rules should transition from DRAFT to PUBLISHED when valid","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056804,"status":"passed","title":"should transition from DRAFT to PUBLISHED when valid"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","publish() - State Transition Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules publish() - State Transition Rules should fail when model is already PUBLISHED","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056806,"status":"passed","title":"should fail when model is already PUBLISHED"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","publish() - State Transition Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules publish() - State Transition Rules should fail when model is ARCHIVED","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056807,"status":"passed","title":"should fail when model is ARCHIVED"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","publish() - State Transition Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules publish() - State Transition Rules should fail when model is not in DRAFT state","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056807,"status":"passed","title":"should fail when model is not in DRAFT state"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","publish() - State Transition Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules publish() - State Transition Rules should require valid workflow before publication","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056810,"status":"passed","title":"should require valid workflow before publication"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","validateWorkflow() - Publication Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules validateWorkflow() - Publication Validation Rules should return validation errors for empty workflow","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056811,"status":"passed","title":"should return validation errors for empty workflow"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","validateWorkflow() - Publication Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules validateWorkflow() - Publication Validation Rules should return validation error when missing input nodes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056811,"status":"passed","title":"should return validation error when missing input nodes"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","validateWorkflow() - Publication Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules validateWorkflow() - Publication Validation Rules should return validation error when missing output nodes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056812,"status":"passed","title":"should return validation error when missing output nodes"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","validateWorkflow() - Publication Validation Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules validateWorkflow() - Publication Validation Rules should validate successfully with input and output nodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056813,"status":"passed","title":"should validate successfully with input and output nodes"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","validateWorkflow() - Publication Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules validateWorkflow() - Publication Validation Rules should include warnings for isolated nodes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056815,"status":"passed","title":"should include warnings for isolated nodes"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","validateWorkflow() - Publication Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules validateWorkflow() - Publication Validation Rules should detect input-output boundary node correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056816,"status":"passed","title":"should detect input-output boundary node correctly"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","Business Rule Enforcement During Publication"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules Business Rule Enforcement During Publication should prevent modification of published models","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056817,"status":"passed","title":"should prevent modification of published models"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","Business Rule Enforcement During Publication"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules Business Rule Enforcement During Publication should prevent removal from published models","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056818,"status":"passed","title":"should prevent removal from published models"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","Business Rule Enforcement During Publication"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules Business Rule Enforcement During Publication should maintain model integrity during publication process","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056819,"status":"passed","title":"should maintain model integrity during publication process"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","Publication Prerequisites"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules Publication Prerequisites should require minimum workflow structure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056829,"status":"passed","title":"should require minimum workflow structure"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","Publication Prerequisites"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules Publication Prerequisites should allow publication with valid minimum structure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056830,"status":"passed","title":"should allow publication with valid minimum structure"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","Publication Prerequisites"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules Publication Prerequisites should update timestamp on successful publication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056830,"status":"passed","title":"should update timestamp on successful publication"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","Publication Idempotency Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules Publication Idempotency Rules should not change state on repeated publish attempts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056844,"status":"passed","title":"should not change state on repeated publish attempts"},{"ancestorTitles":["FunctionModel - Publication Domain Rules","Publication Idempotency Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel - Publication Domain Rules Publication Idempotency Rules should maintain consistent error messages for invalid state","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056845,"status":"passed","title":"should maintain consistent error messages for invalid state"}],"endTime":1756394056846,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\function-model-publication.test.ts","startTime":1756394056572,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ActionNode","Construction and Properties"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Construction and Properties should create action node with valid properties","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"startAt":1756394056877,"status":"passed","title":"should create action node with valid properties"},{"ancestorTitles":["ActionNode","Construction and Properties"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Construction and Properties should create action node with minimal required properties","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056881,"status":"passed","title":"should create action node with minimal required properties"},{"ancestorTitles":["ActionNode","Construction and Properties"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Construction and Properties should return correct action type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056882,"status":"passed","title":"should return correct action type"},{"ancestorTitles":["ActionNode","Construction and Properties"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Construction and Properties should provide readonly metadata access","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056883,"status":"passed","title":"should provide readonly metadata access"},{"ancestorTitles":["ActionNode","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Name Management should update name successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056883,"status":"passed","title":"should update name successfully"},{"ancestorTitles":["ActionNode","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Name Management should trim whitespace from name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056884,"status":"passed","title":"should trim whitespace from name"},{"ancestorTitles":["ActionNode","Name Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Name Management should reject empty name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056885,"status":"passed","title":"should reject empty name"},{"ancestorTitles":["ActionNode","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Name Management should reject whitespace-only name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056885,"status":"passed","title":"should reject whitespace-only name"},{"ancestorTitles":["ActionNode","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Name Management should reject name exceeding 200 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056886,"status":"passed","title":"should reject name exceeding 200 characters"},{"ancestorTitles":["ActionNode","Name Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Name Management should allow name exactly 200 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056887,"status":"passed","title":"should allow name exactly 200 characters"},{"ancestorTitles":["ActionNode","Description Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Description Management should update description successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056887,"status":"passed","title":"should update description successfully"},{"ancestorTitles":["ActionNode","Description Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Description Management should allow undefined description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056888,"status":"passed","title":"should allow undefined description"},{"ancestorTitles":["ActionNode","Description Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Description Management should trim whitespace from description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056889,"status":"passed","title":"should trim whitespace from description"},{"ancestorTitles":["ActionNode","Description Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Description Management should allow empty string description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056889,"status":"passed","title":"should allow empty string description"},{"ancestorTitles":["ActionNode","Description Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Description Management should reject description exceeding 1000 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056890,"status":"passed","title":"should reject description exceeding 1000 characters"},{"ancestorTitles":["ActionNode","Description Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Description Management should allow description exactly 1000 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056890,"status":"passed","title":"should allow description exactly 1000 characters"},{"ancestorTitles":["ActionNode","Execution Mode Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Execution Mode Management should update execution mode successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056891,"status":"passed","title":"should update execution mode successfully"},{"ancestorTitles":["ActionNode","Execution Mode Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Execution Mode Management should handle all execution modes","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056892,"status":"passed","title":"should handle all execution modes"},{"ancestorTitles":["ActionNode","Execution Order Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Execution Order Management should update execution order successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056893,"status":"passed","title":"should update execution order successfully"},{"ancestorTitles":["ActionNode","Execution Order Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Execution Order Management should allow minimum execution order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056894,"status":"passed","title":"should allow minimum execution order"},{"ancestorTitles":["ActionNode","Execution Order Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Execution Order Management should reject execution order less than 1","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056894,"status":"passed","title":"should reject execution order less than 1"},{"ancestorTitles":["ActionNode","Execution Order Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Execution Order Management should reject negative execution order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056895,"status":"passed","title":"should reject negative execution order"},{"ancestorTitles":["ActionNode","Priority Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Priority Management should update priority successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056896,"status":"passed","title":"should update priority successfully"},{"ancestorTitles":["ActionNode","Priority Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Priority Management should allow minimum priority","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056896,"status":"passed","title":"should allow minimum priority"},{"ancestorTitles":["ActionNode","Priority Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Priority Management should allow maximum priority","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056897,"status":"passed","title":"should allow maximum priority"},{"ancestorTitles":["ActionNode","Priority Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Priority Management should reject priority less than 1","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056898,"status":"passed","title":"should reject priority less than 1"},{"ancestorTitles":["ActionNode","Priority Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Priority Management should reject priority greater than 10","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056898,"status":"passed","title":"should reject priority greater than 10"},{"ancestorTitles":["ActionNode","Estimated Duration Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Estimated Duration Management should update estimated duration successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056899,"status":"passed","title":"should update estimated duration successfully"},{"ancestorTitles":["ActionNode","Estimated Duration Management"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Estimated Duration Management should allow undefined estimated duration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056899,"status":"passed","title":"should allow undefined estimated duration"},{"ancestorTitles":["ActionNode","Estimated Duration Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Estimated Duration Management should reject zero duration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056903,"status":"passed","title":"should reject zero duration"},{"ancestorTitles":["ActionNode","Estimated Duration Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Estimated Duration Management should reject negative duration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056904,"status":"passed","title":"should reject negative duration"},{"ancestorTitles":["ActionNode","Estimated Duration Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Estimated Duration Management should allow very small positive duration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056904,"status":"passed","title":"should allow very small positive duration"},{"ancestorTitles":["ActionNode","Status Transitions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Status Transitions should update status successfully with valid transition","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056905,"status":"passed","title":"should update status successfully with valid transition"},{"ancestorTitles":["ActionNode","Status Transitions","from DRAFT status"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Status Transitions from DRAFT status should allow transition to ACTIVE","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056906,"status":"passed","title":"should allow transition to ACTIVE"},{"ancestorTitles":["ActionNode","Status Transitions","from DRAFT status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Status Transitions from DRAFT status should allow transition to ARCHIVED","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056906,"status":"passed","title":"should allow transition to ARCHIVED"},{"ancestorTitles":["ActionNode","Status Transitions","from DRAFT status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Status Transitions from DRAFT status should reject invalid transitions","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056907,"status":"passed","title":"should reject invalid transitions"},{"ancestorTitles":["ActionNode","Status Transitions","from ACTIVE status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Status Transitions from ACTIVE status should allow valid transitions","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056908,"status":"passed","title":"should allow valid transitions"},{"ancestorTitles":["ActionNode","Status Transitions","from ACTIVE status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Status Transitions from ACTIVE status should reject invalid transitions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056909,"status":"passed","title":"should reject invalid transitions"},{"ancestorTitles":["ActionNode","Status Transitions","from EXECUTING status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Status Transitions from EXECUTING status should allow valid transitions","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056910,"status":"passed","title":"should allow valid transitions"},{"ancestorTitles":["ActionNode","Status Transitions","from ARCHIVED status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Status Transitions from ARCHIVED status should reject all transitions from archived","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"startAt":1756394056911,"status":"passed","title":"should reject all transitions from archived"},{"ancestorTitles":["ActionNode","Retry Policy Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Retry Policy Management should update retry policy successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056912,"status":"passed","title":"should update retry policy successfully"},{"ancestorTitles":["ActionNode","RACI Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode RACI Management should update RACI successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056913,"status":"passed","title":"should update RACI successfully"},{"ancestorTitles":["ActionNode","Metadata Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Metadata Management should update metadata successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056913,"status":"passed","title":"should update metadata successfully"},{"ancestorTitles":["ActionNode","Metadata Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Metadata Management should create defensive copy of metadata","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056914,"status":"passed","title":"should create defensive copy of metadata"},{"ancestorTitles":["ActionNode","Metadata Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Metadata Management should handle empty metadata","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056915,"status":"passed","title":"should handle empty metadata"},{"ancestorTitles":["ActionNode","Metadata Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Metadata Management should handle complex metadata objects","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056915,"status":"passed","title":"should handle complex metadata objects"},{"ancestorTitles":["ActionNode","Equality and Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Equality and Comparison should be equal when action IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056916,"status":"passed","title":"should be equal when action IDs match"},{"ancestorTitles":["ActionNode","Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Equality and Comparison should not be equal when action IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056917,"status":"passed","title":"should not be equal when action IDs differ"},{"ancestorTitles":["ActionNode","Timestamp Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Timestamp Management should update timestamp on any property change","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394056917,"status":"passed","title":"should update timestamp on any property change"},{"ancestorTitles":["ActionNode","Timestamp Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Timestamp Management should preserve creation timestamp","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056918,"status":"passed","title":"should preserve creation timestamp"},{"ancestorTitles":["ActionNode","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Business Logic Integration should maintain consistency during complex operations","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056918,"status":"passed","title":"should maintain consistency during complex operations"},{"ancestorTitles":["ActionNode","Business Logic Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ActionNode Business Logic Integration should handle error scenarios gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056919,"status":"passed","title":"should handle error scenarios gracefully"}],"endTime":1756394056921,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\action-node.test.ts","startTime":1756394056659,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Creation - Data Pattern"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Creation - Data Pattern should create ModelArchived event with complete data object","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056942,"status":"passed","title":"should create ModelArchived event with complete data object"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Creation - Data Pattern"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Creation - Data Pattern should create ModelArchived event with minimal required data","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056944,"status":"passed","title":"should create ModelArchived event with minimal required data"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Creation - Individual Parameters Pattern"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Creation - Individual Parameters Pattern should create ModelArchived event with individual parameters","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056945,"status":"passed","title":"should create ModelArchived event with individual parameters"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Creation - Individual Parameters Pattern"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Creation - Individual Parameters Pattern should create ModelArchived event without optional reason","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056950,"status":"passed","title":"should create ModelArchived event without optional reason"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Creation - Individual Parameters Pattern"],"duration":26,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Creation - Individual Parameters Pattern should fail to create event with missing required parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056951,"status":"passed","title":"should fail to create event with missing required parameters"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Creation - Individual Parameters Pattern"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Creation - Individual Parameters Pattern should fail to create event with undefined previousStatus","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056977,"status":"passed","title":"should fail to create event with undefined previousStatus"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Name and Type"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Name and Type should return correct event name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056978,"status":"passed","title":"should return correct event name"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Name and Type"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Name and Type should be properly typed as domain event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056979,"status":"passed","title":"should be properly typed as domain event"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Serialization - Audit Trail Requirements"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Serialization - Audit Trail Requirements should serialize event data with all audit fields","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394056979,"status":"passed","title":"should serialize event data with all audit fields"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Event Serialization - Audit Trail Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Event Serialization - Audit Trail Requirements should handle serialization of event without optional reason","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056981,"status":"passed","title":"should handle serialization of event without optional reason"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Archive Event - State Transition Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Archive Event - State Transition Validation should capture valid DRAFT to ARCHIVED transition","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056981,"status":"passed","title":"should capture valid DRAFT to ARCHIVED transition"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Archive Event - State Transition Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Archive Event - State Transition Validation should capture valid PUBLISHED to ARCHIVED transition","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056982,"status":"passed","title":"should capture valid PUBLISHED to ARCHIVED transition"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Archive Event - State Transition Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Archive Event - State Transition Validation should always set currentStatus to ARCHIVED regardless of constructor pattern","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056983,"status":"passed","title":"should always set currentStatus to ARCHIVED regardless of constructor pattern"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Archive Event - Timestamp Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Archive Event - Timestamp Handling should use provided archivedAt timestamp in data pattern","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056983,"status":"passed","title":"should use provided archivedAt timestamp in data pattern"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Archive Event - Timestamp Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Archive Event - Timestamp Handling should generate current timestamp in individual parameters pattern","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056984,"status":"passed","title":"should generate current timestamp in individual parameters pattern"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Archive Event - Compliance and Regulatory Requirements"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Archive Event - Compliance and Regulatory Requirements should capture all required audit information for compliance","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056984,"status":"passed","title":"should capture all required audit information for compliance"},{"ancestorTitles":["ModelArchived Event - Archive Audit Trail","Archive Event - Compliance and Regulatory Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelArchived Event - Archive Audit Trail Archive Event - Compliance and Regulatory Requirements should support traceability through serialized audit trail","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056986,"status":"passed","title":"should support traceability through serialized audit trail"}],"endTime":1756394056987,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\events\\model-archive-events.test.ts","startTime":1756394056733,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Semantic Version Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Semantic Version Management createVersion_MajorIncrement_ResetsMinorAndPatch","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056969,"status":"passed","title":"createVersion_MajorIncrement_ResetsMinorAndPatch"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Semantic Version Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Semantic Version Management createVersion_MinorIncrement_ResetsPatch","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056971,"status":"passed","title":"createVersion_MinorIncrement_ResetsPatch"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Semantic Version Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Semantic Version Management createVersion_PatchIncrement_MaintainsVersioning","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056973,"status":"passed","title":"createVersion_PatchIncrement_MaintainsVersioning"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Semantic Version Management"],"duration":20,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Semantic Version Management createVersion_FromPrerelease_HandlesCorrectly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056974,"status":"passed","title":"createVersion_FromPrerelease_HandlesCorrectly"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Semantic Version Management"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Semantic Version Management compareVersions_ComplexScenarios_OrdersCorrectly","invocations":1,"location":null,"numPassingAsserts":24,"retryReasons":[],"startAt":1756394056994,"status":"passed","title":"compareVersions_ComplexScenarios_OrdersCorrectly"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Version Validation and Business Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Version Validation and Business Rules validateVersionProgression_SkippedVersions_RejectedProperly","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394056999,"status":"passed","title":"validateVersionProgression_SkippedVersions_RejectedProperly"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Version Validation and Business Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Version Validation and Business Rules createVersion_PublishedModelWithValidation_EnforcesBusinessRules","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057001,"status":"passed","title":"createVersion_PublishedModelWithValidation_EnforcesBusinessRules"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Version Validation and Business Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Version Validation and Business Rules createVersion_DraftModel_AllowsVersionCreation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057002,"status":"passed","title":"createVersion_DraftModel_AllowsVersionCreation"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: State Capture and Model Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: State Capture and Model Comparison captureModelSnapshot_SimpleModel_PreservesState","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057003,"status":"passed","title":"captureModelSnapshot_SimpleModel_PreservesState"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: State Capture and Model Comparison"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: State Capture and Model Comparison compareModels_DetectsDifferences_AnalyzesCorrectly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057003,"status":"passed","title":"compareModels_DetectsDifferences_AnalyzesCorrectly"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Clean Architecture Compliance versioningService_DomainLogic_NoInfrastructureDependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057005,"status":"passed","title":"versioningService_DomainLogic_NoInfrastructureDependencies"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Clean Architecture Compliance serviceInterface_AllMethods_WorkIndependently","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057006,"status":"passed","title":"serviceInterface_AllMethods_WorkIndependently"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Clean Architecture Compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Clean Architecture Compliance errorHandling_BusinessExceptions_HandledInDomain","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057007,"status":"passed","title":"errorHandling_BusinessExceptions_HandledInDomain"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Version Integrity and Business Workflows"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Version Integrity and Business Workflows versionSequence_MultipleVersions_MaintainsProgression","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394057008,"status":"passed","title":"versionSequence_MultipleVersions_MaintainsProgression"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Version Integrity and Business Workflows"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Version Integrity and Business Workflows integrationWithFunctionModel_VersionCreation_WorksTogether","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057009,"status":"passed","title":"integrationWithFunctionModel_VersionCreation_WorksTogether"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Version Integrity and Business Workflows"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Version Integrity and Business Workflows businessScenarios_RealWorldVersioning_HandlesCorrectly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057010,"status":"passed","title":"businessScenarios_RealWorldVersioning_HandlesCorrectly"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Error Handling and Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Error Handling and Edge Cases createVersion_InvalidInputs_HandlesGracefully","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057011,"status":"passed","title":"createVersion_InvalidInputs_HandlesGracefully"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Error Handling and Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Error Handling and Edge Cases compareModels_EdgeCases_HandlesRobustly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057013,"status":"passed","title":"compareModels_EdgeCases_HandlesRobustly"},{"ancestorTitles":["UC-007: Create Model Version - Simplified","UC-007 Requirement: Error Handling and Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"UC-007: Create Model Version - Simplified UC-007 Requirement: Error Handling and Edge Cases versionHistory_EmptyRepository_ReturnsStructure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057014,"status":"passed","title":"versionHistory_EmptyRepository_ReturnsStructure"}],"endTime":1756394057017,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\use-cases\\uc-007-create-model-version-simplified.test.ts","startTime":1756394056732,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Domain Events Test Suite","Base Domain Event"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Base Domain Event should create event with required properties","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057000,"status":"passed","title":"should create event with required properties"},{"ancestorTitles":["Domain Events Test Suite","Base Domain Event"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Base Domain Event should generate unique event IDs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057002,"status":"passed","title":"should generate unique event IDs"},{"ancestorTitles":["Domain Events Test Suite","Base Domain Event"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Base Domain Event should support custom event versions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057003,"status":"passed","title":"should support custom event versions"},{"ancestorTitles":["Domain Events Test Suite","Base Domain Event"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Base Domain Event should serialize to object correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057004,"status":"passed","title":"should serialize to object correctly"},{"ancestorTitles":["Domain Events Test Suite","Base Domain Event"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Base Domain Event should implement equality correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057004,"status":"passed","title":"should implement equality correctly"},{"ancestorTitles":["Domain Events Test Suite","Model Events","ModelCreated"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events ModelCreated should create model created event with correct data","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057005,"status":"passed","title":"should create model created event with correct data"},{"ancestorTitles":["Domain Events Test Suite","Model Events","ModelCreated"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events ModelCreated should serialize correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057007,"status":"passed","title":"should serialize correctly"},{"ancestorTitles":["Domain Events Test Suite","Model Events","ModelUpdated"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events ModelUpdated should create model updated event with changes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057008,"status":"passed","title":"should create model updated event with changes"},{"ancestorTitles":["Domain Events Test Suite","Model Events","ModelPublished"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events ModelPublished should create model published event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057009,"status":"passed","title":"should create model published event"},{"ancestorTitles":["Domain Events Test Suite","Model Events","ModelArchived"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events ModelArchived should create model archived event with reason","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057010,"status":"passed","title":"should create model archived event with reason"},{"ancestorTitles":["Domain Events Test Suite","Model Events","ModelArchived"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events ModelArchived should create model archived event without reason","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057011,"status":"passed","title":"should create model archived event without reason"},{"ancestorTitles":["Domain Events Test Suite","Model Events","ModelDeleted"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events ModelDeleted should create model deleted event for soft delete","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057012,"status":"passed","title":"should create model deleted event for soft delete"},{"ancestorTitles":["Domain Events Test Suite","Model Events","ModelDeleted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events ModelDeleted should create model deleted event for hard delete","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057012,"status":"passed","title":"should create model deleted event for hard delete"},{"ancestorTitles":["Domain Events Test Suite","Model Events","ModelDeleted"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events ModelDeleted should default to soft delete","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057013,"status":"passed","title":"should default to soft delete"},{"ancestorTitles":["Domain Events Test Suite","Model Events","VersionCreated"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Model Events VersionCreated should create version created event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057013,"status":"passed","title":"should create version created event"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodeAdded"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodeAdded should create action node added event","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057014,"status":"passed","title":"should create action node added event"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodeExecutionStarted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodeExecutionStarted should create action execution started event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057015,"status":"passed","title":"should create action execution started event"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodeExecutionCompleted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodeExecutionCompleted should create action execution completed event with output","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057016,"status":"passed","title":"should create action execution completed event with output"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodeExecutionCompleted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodeExecutionCompleted should create action execution completed event without output","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057017,"status":"passed","title":"should create action execution completed event without output"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodeExecutionFailed"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodeExecutionFailed should create action execution failed event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057018,"status":"passed","title":"should create action execution failed event"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodeStatusChanged"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodeStatusChanged should create action status changed event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057018,"status":"passed","title":"should create action status changed event"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodeExecutionOrderChanged"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodeExecutionOrderChanged should create execution order changed event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057019,"status":"passed","title":"should create execution order changed event"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodeExecutionModeChanged"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodeExecutionModeChanged should create execution mode changed event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057024,"status":"passed","title":"should create execution mode changed event"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodePriorityChanged"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodePriorityChanged should create priority changed event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057025,"status":"passed","title":"should create priority changed event"},{"ancestorTitles":["Domain Events Test Suite","Action Node Events","ActionNodeRetryPolicyUpdated"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Action Node Events ActionNodeRetryPolicyUpdated should create retry policy updated event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057025,"status":"passed","title":"should create retry policy updated event"},{"ancestorTitles":["Domain Events Test Suite","Node Link Events","NodeLinkCreated"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Node Link Events NodeLinkCreated should create node link created event","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057026,"status":"passed","title":"should create node link created event"},{"ancestorTitles":["Domain Events Test Suite","Node Link Events","NodeLinkRemoved"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Node Link Events NodeLinkRemoved should create node link removed event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057027,"status":"passed","title":"should create node link removed event"},{"ancestorTitles":["Domain Events Test Suite","Node Link Events","CrossFeatureLinkEstablished"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Node Link Events CrossFeatureLinkEstablished should create cross feature link established event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057028,"status":"passed","title":"should create cross feature link established event"},{"ancestorTitles":["Domain Events Test Suite","Node Link Events","CrossFeatureLinkBroken"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Node Link Events CrossFeatureLinkBroken should create cross feature link broken event with reason","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057029,"status":"passed","title":"should create cross feature link broken event with reason"},{"ancestorTitles":["Domain Events Test Suite","Node Link Events","CrossFeatureLinkBroken"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Node Link Events CrossFeatureLinkBroken should create cross feature link broken event without reason","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057030,"status":"passed","title":"should create cross feature link broken event without reason"},{"ancestorTitles":["Domain Events Test Suite","AI Agent Events","AIAgentConfigured"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite AI Agent Events AIAgentConfigured should create AI agent configured event with node ID","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057030,"status":"passed","title":"should create AI agent configured event with node ID"},{"ancestorTitles":["Domain Events Test Suite","AI Agent Events","AIAgentConfigured"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite AI Agent Events AIAgentConfigured should create AI agent configured event without optional fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057031,"status":"passed","title":"should create AI agent configured event without optional fields"},{"ancestorTitles":["Domain Events Test Suite","AI Agent Events","AIAgentExecutionStarted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite AI Agent Events AIAgentExecutionStarted should create AI agent execution started event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057032,"status":"passed","title":"should create AI agent execution started event"},{"ancestorTitles":["Domain Events Test Suite","AI Agent Events","AIAgentTaskCompleted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite AI Agent Events AIAgentTaskCompleted should create AI agent task completed event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057033,"status":"passed","title":"should create AI agent task completed event"},{"ancestorTitles":["Domain Events Test Suite","AI Agent Events","AIAgentTaskFailed"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite AI Agent Events AIAgentTaskFailed should create AI agent task failed event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057034,"status":"passed","title":"should create AI agent task failed event"},{"ancestorTitles":["Domain Events Test Suite","AI Agent Events","AIAgentConfigurationUpdated"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite AI Agent Events AIAgentConfigurationUpdated should create AI agent configuration updated event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057035,"status":"passed","title":"should create AI agent configuration updated event"},{"ancestorTitles":["Domain Events Test Suite","Version Events","FunctionModelVersionCreated"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Version Events FunctionModelVersionCreated should create function model version created event","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057036,"status":"passed","title":"should create function model version created event"},{"ancestorTitles":["Domain Events Test Suite","Orchestration Events","ContainerNodeOrchestrationStarted"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Orchestration Events ContainerNodeOrchestrationStarted should create container orchestration started event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057037,"status":"passed","title":"should create container orchestration started event"},{"ancestorTitles":["Domain Events Test Suite","Orchestration Events","ContainerNodeOrchestrationCompleted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Orchestration Events ContainerNodeOrchestrationCompleted should create container orchestration completed event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057037,"status":"passed","title":"should create container orchestration completed event"},{"ancestorTitles":["Domain Events Test Suite","Orchestration Events","FractalOrchestrationLevelChanged"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Orchestration Events FractalOrchestrationLevelChanged should create fractal orchestration level changed event","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057038,"status":"passed","title":"should create fractal orchestration level changed event"},{"ancestorTitles":["Domain Events Test Suite","Execution Events","ExecutionStarted"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Execution Events ExecutionStarted should create execution started event","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057039,"status":"passed","title":"should create execution started event"},{"ancestorTitles":["Domain Events Test Suite","Execution Events","NodeExecuted"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Execution Events NodeExecuted should create node executed event with success","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057039,"status":"passed","title":"should create node executed event with success"},{"ancestorTitles":["Domain Events Test Suite","Execution Events","NodeExecuted"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Execution Events NodeExecuted should create node executed event with failure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057040,"status":"passed","title":"should create node executed event with failure"},{"ancestorTitles":["Domain Events Test Suite","Event Business Context Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Business Context Validation should validate that all events have consistent timestamp ordering","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394057040,"status":"passed","title":"should validate that all events have consistent timestamp ordering"},{"ancestorTitles":["Domain Events Test Suite","Event Business Context Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Business Context Validation should validate model lifecycle event sequence business rules","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057041,"status":"passed","title":"should validate model lifecycle event sequence business rules"},{"ancestorTitles":["Domain Events Test Suite","Event Business Context Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Business Context Validation should validate action node execution context consistency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057042,"status":"passed","title":"should validate action node execution context consistency"},{"ancestorTitles":["Domain Events Test Suite","Event Business Context Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Business Context Validation should validate cross-feature link relationship consistency","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057042,"status":"passed","title":"should validate cross-feature link relationship consistency"},{"ancestorTitles":["Domain Events Test Suite","Event Business Context Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Business Context Validation should validate AI agent task execution flow","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057043,"status":"passed","title":"should validate AI agent task execution flow"},{"ancestorTitles":["Domain Events Test Suite","Event Business Context Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Business Context Validation should validate orchestration event completeness","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057044,"status":"passed","title":"should validate orchestration event completeness"},{"ancestorTitles":["Domain Events Test Suite","Event Data Validation and Serialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Data Validation and Serialization should serialize complex event data correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057044,"status":"passed","title":"should serialize complex event data correctly"},{"ancestorTitles":["Domain Events Test Suite","Event Data Validation and Serialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Data Validation and Serialization should handle undefined optional fields in serialization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057046,"status":"passed","title":"should handle undefined optional fields in serialization"},{"ancestorTitles":["Domain Events Test Suite","Event Data Validation and Serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Data Validation and Serialization should validate event data immutability","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057046,"status":"passed","title":"should validate event data immutability"},{"ancestorTitles":["Domain Events Test Suite","Event Data Validation and Serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Data Validation and Serialization should validate retry policy event data integrity","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057047,"status":"passed","title":"should validate retry policy event data integrity"},{"ancestorTitles":["Domain Events Test Suite","Event Version Compatibility"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Version Compatibility should support event versioning for backward compatibility","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057048,"status":"passed","title":"should support event versioning for backward compatibility"},{"ancestorTitles":["Domain Events Test Suite","Event Version Compatibility"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Events Test Suite Event Version Compatibility should handle event schema evolution gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057049,"status":"passed","title":"should handle event schema evolution gracefully"}],"endTime":1756394057051,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\events\\domain-events.test.ts","startTime":1756394056769,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","success scenarios"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions success scenarios should_CreateExecutionPlanAndStartOrchestration_WhenValidCommandProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057037,"status":"passed","title":"should_CreateExecutionPlanAndStartOrchestration_WhenValidCommandProvided"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","success scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions success scenarios should_ExecuteSequentialActions_WhenOnlySequentialModeProvided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057042,"status":"passed","title":"should_ExecuteSequentialActions_WhenOnlySequentialModeProvided"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","success scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions success scenarios should_ExecuteParallelActions_WhenOnlyParallelModeProvided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057045,"status":"passed","title":"should_ExecuteParallelActions_WhenOnlyParallelModeProvided"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","success scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions success scenarios should_ExecuteConditionalActions_WhenConditionalModeProvided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057046,"status":"passed","title":"should_ExecuteConditionalActions_WhenConditionalModeProvided"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","success scenarios"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions success scenarios should_HandleMixedExecutionModes_WhenMultipleModesProvided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057048,"status":"passed","title":"should_HandleMixedExecutionModes_WhenMultipleModesProvided"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","progress monitoring"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions progress monitoring should_TrackProgressThroughoutExecution_WhenOrchestrationRunning","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057053,"status":"passed","title":"should_TrackProgressThroughoutExecution_WhenOrchestrationRunning"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","progress monitoring"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions progress monitoring should_ProvideDetailedExecutionMetrics_WhenMonitoringProgress","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057055,"status":"passed","title":"should_ProvideDetailedExecutionMetrics_WhenMonitoringProgress"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","failure handling"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions failure handling should_RetryFailedActions_WhenRetryPolicyAllows","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057057,"status":"passed","title":"should_RetryFailedActions_WhenRetryPolicyAllows"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","failure handling"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions failure handling should_AbortOrchestration_WhenFailureHandlingSetToAbort","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057059,"status":"passed","title":"should_AbortOrchestration_WhenFailureHandlingSetToAbort"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","failure handling"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions failure handling should_ContinueWithRemainingActions_WhenFailureHandlingSetToContinue","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057061,"status":"passed","title":"should_ContinueWithRemainingActions_WhenFailureHandlingSetToContinue"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","context propagation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions context propagation should_PropagateContextBetweenActions_WhenContextPropagationEnabled","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057063,"status":"passed","title":"should_PropagateContextBetweenActions_WhenContextPropagationEnabled"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","context propagation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions context propagation should_IsolateContextBetweenActions_WhenContextPropagationDisabled","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057064,"status":"passed","title":"should_IsolateContextBetweenActions_WhenContextPropagationDisabled"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","priority-based execution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions priority-based execution should_GroupActionsByPriority_WhenPriorityGroupingEnabled","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057066,"status":"passed","title":"should_GroupActionsByPriority_WhenPriorityGroupingEnabled"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","error handling"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions error handling should_ReturnFailure_WhenInvalidContainerIdProvided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057067,"status":"passed","title":"should_ReturnFailure_WhenInvalidContainerIdProvided"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","error handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions error handling should_ReturnFailure_WhenActionNodesBelongToDifferentContainers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057069,"status":"passed","title":"should_ReturnFailure_WhenActionNodesBelongToDifferentContainers"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","error handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions error handling should_HandleOrchestrationServiceFailure_WhenServiceThrowsException","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057071,"status":"passed","title":"should_HandleOrchestrationServiceFailure_WhenServiceThrowsException"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","orchestrateActions","execution duration estimation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase orchestrateActions execution duration estimation should_ProvideAccurateDurationEstimate_WhenCreatingExecutionPlan","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057072,"status":"passed","title":"should_ProvideAccurateDurationEstimate_WhenCreatingExecutionPlan"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","pauseOrchestration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase pauseOrchestration should_PauseRunningOrchestration_WhenValidIdProvided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057074,"status":"passed","title":"should_PauseRunningOrchestration_WhenValidIdProvided"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","pauseOrchestration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase pauseOrchestration should_ReturnFailure_WhenOrchestrationNotFound","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057075,"status":"passed","title":"should_ReturnFailure_WhenOrchestrationNotFound"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","resumeOrchestration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase resumeOrchestration should_ResumeePausedOrchestration_WhenValidIdProvided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057076,"status":"passed","title":"should_ResumeePausedOrchestration_WhenValidIdProvided"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","resumeOrchestration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase resumeOrchestration should_ReturnFailure_WhenCannotResumePausedOrchestration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057077,"status":"passed","title":"should_ReturnFailure_WhenCannotResumePausedOrchestration"},{"ancestorTitles":["ManageActionNodeOrchestrationUseCase","getOrchestrationStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageActionNodeOrchestrationUseCase getOrchestrationStatus should_ReturnCurrentStatus_WhenValidIdProvided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057078,"status":"passed","title":"should_ReturnCurrentStatus_WhenValidIdProvided"}],"endTime":1756394057081,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\manage-action-node-orchestration-use-case.test.ts","startTime":1756394056812,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_FollowCleanArchitecturePatterns_WhenImplementingUseCases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057097,"status":"passed","title":"should_FollowCleanArchitecturePatterns_WhenImplementingUseCases"},{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_FollowDependencyInversion_WhenInjectingDependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057101,"status":"passed","title":"should_FollowDependencyInversion_WhenInjectingDependencies"},{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_CoordinateDomainEntities_WithoutContainingBusinessLogic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057101,"status":"passed","title":"should_CoordinateDomainEntities_WithoutContainingBusinessLogic"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_MockAllDependencies_InUnitTests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057102,"status":"passed","title":"should_MockAllDependencies_InUnitTests"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_TestBothSuccessAndFailureScenarios_ForEachUseCase","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057102,"status":"passed","title":"should_TestBothSuccessAndFailureScenarios_ForEachUseCase"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_VerifyArchitecturalBoundaries_InEachTest","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057102,"status":"passed","title":"should_VerifyArchitecturalBoundaries_InEachTest"},{"ancestorTitles":["ApplicationLayerBasePattern","Naming Conventions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Naming Conventions should_UseDescriptiveTestNames_FollowingPattern","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057103,"status":"passed","title":"should_UseDescriptiveTestNames_FollowingPattern"},{"ancestorTitles":["ApplicationLayerBasePattern","Naming Conventions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Naming Conventions should_OrganizeTestsByBehavior_NotByImplementation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057103,"status":"passed","title":"should_OrganizeTestsByBehavior_NotByImplementation"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","success scenarios"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute success scenarios should_CreateFunctionModel_WhenValidCommandProvided","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057103,"status":"passed","title":"should_CreateFunctionModel_WhenValidCommandProvided"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","success scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute success scenarios should_SaveModelThroughRepository_WhenCreationSucceeds","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057106,"status":"passed","title":"should_SaveModelThroughRepository_WhenCreationSucceeds"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","success scenarios"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute success scenarios should_PublishFunctionModelCreatedEvent_WhenCreationSucceeds","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057107,"status":"passed","title":"should_PublishFunctionModelCreatedEvent_WhenCreationSucceeds"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","success scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute success scenarios should_CreateModelWithCorrectMetadata_WhenTemplateAndOrgProvided","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057110,"status":"passed","title":"should_CreateModelWithCorrectMetadata_WhenTemplateAndOrgProvided"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","success scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute success scenarios should_CreateModelWithCorrectPermissions_WhenUserProvided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057111,"status":"passed","title":"should_CreateModelWithCorrectPermissions_WhenUserProvided"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute validation failure scenarios should_ReturnValidationError_WhenModelNameIsEmpty","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057112,"status":"passed","title":"should_ReturnValidationError_WhenModelNameIsEmpty"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute validation failure scenarios should_ReturnValidationError_WhenUserIdIsMissing","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057113,"status":"passed","title":"should_ReturnValidationError_WhenUserIdIsMissing"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute validation failure scenarios should_ReturnValidationError_WhenDescriptionTooLong","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057114,"status":"passed","title":"should_ReturnValidationError_WhenDescriptionTooLong"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute validation failure scenarios should_ReturnValidationError_WhenTemplateIdIsEmpty","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057115,"status":"passed","title":"should_ReturnValidationError_WhenTemplateIdIsEmpty"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","domain failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute domain failure scenarios should_ReturnDomainError_WhenModelNameCreationFails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057116,"status":"passed","title":"should_ReturnDomainError_WhenModelNameCreationFails"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","domain failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute domain failure scenarios should_ReturnConflictError_WhenModelWithSameNameExists","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057117,"status":"passed","title":"should_ReturnConflictError_WhenModelWithSameNameExists"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","infrastructure failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute infrastructure failure scenarios should_ReturnRepositoryError_WhenSaveFails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057118,"status":"passed","title":"should_ReturnRepositoryError_WhenSaveFails"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","infrastructure failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute infrastructure failure scenarios should_CompleteSuccessfully_WhenEventPublishingFails","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057119,"status":"passed","title":"should_CompleteSuccessfully_WhenEventPublishingFails"},{"ancestorTitles":["CreateFunctionModelUseCase","execute","infrastructure failure scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase execute infrastructure failure scenarios should_HandleRepositoryExceptions_Gracefully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057120,"status":"passed","title":"should_HandleRepositoryExceptions_Gracefully"},{"ancestorTitles":["CreateFunctionModelUseCase","architectural compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase architectural compliance should_OnlyDependOnDomainInterfaces_NeverConcreteImplementations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057122,"status":"passed","title":"should_OnlyDependOnDomainInterfaces_NeverConcreteImplementations"},{"ancestorTitles":["CreateFunctionModelUseCase","architectural compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase architectural compliance should_CoordinateDomainEntities_WithoutContainingBusinessLogic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057123,"status":"passed","title":"should_CoordinateDomainEntities_WithoutContainingBusinessLogic"},{"ancestorTitles":["CreateFunctionModelUseCase","architectural compliance"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase architectural compliance should_ReturnResultPattern_ConsistentlyForAllOperations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057123,"status":"passed","title":"should_ReturnResultPattern_ConsistentlyForAllOperations"},{"ancestorTitles":["CreateFunctionModelUseCase","architectural compliance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase architectural compliance should_NotLeakDomainEntities_InResponseObjects","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057126,"status":"passed","title":"should_NotLeakDomainEntities_InResponseObjects"},{"ancestorTitles":["CreateFunctionModelUseCase","edge cases"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase edge cases should_HandleNullDescription_Gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057128,"status":"passed","title":"should_HandleNullDescription_Gracefully"},{"ancestorTitles":["CreateFunctionModelUseCase","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase edge cases should_TrimWhitespaceFromDescription_WhenProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057132,"status":"passed","title":"should_TrimWhitespaceFromDescription_WhenProvided"},{"ancestorTitles":["CreateFunctionModelUseCase","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CreateFunctionModelUseCase edge cases should_GenerateUniqueModelIds_ForConcurrentRequests","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057133,"status":"passed","title":"should_GenerateUniqueModelIds_ForConcurrentRequests"}],"endTime":1756394057135,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\create-function-model-use-case.test.ts","startTime":1756394056860,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_FollowCleanArchitecturePatterns_WhenImplementingUseCases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057102,"status":"passed","title":"should_FollowCleanArchitecturePatterns_WhenImplementingUseCases"},{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_FollowDependencyInversion_WhenInjectingDependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057103,"status":"passed","title":"should_FollowDependencyInversion_WhenInjectingDependencies"},{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_CoordinateDomainEntities_WithoutContainingBusinessLogic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057103,"status":"passed","title":"should_CoordinateDomainEntities_WithoutContainingBusinessLogic"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_MockAllDependencies_InUnitTests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057103,"status":"passed","title":"should_MockAllDependencies_InUnitTests"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_TestBothSuccessAndFailureScenarios_ForEachUseCase","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057104,"status":"passed","title":"should_TestBothSuccessAndFailureScenarios_ForEachUseCase"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_VerifyArchitecturalBoundaries_InEachTest","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057104,"status":"passed","title":"should_VerifyArchitecturalBoundaries_InEachTest"},{"ancestorTitles":["ApplicationLayerBasePattern","Naming Conventions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Naming Conventions should_UseDescriptiveTestNames_FollowingPattern","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057104,"status":"passed","title":"should_UseDescriptiveTestNames_FollowingPattern"},{"ancestorTitles":["ApplicationLayerBasePattern","Naming Conventions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Naming Conventions should_OrganizeTestsByBehavior_NotByImplementation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057104,"status":"passed","title":"should_OrganizeTestsByBehavior_NotByImplementation"},{"ancestorTitles":["AddContainerNodeUseCase","execute","success scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute success scenarios should_AddIOContainerNode_WhenValidCommandProvided","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057105,"status":"passed","title":"should_AddIOContainerNode_WhenValidCommandProvided"},{"ancestorTitles":["AddContainerNodeUseCase","execute","success scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute success scenarios should_AddStageContainerNode_WhenValidCommandProvided","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057107,"status":"passed","title":"should_AddStageContainerNode_WhenValidCommandProvided"},{"ancestorTitles":["AddContainerNodeUseCase","execute","success scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute success scenarios should_SaveModelWithNewNode_WhenNodeAdditionSucceeds","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057109,"status":"passed","title":"should_SaveModelWithNewNode_WhenNodeAdditionSucceeds"},{"ancestorTitles":["AddContainerNodeUseCase","execute","success scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute success scenarios should_PublishContainerNodeAddedEvent_WhenNodeAdditionSucceeds","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057110,"status":"passed","title":"should_PublishContainerNodeAddedEvent_WhenNodeAdditionSucceeds"},{"ancestorTitles":["AddContainerNodeUseCase","execute","success scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute success scenarios should_AddNodeToCorrectPosition_WhenPositionSpecified","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057111,"status":"passed","title":"should_AddNodeToCorrectPosition_WhenPositionSpecified"},{"ancestorTitles":["AddContainerNodeUseCase","execute","success scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute success scenarios should_HandleOptionalDescription_WhenProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057112,"status":"passed","title":"should_HandleOptionalDescription_WhenProvided"},{"ancestorTitles":["AddContainerNodeUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute validation failure scenarios should_ReturnValidationError_WhenModelIdIsEmpty","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057113,"status":"passed","title":"should_ReturnValidationError_WhenModelIdIsEmpty"},{"ancestorTitles":["AddContainerNodeUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute validation failure scenarios should_ReturnValidationError_WhenNodeNameIsEmpty","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057114,"status":"passed","title":"should_ReturnValidationError_WhenNodeNameIsEmpty"},{"ancestorTitles":["AddContainerNodeUseCase","execute","validation failure scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute validation failure scenarios should_ReturnValidationError_WhenUserIdIsEmpty","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057115,"status":"passed","title":"should_ReturnValidationError_WhenUserIdIsEmpty"},{"ancestorTitles":["AddContainerNodeUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute validation failure scenarios should_ReturnValidationError_WhenNodeTypeIsInvalid","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057117,"status":"passed","title":"should_ReturnValidationError_WhenNodeTypeIsInvalid"},{"ancestorTitles":["AddContainerNodeUseCase","execute","validation failure scenarios"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute validation failure scenarios should_ReturnValidationError_WhenPositionIsInvalid","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057118,"status":"passed","title":"should_ReturnValidationError_WhenPositionIsInvalid"},{"ancestorTitles":["AddContainerNodeUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute validation failure scenarios should_ReturnValidationError_WhenDescriptionTooLong","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057123,"status":"passed","title":"should_ReturnValidationError_WhenDescriptionTooLong"},{"ancestorTitles":["AddContainerNodeUseCase","execute","domain failure scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute domain failure scenarios should_ReturnNotFoundError_WhenModelDoesNotExist","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057125,"status":"passed","title":"should_ReturnNotFoundError_WhenModelDoesNotExist"},{"ancestorTitles":["AddContainerNodeUseCase","execute","domain failure scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute domain failure scenarios should_ReturnDomainError_WhenNodeCreationFails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057126,"status":"passed","title":"should_ReturnDomainError_WhenNodeCreationFails"},{"ancestorTitles":["AddContainerNodeUseCase","execute","domain failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute domain failure scenarios should_ReturnDomainError_WhenPositionValidationFails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057126,"status":"passed","title":"should_ReturnDomainError_WhenPositionValidationFails"},{"ancestorTitles":["AddContainerNodeUseCase","execute","domain failure scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute domain failure scenarios should_ReturnBusinessRuleError_WhenAddNodeToModelFails","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057127,"status":"passed","title":"should_ReturnBusinessRuleError_WhenAddNodeToModelFails"},{"ancestorTitles":["AddContainerNodeUseCase","execute","infrastructure failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute infrastructure failure scenarios should_ReturnRepositoryError_WhenModelRetrievalFails","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057129,"status":"passed","title":"should_ReturnRepositoryError_WhenModelRetrievalFails"},{"ancestorTitles":["AddContainerNodeUseCase","execute","infrastructure failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute infrastructure failure scenarios should_ReturnRepositoryError_WhenSaveFails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057130,"status":"passed","title":"should_ReturnRepositoryError_WhenSaveFails"},{"ancestorTitles":["AddContainerNodeUseCase","execute","infrastructure failure scenarios"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute infrastructure failure scenarios should_CompleteSuccessfully_WhenEventPublishingFails","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057131,"status":"passed","title":"should_CompleteSuccessfully_WhenEventPublishingFails"},{"ancestorTitles":["AddContainerNodeUseCase","execute","infrastructure failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase execute infrastructure failure scenarios should_HandleRepositoryExceptions_Gracefully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057133,"status":"passed","title":"should_HandleRepositoryExceptions_Gracefully"},{"ancestorTitles":["AddContainerNodeUseCase","architectural compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase architectural compliance should_OnlyDependOnDomainInterfaces_NeverConcreteImplementations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057134,"status":"passed","title":"should_OnlyDependOnDomainInterfaces_NeverConcreteImplementations"},{"ancestorTitles":["AddContainerNodeUseCase","architectural compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase architectural compliance should_CoordinateDomainEntities_WithoutContainingBusinessLogic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057135,"status":"passed","title":"should_CoordinateDomainEntities_WithoutContainingBusinessLogic"},{"ancestorTitles":["AddContainerNodeUseCase","architectural compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase architectural compliance should_ReturnResultPattern_ConsistentlyForAllOperations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057135,"status":"passed","title":"should_ReturnResultPattern_ConsistentlyForAllOperations"},{"ancestorTitles":["AddContainerNodeUseCase","architectural compliance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase architectural compliance should_NotLeakDomainEntities_InResponseObjects","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057136,"status":"passed","title":"should_NotLeakDomainEntities_InResponseObjects"},{"ancestorTitles":["AddContainerNodeUseCase","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase edge cases should_HandleNullDescription_Gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057138,"status":"passed","title":"should_HandleNullDescription_Gracefully"},{"ancestorTitles":["AddContainerNodeUseCase","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase edge cases should_TrimWhitespaceFromName_WhenProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057139,"status":"passed","title":"should_TrimWhitespaceFromName_WhenProvided"},{"ancestorTitles":["AddContainerNodeUseCase","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase edge cases should_GenerateUniqueNodeIds_ForConcurrentRequests","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057140,"status":"passed","title":"should_GenerateUniqueNodeIds_ForConcurrentRequests"},{"ancestorTitles":["AddContainerNodeUseCase","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddContainerNodeUseCase edge cases should_ValidateBoundaryPositions_CorrectlyAtLimits","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057141,"status":"passed","title":"should_ValidateBoundaryPositions_CorrectlyAtLimits"}],"endTime":1756394057143,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\add-container-node-use-case.test.ts","startTime":1756394056852,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Version","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version creation should create valid semantic version","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057143,"status":"passed","title":"should create valid semantic version"},{"ancestorTitles":["Version","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version creation should create version with patch numbers","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057144,"status":"passed","title":"should create version with patch numbers"},{"ancestorTitles":["Version","creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version creation should create version with zero components","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057145,"status":"passed","title":"should create version with zero components"},{"ancestorTitles":["Version","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version creation should handle large version numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057145,"status":"passed","title":"should handle large version numbers"},{"ancestorTitles":["Version","validation failures"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version validation failures should reject empty version string","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057146,"status":"passed","title":"should reject empty version string"},{"ancestorTitles":["Version","validation failures"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version validation failures should reject invalid semantic version format","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394057146,"status":"passed","title":"should reject invalid semantic version format"},{"ancestorTitles":["Version","validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version validation failures should accept valid prerelease versions","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057148,"status":"passed","title":"should accept valid prerelease versions"},{"ancestorTitles":["Version","validation failures"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version validation failures should reject non-numeric version components","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057149,"status":"passed","title":"should reject non-numeric version components"},{"ancestorTitles":["Version","validation failures"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version validation failures should reject negative version numbers","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057151,"status":"passed","title":"should reject negative version numbers"},{"ancestorTitles":["Version","validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version validation failures should handle versions with leading zeros","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057151,"status":"passed","title":"should handle versions with leading zeros"},{"ancestorTitles":["Version","version comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version comparison should compare major versions correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057152,"status":"passed","title":"should compare major versions correctly"},{"ancestorTitles":["Version","version comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version comparison should compare minor versions correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057153,"status":"passed","title":"should compare minor versions correctly"},{"ancestorTitles":["Version","version comparison"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version comparison should compare patch versions correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057154,"status":"passed","title":"should compare patch versions correctly"},{"ancestorTitles":["Version","version comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version comparison should identify equal versions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057156,"status":"passed","title":"should identify equal versions"},{"ancestorTitles":["Version","version comparison"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version comparison should handle complex version comparisons","invocations":1,"location":null,"numPassingAsserts":42,"retryReasons":[],"startAt":1756394057157,"status":"passed","title":"should handle complex version comparisons"},{"ancestorTitles":["Version","version increments"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version increments should increment patch version correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057166,"status":"passed","title":"should increment patch version correctly"},{"ancestorTitles":["Version","version increments"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version increments should increment minor version and reset patch","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057167,"status":"passed","title":"should increment minor version and reset patch"},{"ancestorTitles":["Version","version increments"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version increments should increment major version and reset minor and patch","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057168,"status":"passed","title":"should increment major version and reset minor and patch"},{"ancestorTitles":["Version","version increments"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version increments should handle large version numbers for increments","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057168,"status":"passed","title":"should handle large version numbers for increments"},{"ancestorTitles":["Version","version compatibility"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version compatibility should determine semantic compatibility using compare method","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057169,"status":"passed","title":"should determine semantic compatibility using compare method"},{"ancestorTitles":["Version","version compatibility"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version compatibility should handle breaking change detection using major version","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057170,"status":"passed","title":"should handle breaking change detection using major version"},{"ancestorTitles":["Version","version validation rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version version validation rules should enforce business version increment rules","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057171,"status":"passed","title":"should enforce business version increment rules"},{"ancestorTitles":["Version","toString and serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version toString and serialization should convert to string correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057172,"status":"passed","title":"should convert to string correctly"},{"ancestorTitles":["Version","toString and serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version toString and serialization should provide component access","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057173,"status":"passed","title":"should provide component access"},{"ancestorTitles":["Version","edge cases and error conditions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version edge cases and error conditions should handle whitespace in version strings","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394057174,"status":"passed","title":"should handle whitespace in version strings"},{"ancestorTitles":["Version","edge cases and error conditions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version edge cases and error conditions should handle extremely large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057175,"status":"passed","title":"should handle extremely large numbers"}],"endTime":1756394057177,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\value-objects\\version.test.ts","startTime":1756394056937,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Action Node Type Configurations","KbNode Configuration","Configuration Properties"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations KbNode Configuration Configuration Properties should validate required KbNode configuration properties","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"startAt":1756394057197,"status":"passed","title":"should validate required KbNode configuration properties"},{"ancestorTitles":["Action Node Type Configurations","KbNode Configuration","Configuration Properties"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations KbNode Configuration Configuration Properties should validate RACI assignment matrix structure","invocations":1,"location":null,"numPassingAsserts":23,"retryReasons":[],"startAt":1756394057200,"status":"passed","title":"should validate RACI assignment matrix structure"},{"ancestorTitles":["Action Node Type Configurations","KbNode Configuration","Configuration Properties"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations KbNode Configuration Configuration Properties should validate search keywords for AI agent discovery","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057203,"status":"passed","title":"should validate search keywords for AI agent discovery"},{"ancestorTitles":["Action Node Type Configurations","KbNode Configuration","AI Agent Access Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations KbNode Configuration AI Agent Access Patterns should support stage node agent access to RACI information","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057205,"status":"passed","title":"should support stage node agent access to RACI information"},{"ancestorTitles":["Action Node Type Configurations","KbNode Configuration","AI Agent Access Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations KbNode Configuration AI Agent Access Patterns should enable agents to retrieve linked Knowledge Base ID for database searches","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057206,"status":"passed","title":"should enable agents to retrieve linked Knowledge Base ID for database searches"},{"ancestorTitles":["Action Node Type Configurations","KbNode Configuration","Business Rules Enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations KbNode Configuration Business Rules Enforcement should enforce KB reference must point to valid Knowledge Base entity","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057206,"status":"passed","title":"should enforce KB reference must point to valid Knowledge Base entity"},{"ancestorTitles":["Action Node Type Configurations","KbNode Configuration","Business Rules Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations KbNode Configuration Business Rules Enforcement should enforce at least one responsible party in RACI","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057206,"status":"passed","title":"should enforce at least one responsible party in RACI"},{"ancestorTitles":["Action Node Type Configurations","KbNode Configuration","Business Rules Enforcement"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations KbNode Configuration Business Rules Enforcement should enforce concise but informative short description","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057207,"status":"passed","title":"should enforce concise but informative short description"},{"ancestorTitles":["Action Node Type Configurations","TetherNode Configuration","Configuration Properties"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations TetherNode Configuration Configuration Properties should validate required TetherNode configuration properties","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057211,"status":"passed","title":"should validate required TetherNode configuration properties"},{"ancestorTitles":["Action Node Type Configurations","TetherNode Configuration","Configuration Properties"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations TetherNode Configuration Configuration Properties should validate execution parameters for tether execution","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057213,"status":"passed","title":"should validate execution parameters for tether execution"},{"ancestorTitles":["Action Node Type Configurations","TetherNode Configuration","Configuration Properties"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations TetherNode Configuration Configuration Properties should validate resource requirements are within system limits","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057213,"status":"passed","title":"should validate resource requirements are within system limits"},{"ancestorTitles":["Action Node Type Configurations","TetherNode Configuration","AI Agent Access Patterns"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations TetherNode Configuration AI Agent Access Patterns should enable stage agents to access tether ID and configuration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057214,"status":"passed","title":"should enable stage agents to access tether ID and configuration"},{"ancestorTitles":["Action Node Type Configurations","TetherNode Configuration","AI Agent Access Patterns"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations TetherNode Configuration AI Agent Access Patterns should enable agents to access run history and execution status","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057215,"status":"passed","title":"should enable agents to access run history and execution status"},{"ancestorTitles":["Action Node Type Configurations","TetherNode Configuration","Business Rules Enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations TetherNode Configuration Business Rules Enforcement should enforce tether reference must point to valid Spindle entity","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057216,"status":"passed","title":"should enforce tether reference must point to valid Spindle entity"},{"ancestorTitles":["Action Node Type Configurations","TetherNode Configuration","Business Rules Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations TetherNode Configuration Business Rules Enforcement should enforce execution parameters must be valid for tether type","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057216,"status":"passed","title":"should enforce execution parameters must be valid for tether type"},{"ancestorTitles":["Action Node Type Configurations","TetherNode Configuration","Business Rules Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations TetherNode Configuration Business Rules Enforcement should enforce output mapping must align with stage context requirements","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057217,"status":"passed","title":"should enforce output mapping must align with stage context requirements"},{"ancestorTitles":["Action Node Type Configurations","FunctionModelContainer Configuration","Configuration Properties"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations FunctionModelContainer Configuration Configuration Properties should validate required FunctionModelContainer configuration properties","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057218,"status":"passed","title":"should validate required FunctionModelContainer configuration properties"},{"ancestorTitles":["Action Node Type Configurations","FunctionModelContainer Configuration","Configuration Properties"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations FunctionModelContainer Configuration Configuration Properties should validate context mapping preserves data integrity","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057220,"status":"passed","title":"should validate context mapping preserves data integrity"},{"ancestorTitles":["Action Node Type Configurations","FunctionModelContainer Configuration","Configuration Properties"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations FunctionModelContainer Configuration Configuration Properties should validate execution policy does not conflict with parent orchestration","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394057221,"status":"passed","title":"should validate execution policy does not conflict with parent orchestration"},{"ancestorTitles":["Action Node Type Configurations","FunctionModelContainer Configuration","AI Agent Access Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations FunctionModelContainer Configuration AI Agent Access Patterns should enable parent model agents to access nested model outputs","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057223,"status":"passed","title":"should enable parent model agents to access nested model outputs"},{"ancestorTitles":["Action Node Type Configurations","FunctionModelContainer Configuration","AI Agent Access Patterns"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations FunctionModelContainer Configuration AI Agent Access Patterns should maintain consistent access patterns in deep nesting","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057223,"status":"passed","title":"should maintain consistent access patterns in deep nesting"},{"ancestorTitles":["Action Node Type Configurations","FunctionModelContainer Configuration","Business Rules Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations FunctionModelContainer Configuration Business Rules Enforcement should enforce nested model must be valid and accessible","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057224,"status":"passed","title":"should enforce nested model must be valid and accessible"},{"ancestorTitles":["Action Node Type Configurations","FunctionModelContainer Configuration","Business Rules Enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations FunctionModelContainer Configuration Business Rules Enforcement should enforce output extraction must align with parent requirements","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057225,"status":"passed","title":"should enforce output extraction must align with parent requirements"},{"ancestorTitles":["Action Node Type Configurations","Cross-Type Configuration Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations Cross-Type Configuration Validation should validate action node type determines configuration structure","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057225,"status":"passed","title":"should validate action node type determines configuration structure"},{"ancestorTitles":["Action Node Type Configurations","Cross-Type Configuration Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Action Node Type Configurations Cross-Type Configuration Validation should validate configuration data structure based on action type","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057226,"status":"passed","title":"should validate configuration data structure based on action type"}],"endTime":1756394057229,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\action-node-configurations.test.ts","startTime":1756394057001,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AIAgentManagementService Integration Tests","Complete Agent Lifecycle Workflows","registerDiscoverExecute_Integration"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Complete Agent Lifecycle Workflows registerDiscoverExecute_Integration should_ExecuteCompleteAgentLifecycle_WhenValidWorkflowExecuted","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394054335,"status":"passed","title":"should_ExecuteCompleteAgentLifecycle_WhenValidWorkflowExecuted"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Complete Agent Lifecycle Workflows","registerDiscoverExecute_Integration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Complete Agent Lifecycle Workflows registerDiscoverExecute_Integration should_RollbackLifecycle_WhenIntermediateStepFails","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054340,"status":"passed","title":"should_RollbackLifecycle_WhenIntermediateStepFails"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Capability-Based Agent Discovery","capabilityBasedDiscovery_Integration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Capability-Based Agent Discovery capabilityBasedDiscovery_Integration should_DiscoverAgentsWithScoringAlgorithm_WhenCapabilitiesMatch","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054343,"status":"passed","title":"should_DiscoverAgentsWithScoringAlgorithm_WhenCapabilitiesMatch"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Capability-Based Agent Discovery","capabilityBasedDiscovery_Integration"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Capability-Based Agent Discovery capabilityBasedDiscovery_Integration should_ApplyCapabilityFiltering_WhenStrictCriteriaSpecified","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054346,"status":"passed","title":"should_ApplyCapabilityFiltering_WhenStrictCriteriaSpecified"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Semantic Agent Search","semanticSearch_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Semantic Agent Search semanticSearch_Integration should_PerformSemanticSearch_UsingNaturalLanguageQueries","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054351,"status":"passed","title":"should_PerformSemanticSearch_UsingNaturalLanguageQueries"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Semantic Agent Search","semanticSearch_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Semantic Agent Search semanticSearch_Integration should_HandleComplexSemanticQueries_WithContextualUnderstanding","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054353,"status":"passed","title":"should_HandleComplexSemanticQueries_WithContextualUnderstanding"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Workflow Agent Coordination","sequentialWorkflowExecution_Integration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Workflow Agent Coordination sequentialWorkflowExecution_Integration should_CoordinateSequentialAgentExecution_InCorrectOrder","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394054355,"status":"passed","title":"should_CoordinateSequentialAgentExecution_InCorrectOrder"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Workflow Agent Coordination","sequentialWorkflowExecution_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Workflow Agent Coordination sequentialWorkflowExecution_Integration should_HandleSequentialFailure_WithProperRollback","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054358,"status":"passed","title":"should_HandleSequentialFailure_WithProperRollback"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Workflow Agent Coordination","parallelWorkflowExecution_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Workflow Agent Coordination parallelWorkflowExecution_Integration should_CoordinateParallelAgentExecution_WithProperSynchronization","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054360,"status":"passed","title":"should_CoordinateParallelAgentExecution_WithProperSynchronization"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Agent Performance Tracking","performanceMonitoring_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Agent Performance Tracking performanceMonitoring_Integration should_TrackAgentPerformance_AcrossMultipleExecutions","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054362,"status":"passed","title":"should_TrackAgentPerformance_AcrossMultipleExecutions"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Agent Performance Tracking","performanceMonitoring_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Agent Performance Tracking performanceMonitoring_Integration should_ImplementCapacityManagement_WhenResourceLimitsApproached","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394054364,"status":"passed","title":"should_ImplementCapacityManagement_WhenResourceLimitsApproached"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Failure Handling and Agent Recovery","agentRecovery_Integration"],"duration":1002,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Failure Handling and Agent Recovery agentRecovery_Integration should_RecoverFailedAgent_WithAutomaticRetryStrategy","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054366,"status":"passed","title":"should_RecoverFailedAgent_WithAutomaticRetryStrategy"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Failure Handling and Agent Recovery","agentRecovery_Integration"],"duration":1523,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Failure Handling and Agent Recovery agentRecovery_Integration should_IsolateFailingAgent_WhenRecoveryAttemptsExhausted","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394055368,"status":"passed","title":"should_IsolateFailingAgent_WhenRecoveryAttemptsExhausted"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Concurrent Agent Operations","resourceContention_Integration"],"duration":372,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Concurrent Agent Operations resourceContention_Integration should_HandleResourceContention_WithProperQueueing","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394056891,"status":"passed","title":"should_HandleResourceContention_WithProperQueueing"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Concurrent Agent Operations","resourceContention_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Concurrent Agent Operations resourceContention_Integration should_ApplyLoadBalancing_WhenMultipleAgentsAvailable","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057263,"status":"passed","title":"should_ApplyLoadBalancing_WhenMultipleAgentsAvailable"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Performance with Large Agent Pools","scalabilityTesting_Integration"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Performance with Large Agent Pools scalabilityTesting_Integration should_MaintainPerformance_WithLargeAgentPool","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057265,"status":"passed","title":"should_MaintainPerformance_WithLargeAgentPool"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Clean Architecture Compliance","architecturalBoundaries_Integration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Clean Architecture Compliance architecturalBoundaries_Integration should_OnlyCoordinateUseCases_NeverExecuteDomainLogicDirectly","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394057277,"status":"passed","title":"should_OnlyCoordinateUseCases_NeverExecuteDomainLogicDirectly"},{"ancestorTitles":["AIAgentManagementService Integration Tests","Clean Architecture Compliance","architecturalBoundaries_Integration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentManagementService Integration Tests Clean Architecture Compliance architecturalBoundaries_Integration should_EnforceLayerBoundaries_InServiceCoordination","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057280,"status":"passed","title":"should_EnforceLayerBoundaries_InServiceCoordination"}],"endTime":1756394057284,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\integration\\application\\ai-agent-management-service.integration.test.ts","startTime":1756394053974,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Type Safety and Error Prevention"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Type Safety and Error Prevention Version_Equals_ShouldHandleNullInputGracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057238,"status":"passed","title":"Version_Equals_ShouldHandleNullInputGracefully"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Type Safety and Error Prevention"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Type Safety and Error Prevention Version_Equals_ShouldHandleUndefinedInputGracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057239,"status":"passed","title":"Version_Equals_ShouldHandleUndefinedInputGracefully"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Type Safety and Error Prevention"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Type Safety and Error Prevention Version_Equals_ShouldHandleStringInputGracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057239,"status":"passed","title":"Version_Equals_ShouldHandleStringInputGracefully"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Type Safety and Error Prevention"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Type Safety and Error Prevention Version_Equals_ShouldHandleNumberInputGracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057239,"status":"passed","title":"Version_Equals_ShouldHandleNumberInputGracefully"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Type Safety and Error Prevention"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Type Safety and Error Prevention Version_Equals_ShouldHandlePlainObjectInputGracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057239,"status":"passed","title":"Version_Equals_ShouldHandlePlainObjectInputGracefully"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Type Safety and Error Prevention"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Type Safety and Error Prevention Version_Equals_ShouldHandleMockObjectWithoutCompareMethods","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057240,"status":"passed","title":"Version_Equals_ShouldHandleMockObjectWithoutCompareMethods"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Compare Method Robustness"],"duration":24,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Compare Method Robustness Version_Compare_ShouldThrowErrorForInvalidInput","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057240,"status":"passed","title":"Version_Compare_ShouldThrowErrorForInvalidInput"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Compare Method Robustness"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Compare Method Robustness Version_Compare_ShouldThrowErrorForPlainObject","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057264,"status":"passed","title":"Version_Compare_ShouldThrowErrorForPlainObject"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","isGreaterThan/isLessThan Robustness"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling isGreaterThan/isLessThan Robustness Version_IsGreaterThan_ShouldReturnFalseForInvalidInput","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057267,"status":"passed","title":"Version_IsGreaterThan_ShouldReturnFalseForInvalidInput"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","isGreaterThan/isLessThan Robustness"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling isGreaterThan/isLessThan Robustness Version_IsLessThan_ShouldReturnFalseForInvalidInput","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057268,"status":"passed","title":"Version_IsLessThan_ShouldReturnFalseForInvalidInput"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Integration with Clean Architecture Patterns"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Integration with Clean Architecture Patterns Version_ShouldWorkCorrectlyInFunctionModelValidationScenario","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057269,"status":"passed","title":"Version_ShouldWorkCorrectlyInFunctionModelValidationScenario"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Integration with Clean Architecture Patterns"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Integration with Clean Architecture Patterns Version_ShouldPreventRuntimeErrorsWithInvalidMocks","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"startAt":1756394057269,"status":"passed","title":"Version_ShouldPreventRuntimeErrorsWithInvalidMocks"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Integration with Clean Architecture Patterns"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Integration with Clean Architecture Patterns Version_ShouldMaintainConsistencyUnderStress","invocations":1,"location":null,"numPassingAsserts":100,"retryReasons":[],"startAt":1756394057275,"status":"passed","title":"Version_ShouldMaintainConsistencyUnderStress"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Edge Cases and Boundary Conditions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Edge Cases and Boundary Conditions Version_ShouldHandleCircularReferenceInMockObject","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057285,"status":"passed","title":"Version_ShouldHandleCircularReferenceInMockObject"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Edge Cases and Boundary Conditions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Edge Cases and Boundary Conditions Version_ShouldHandleObjectWithToStringThatThrows","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057286,"status":"passed","title":"Version_ShouldHandleObjectWithToStringThatThrows"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Performance and Memory"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Performance and Memory Version_ShouldPerformEfficientlyWithManyInvalidInputs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057287,"status":"passed","title":"Version_ShouldPerformEfficientlyWithManyInvalidInputs"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Value Object Contract Enforcement"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Value Object Contract Enforcement Version_ShouldEnforceImmutabilityWithInvalidAccess","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057288,"status":"passed","title":"Version_ShouldEnforceImmutabilityWithInvalidAccess"},{"ancestorTitles":["Version Value Object - Robustness and Error Handling","Value Object Contract Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Robustness and Error Handling Value Object Contract Enforcement Version_ShouldMaintainValueObjectIdentity","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057292,"status":"passed","title":"Version_ShouldMaintainValueObjectIdentity"}],"endTime":1756394057295,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\value-objects\\version-robustness.test.ts","startTime":1756394057032,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModel","creation and initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel creation and initialization should create function model with valid properties","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394057304,"status":"passed","title":"should create function model with valid properties"},{"ancestorTitles":["FunctionModel","creation and initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel creation and initialization should create model with custom properties","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057307,"status":"passed","title":"should create model with custom properties"},{"ancestorTitles":["FunctionModel","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel creation and initialization should initialize with default metadata","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057309,"status":"passed","title":"should initialize with default metadata"},{"ancestorTitles":["FunctionModel","creation and initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel creation and initialization should have proper permission structure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057310,"status":"passed","title":"should have proper permission structure"},{"ancestorTitles":["FunctionModel","container node management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel container node management should add container node successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057311,"status":"passed","title":"should add container node successfully"},{"ancestorTitles":["FunctionModel","container node management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel container node management should reject adding duplicate node IDs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057312,"status":"passed","title":"should reject adding duplicate node IDs"},{"ancestorTitles":["FunctionModel","container node management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel container node management should reject adding node from different model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057313,"status":"passed","title":"should reject adding node from different model"},{"ancestorTitles":["FunctionModel","container node management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel container node management should remove container node and its actions","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057314,"status":"passed","title":"should remove container node and its actions"},{"ancestorTitles":["FunctionModel","container node management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel container node management should not remove non-existent node","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057315,"status":"passed","title":"should not remove non-existent node"},{"ancestorTitles":["FunctionModel","action node management"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel action node management should add action node to container","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057316,"status":"passed","title":"should add action node to container"},{"ancestorTitles":["FunctionModel","action node management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel action node management should reject action node with non-existent parent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057320,"status":"passed","title":"should reject action node with non-existent parent"},{"ancestorTitles":["FunctionModel","action node management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel action node management should reject duplicate action IDs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057320,"status":"passed","title":"should reject duplicate action IDs"},{"ancestorTitles":["FunctionModel","action node management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel action node management should remove action node","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057321,"status":"passed","title":"should remove action node"},{"ancestorTitles":["FunctionModel","workflow validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel workflow validation should validate complete workflow successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057322,"status":"passed","title":"should validate complete workflow successfully"},{"ancestorTitles":["FunctionModel","workflow validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel workflow validation should detect missing IO nodes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057323,"status":"passed","title":"should detect missing IO nodes"},{"ancestorTitles":["FunctionModel","workflow validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel workflow validation should detect circular dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057324,"status":"passed","title":"should detect circular dependencies"},{"ancestorTitles":["FunctionModel","workflow validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel workflow validation should detect orphaned nodes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057325,"status":"passed","title":"should detect orphaned nodes"},{"ancestorTitles":["FunctionModel","workflow validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel workflow validation should warn about nodes without actions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057326,"status":"passed","title":"should warn about nodes without actions"},{"ancestorTitles":["FunctionModel","publishing workflow"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel publishing workflow should publish valid draft model","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057326,"status":"passed","title":"should publish valid draft model"},{"ancestorTitles":["FunctionModel","publishing workflow"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel publishing workflow should reject publishing invalid workflow","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057327,"status":"passed","title":"should reject publishing invalid workflow"},{"ancestorTitles":["FunctionModel","publishing workflow"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel publishing workflow should reject publishing already published model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057328,"status":"passed","title":"should reject publishing already published model"},{"ancestorTitles":["FunctionModel","publishing workflow"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel publishing workflow should reject publishing archived model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057328,"status":"passed","title":"should reject publishing archived model"},{"ancestorTitles":["FunctionModel","version management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel version management should create new version from published model","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057329,"status":"passed","title":"should create new version from published model"},{"ancestorTitles":["FunctionModel","version management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel version management should reject invalid version progression","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057330,"status":"passed","title":"should reject invalid version progression"},{"ancestorTitles":["FunctionModel","version management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel version management should only create version from published model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057331,"status":"passed","title":"should only create version from published model"},{"ancestorTitles":["FunctionModel","archival workflow"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel archival workflow should archive published model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057331,"status":"passed","title":"should archive published model"},{"ancestorTitles":["FunctionModel","archival workflow"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel archival workflow should archive draft model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057332,"status":"passed","title":"should archive draft model"},{"ancestorTitles":["FunctionModel","archival workflow"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel archival workflow should reject archiving already archived model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057332,"status":"passed","title":"should reject archiving already archived model"},{"ancestorTitles":["FunctionModel","soft delete workflow"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel soft delete workflow should soft delete model","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057333,"status":"passed","title":"should soft delete model"},{"ancestorTitles":["FunctionModel","soft delete workflow"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel soft delete workflow should reject operations on deleted model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057334,"status":"passed","title":"should reject operations on deleted model"},{"ancestorTitles":["FunctionModel","soft delete workflow"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel soft delete workflow should not soft delete already deleted model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057335,"status":"passed","title":"should not soft delete already deleted model"},{"ancestorTitles":["FunctionModel","model statistics"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel model statistics should calculate model statistics correctly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057336,"status":"passed","title":"should calculate model statistics correctly"},{"ancestorTitles":["FunctionModel","model statistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel model statistics should calculate complexity metrics","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057338,"status":"passed","title":"should calculate complexity metrics"},{"ancestorTitles":["FunctionModel","timestamps and audit trail"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel timestamps and audit trail should update timestamps on modifications","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057339,"status":"passed","title":"should update timestamps on modifications"},{"ancestorTitles":["FunctionModel","timestamps and audit trail"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel timestamps and audit trail should track last saved timestamp","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057340,"status":"passed","title":"should track last saved timestamp"},{"ancestorTitles":["FunctionModel","equality and identity"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel equality and identity should be equal when model IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057340,"status":"passed","title":"should be equal when model IDs match"},{"ancestorTitles":["FunctionModel","equality and identity"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel equality and identity should not be equal when model IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057341,"status":"passed","title":"should not be equal when model IDs differ"},{"ancestorTitles":["FunctionModel","business rules enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel business rules enforcement should enforce immutability of published models","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057341,"status":"passed","title":"should enforce immutability of published models"},{"ancestorTitles":["FunctionModel","business rules enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel business rules enforcement should allow viewing but not editing archived models","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057342,"status":"passed","title":"should allow viewing but not editing archived models"}],"endTime":1756394057344,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\function-model.test.ts","startTime":1756394057068,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Soft Delete Operations","SoftDelete_ValidModelAndUser_ShouldMarkAsDeleted"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Soft Delete Operations SoftDelete_ValidModelAndUser_ShouldMarkAsDeleted should successfully soft delete a model and preserve audit trail","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057340,"status":"passed","title":"should successfully soft delete a model and preserve audit trail"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Soft Delete Operations","SoftDelete_NonExistentModel_ShouldReturnFailure"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Soft Delete Operations SoftDelete_NonExistentModel_ShouldReturnFailure should return failure when model does not exist","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057345,"status":"passed","title":"should return failure when model does not exist"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Soft Delete Operations","SoftDelete_AlreadyDeletedModel_ShouldReturnFailure"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Soft Delete Operations SoftDelete_AlreadyDeletedModel_ShouldReturnFailure should return failure when model is already soft deleted","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057350,"status":"passed","title":"should return failure when model is already soft deleted"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Soft Delete Operations","SoftDelete_InsufficientPermissions_ShouldReturnFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Soft Delete Operations SoftDelete_InsufficientPermissions_ShouldReturnFailure should return failure when user lacks delete permissions","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057352,"status":"passed","title":"should return failure when user lacks delete permissions"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Access Control for Deleted Models","FindDeleted_AdminUser_ShouldReturnDeletedModels"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Access Control for Deleted Models FindDeleted_AdminUser_ShouldReturnDeletedModels should allow admin users to access soft deleted models","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057353,"status":"passed","title":"should allow admin users to access soft deleted models"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Access Control for Deleted Models","FindDeleted_RegularUser_ShouldReturnFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Access Control for Deleted Models FindDeleted_RegularUser_ShouldReturnFailure should prevent regular users from accessing soft deleted models","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057355,"status":"passed","title":"should prevent regular users from accessing soft deleted models"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Access Control for Deleted Models","BlockOperations_OnDeletedModel_ShouldPreventModifications"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Access Control for Deleted Models BlockOperations_OnDeletedModel_ShouldPreventModifications should prevent normal operations on soft deleted models","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057356,"status":"passed","title":"should prevent normal operations on soft deleted models"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Audit Trail Preservation","AuditTrail_SoftDeleteOperation_ShouldPreserveCompleteHistory"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Audit Trail Preservation AuditTrail_SoftDeleteOperation_ShouldPreserveCompleteHistory should preserve complete audit history during soft delete","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057359,"status":"passed","title":"should preserve complete audit history during soft delete"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Audit Trail Preservation","AuditQuery_DeletedModelHistory_ShouldReturnCompleteTimeline"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Audit Trail Preservation AuditQuery_DeletedModelHistory_ShouldReturnCompleteTimeline should allow querying complete audit history for deleted models","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057361,"status":"passed","title":"should allow querying complete audit history for deleted models"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Recovery and Restoration","RestoreModel_ValidDeletedModel_ShouldSuccessfullyRestore"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Recovery and Restoration RestoreModel_ValidDeletedModel_ShouldSuccessfullyRestore should successfully restore a soft deleted model","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057363,"status":"passed","title":"should successfully restore a soft deleted model"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Recovery and Restoration","RestoreModel_NonDeletedModel_ShouldReturnFailure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Recovery and Restoration RestoreModel_NonDeletedModel_ShouldReturnFailure should return failure when trying to restore non-deleted model","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057366,"status":"passed","title":"should return failure when trying to restore non-deleted model"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Recovery and Restoration","RestoreModel_InsufficientPermissions_ShouldReturnFailure"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Recovery and Restoration RestoreModel_InsufficientPermissions_ShouldReturnFailure should prevent non-admin users from restoring models","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057367,"status":"passed","title":"should prevent non-admin users from restoring models"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Cascading Effects and Referential Integrity","CascadingDelete_WithDependentModels_ShouldHandleReferences"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Cascading Effects and Referential Integrity CascadingDelete_WithDependentModels_ShouldHandleReferences should handle cascading effects when deleting models with dependencies","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057369,"status":"passed","title":"should handle cascading effects when deleting models with dependencies"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Cascading Effects and Referential Integrity","PreventDelete_WithActiveReferences_ShouldBlockDeletion"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Cascading Effects and Referential Integrity PreventDelete_WithActiveReferences_ShouldBlockDeletion should prevent deletion when model has active critical references","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057372,"status":"passed","title":"should prevent deletion when model has active critical references"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Compliance and Data Retention","ComplianceDelete_WithRetentionPeriod_ShouldRespectPolicies"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Compliance and Data Retention ComplianceDelete_WithRetentionPeriod_ShouldRespectPolicies should respect data retention policies during soft delete","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057378,"status":"passed","title":"should respect data retention policies during soft delete"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Compliance and Data Retention","GetDeletionCandidates_BasedOnPolicy_ShouldReturnEligibleModels"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Compliance and Data Retention GetDeletionCandidates_BasedOnPolicy_ShouldReturnEligibleModels should identify models eligible for deletion based on retention policy","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057380,"status":"passed","title":"should identify models eligible for deletion based on retention policy"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Clean Architecture Compliance","DomainEventPublishing_OnSoftDelete_ShouldNotifySubscribers"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Clean Architecture Compliance DomainEventPublishing_OnSoftDelete_ShouldNotifySubscribers should publish domain events following Clean Architecture patterns","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057381,"status":"passed","title":"should publish domain events following Clean Architecture patterns"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Clean Architecture Compliance","RepositoryAbstraction_SoftDeleteOperations_ShouldUseInterfaces"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Clean Architecture Compliance RepositoryAbstraction_SoftDeleteOperations_ShouldUseInterfaces should use repository interfaces without infrastructure dependencies","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057382,"status":"passed","title":"should use repository interfaces without infrastructure dependencies"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Error Handling and Edge Cases","ConcurrencyConflict_DuringDeletion_ShouldHandleGracefully"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Error Handling and Edge Cases ConcurrencyConflict_DuringDeletion_ShouldHandleGracefully should handle concurrent modification during soft delete","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057383,"status":"passed","title":"should handle concurrent modification during soft delete"},{"ancestorTitles":["SoftDeleteFunctionModelUseCase","Error Handling and Edge Cases","DatabaseFailure_DuringAuditSave_ShouldRollbackChanges"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SoftDeleteFunctionModelUseCase Error Handling and Edge Cases DatabaseFailure_DuringAuditSave_ShouldRollbackChanges should rollback model changes if audit log save fails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057384,"status":"passed","title":"should rollback model changes if audit log save fails"}],"endTime":1756394057387,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\soft-delete-function-model-use-case.test.ts","startTime":1756394057096,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ExecutionContext","creation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext creation should create execution context with valid environment","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057372,"status":"passed","title":"should create execution context with valid environment"},{"ancestorTitles":["ExecutionContext","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext creation should create context with parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057374,"status":"passed","title":"should create context with parameters"},{"ancestorTitles":["ExecutionContext","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext creation should create context with custom session ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057375,"status":"passed","title":"should create context with custom session ID"},{"ancestorTitles":["ExecutionContext","creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext creation should reject empty environment","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057376,"status":"passed","title":"should reject empty environment"},{"ancestorTitles":["ExecutionContext","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext creation should reject whitespace-only environment","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057376,"status":"passed","title":"should reject whitespace-only environment"},{"ancestorTitles":["ExecutionContext","creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext creation should reject empty session ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057377,"status":"passed","title":"should reject empty session ID"},{"ancestorTitles":["ExecutionContext","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext creation should reject whitespace-only session ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057377,"status":"passed","title":"should reject whitespace-only session ID"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should add parameter successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057378,"status":"passed","title":"should add parameter successfully"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should add numeric parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057378,"status":"passed","title":"should add numeric parameter"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should add boolean parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057379,"status":"passed","title":"should add boolean parameter"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should add object parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057380,"status":"passed","title":"should add object parameter"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should reject empty parameter key","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057380,"status":"passed","title":"should reject empty parameter key"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should reject whitespace-only parameter key","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057381,"status":"passed","title":"should reject whitespace-only parameter key"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should replace existing parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057381,"status":"passed","title":"should replace existing parameter"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should remove parameter successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057382,"status":"passed","title":"should remove parameter successfully"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should handle removing non-existent parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057382,"status":"passed","title":"should handle removing non-existent parameter"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should update multiple parameters at once","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057383,"status":"passed","title":"should update multiple parameters at once"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should replace all parameters when updating","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057384,"status":"passed","title":"should replace all parameters when updating"},{"ancestorTitles":["ExecutionContext","parameter management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter management should clear all parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057384,"status":"passed","title":"should clear all parameters"},{"ancestorTitles":["ExecutionContext","parameter retrieval"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter retrieval should get existing parameter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057385,"status":"passed","title":"should get existing parameter"},{"ancestorTitles":["ExecutionContext","parameter retrieval"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter retrieval should return undefined for non-existent parameter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057385,"status":"passed","title":"should return undefined for non-existent parameter"},{"ancestorTitles":["ExecutionContext","parameter retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter retrieval should check if parameter exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057385,"status":"passed","title":"should check if parameter exists"},{"ancestorTitles":["ExecutionContext","parameter retrieval"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter retrieval should get all parameter keys","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057386,"status":"passed","title":"should get all parameter keys"},{"ancestorTitles":["ExecutionContext","parameter retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext parameter retrieval should count parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057386,"status":"passed","title":"should count parameters"},{"ancestorTitles":["ExecutionContext","immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext immutability should return new instance when adding parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057387,"status":"passed","title":"should return new instance when adding parameter"},{"ancestorTitles":["ExecutionContext","immutability"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext immutability should return new instance when removing parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057388,"status":"passed","title":"should return new instance when removing parameter"},{"ancestorTitles":["ExecutionContext","immutability"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext immutability should prevent direct modification of parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057388,"status":"passed","title":"should prevent direct modification of parameters"},{"ancestorTitles":["ExecutionContext","immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext immutability should preserve original context when updates fail","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057405,"status":"passed","title":"should preserve original context when updates fail"},{"ancestorTitles":["ExecutionContext","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext equality and comparison should be equal when all properties match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057406,"status":"passed","title":"should be equal when all properties match"},{"ancestorTitles":["ExecutionContext","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext equality and comparison should not be equal when environments differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057407,"status":"passed","title":"should not be equal when environments differ"},{"ancestorTitles":["ExecutionContext","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext equality and comparison should not be equal when session IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057407,"status":"passed","title":"should not be equal when session IDs differ"},{"ancestorTitles":["ExecutionContext","equality and comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext equality and comparison should not be equal when parameters differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057407,"status":"passed","title":"should not be equal when parameters differ"},{"ancestorTitles":["ExecutionContext","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext equality and comparison should handle comparison with different parameter counts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057408,"status":"passed","title":"should handle comparison with different parameter counts"},{"ancestorTitles":["ExecutionContext","string representation"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext string representation should provide meaningful string representation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057408,"status":"passed","title":"should provide meaningful string representation"},{"ancestorTitles":["ExecutionContext","string representation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext string representation should handle multiple parameters in string representation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057413,"status":"passed","title":"should handle multiple parameters in string representation"},{"ancestorTitles":["ExecutionContext","string representation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext string representation should handle no parameters in string representation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057413,"status":"passed","title":"should handle no parameters in string representation"},{"ancestorTitles":["ExecutionContext","serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext serialization should convert to object representation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057413,"status":"passed","title":"should convert to object representation"},{"ancestorTitles":["ExecutionContext","serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext serialization should create from object representation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057414,"status":"passed","title":"should create from object representation"},{"ancestorTitles":["ExecutionContext","serialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext serialization should reject invalid object during deserialization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057415,"status":"passed","title":"should reject invalid object during deserialization"},{"ancestorTitles":["ExecutionContext","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext edge cases should handle null and undefined parameter values","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057415,"status":"passed","title":"should handle null and undefined parameter values"},{"ancestorTitles":["ExecutionContext","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext edge cases should handle very large parameter objects","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057416,"status":"passed","title":"should handle very large parameter objects"},{"ancestorTitles":["ExecutionContext","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext edge cases should handle unicode in parameter keys and values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057417,"status":"passed","title":"should handle unicode in parameter keys and values"},{"ancestorTitles":["ExecutionContext","edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ExecutionContext edge cases should handle special characters in session ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057418,"status":"passed","title":"should handle special characters in session ID"}],"endTime":1756394057420,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\value-objects\\execution-context.test.ts","startTime":1756394057156,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Version Value Object - Equality Compliance","Value Object Identity Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Value Object Identity Rules Version_Equals_ShouldReturnTrueForIdenticalVersions","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057394,"status":"passed","title":"Version_Equals_ShouldReturnTrueForIdenticalVersions"},{"ancestorTitles":["Version Value Object - Equality Compliance","Value Object Identity Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Value Object Identity Rules Version_Equals_ShouldReturnFalseForDifferentVersions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057395,"status":"passed","title":"Version_Equals_ShouldReturnFalseForDifferentVersions"},{"ancestorTitles":["Version Value Object - Equality Compliance","Value Object Identity Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Value Object Identity Rules Version_Equals_ShouldHandleReflexivity","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057396,"status":"passed","title":"Version_Equals_ShouldHandleReflexivity"},{"ancestorTitles":["Version Value Object - Equality Compliance","Value Object Identity Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Value Object Identity Rules Version_Equals_ShouldHandleTransitivity","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057397,"status":"passed","title":"Version_Equals_ShouldHandleTransitivity"},{"ancestorTitles":["Version Value Object - Equality Compliance","Prerelease Version Equality"],"duration":18,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Prerelease Version Equality Version_Equals_ShouldHandlePrereleaseVersions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057397,"status":"passed","title":"Version_Equals_ShouldHandlePrereleaseVersions"},{"ancestorTitles":["Version Value Object - Equality Compliance","Prerelease Version Equality"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Prerelease Version Equality Version_Equals_ShouldDifferentiateReleaseFromPrerelease","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057415,"status":"passed","title":"Version_Equals_ShouldDifferentiateReleaseFromPrerelease"},{"ancestorTitles":["Version Value Object - Equality Compliance","Prerelease Version Equality"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Prerelease Version Equality Version_Equals_ShouldHandleComplexPrereleaseVersions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057417,"status":"passed","title":"Version_Equals_ShouldHandleComplexPrereleaseVersions"},{"ancestorTitles":["Version Value Object - Equality Compliance","Edge Cases and Boundary Conditions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Edge Cases and Boundary Conditions Version_Equals_ShouldHandleZeroVersions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057418,"status":"passed","title":"Version_Equals_ShouldHandleZeroVersions"},{"ancestorTitles":["Version Value Object - Equality Compliance","Edge Cases and Boundary Conditions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Edge Cases and Boundary Conditions Version_Equals_ShouldHandleLargeVersionNumbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057418,"status":"passed","title":"Version_Equals_ShouldHandleLargeVersionNumbers"},{"ancestorTitles":["Version Value Object - Equality Compliance","Edge Cases and Boundary Conditions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Edge Cases and Boundary Conditions Version_Equals_ShouldHandleMixedVersionFormats","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057419,"status":"passed","title":"Version_Equals_ShouldHandleMixedVersionFormats"},{"ancestorTitles":["Version Value Object - Equality Compliance","Method Consistency Validation"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Method Consistency Validation Version_Equals_ShouldBeConsistentWithCompareMethod","invocations":1,"location":null,"numPassingAsserts":49,"retryReasons":[],"startAt":1756394057420,"status":"passed","title":"Version_Equals_ShouldBeConsistentWithCompareMethod"},{"ancestorTitles":["Version Value Object - Equality Compliance","Method Consistency Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Method Consistency Validation Version_Equals_ShouldBeConsistentWithToString","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057431,"status":"passed","title":"Version_Equals_ShouldBeConsistentWithToString"},{"ancestorTitles":["Version Value Object - Equality Compliance","Architectural Compliance Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Architectural Compliance Validation Version_Equals_ShouldSupportArchitecturalCompliancePatterns","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057433,"status":"passed","title":"Version_Equals_ShouldSupportArchitecturalCompliancePatterns"},{"ancestorTitles":["Version Value Object - Equality Compliance","Architectural Compliance Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Architectural Compliance Validation Version_Equals_ShouldNotAcceptInvalidVersionObjects","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057434,"status":"passed","title":"Version_Equals_ShouldNotAcceptInvalidVersionObjects"},{"ancestorTitles":["Version Value Object - Equality Compliance","Architectural Compliance Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Architectural Compliance Validation Version_Equals_ShouldWorkWithFunctionModelValidationPattern","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057434,"status":"passed","title":"Version_Equals_ShouldWorkWithFunctionModelValidationPattern"},{"ancestorTitles":["Version Value Object - Equality Compliance","Version Creation and Equality Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Version Creation and Equality Integration Version_Create_ShouldProduceObjectsWithWorkingEqualsMethods","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057435,"status":"passed","title":"Version_Create_ShouldProduceObjectsWithWorkingEqualsMethods"},{"ancestorTitles":["Version Value Object - Equality Compliance","Version Creation and Equality Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Version Creation and Equality Integration Version_Static_InitialShouldCreateValidVersionWithEquals","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057436,"status":"passed","title":"Version_Static_InitialShouldCreateValidVersionWithEquals"},{"ancestorTitles":["Version Value Object - Equality Compliance","Version Creation and Equality Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Version Creation and Equality Integration Version_Increments_ShouldCreateValidVersionsWithEquals","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057436,"status":"passed","title":"Version_Increments_ShouldCreateValidVersionsWithEquals"},{"ancestorTitles":["Version Value Object - Equality Compliance","Error Handling and Robustness"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Error Handling and Robustness Version_Equals_ShouldHandleNullOrUndefinedGracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057437,"status":"passed","title":"Version_Equals_ShouldHandleNullOrUndefinedGracefully"},{"ancestorTitles":["Version Value Object - Equality Compliance","Error Handling and Robustness"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Error Handling and Robustness Version_Equals_ShouldHandleNonVersionObjectsGracefully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057438,"status":"passed","title":"Version_Equals_ShouldHandleNonVersionObjectsGracefully"},{"ancestorTitles":["Version Value Object - Equality Compliance","Performance and Memory Considerations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Version Value Object - Equality Compliance Performance and Memory Considerations Version_Equals_ShouldBeEfficientForRepeatedCalls","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057438,"status":"passed","title":"Version_Equals_ShouldBeEfficientForRepeatedCalls"}],"endTime":1756394057441,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\value-objects\\version-equality-compliance.test.ts","startTime":1756394057172,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","FunctionModelRepository Interface"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage FunctionModelRepository Interface should define complete interface for function model operations","invocations":1,"location":null,"numPassingAsserts":30,"retryReasons":[],"startAt":1756394057409,"status":"passed","title":"should define complete interface for function model operations"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","FunctionModelRepository Interface"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage FunctionModelRepository Interface should support transaction operations for complex model changes","invocations":1,"location":null,"numPassingAsserts":32,"retryReasons":[],"startAt":1756394057414,"status":"passed","title":"should support transaction operations for complex model changes"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","ContainerNodeRepository Interface"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage ContainerNodeRepository Interface should define interface for container node operations","invocations":1,"location":null,"numPassingAsserts":26,"retryReasons":[],"startAt":1756394057418,"status":"passed","title":"should define interface for container node operations"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","ContainerNodeRepository Interface"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage ContainerNodeRepository Interface should support hierarchical and dependency operations","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"startAt":1756394057425,"status":"passed","title":"should support hierarchical and dependency operations"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","ActionNodeRepository Interface"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage ActionNodeRepository Interface should define comprehensive interface for action node operations","invocations":1,"location":null,"numPassingAsserts":17,"retryReasons":[],"startAt":1756394057427,"status":"passed","title":"should define comprehensive interface for action node operations"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","ActionNodeRepository Interface"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage ActionNodeRepository Interface should support execution tracking and monitoring operations","invocations":1,"location":null,"numPassingAsserts":24,"retryReasons":[],"startAt":1756394057429,"status":"passed","title":"should support execution tracking and monitoring operations"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","NodeLinkRepository Interface"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage NodeLinkRepository Interface should define interface for node link operations","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"startAt":1756394057432,"status":"passed","title":"should define interface for node link operations"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","CrossFeatureLinkRepository Interface"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage CrossFeatureLinkRepository Interface should define interface for cross-feature link operations","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"startAt":1756394057434,"status":"passed","title":"should define interface for cross-feature link operations"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","AIAgentRepository Interface"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage AIAgentRepository Interface should define interface for AI agent operations","invocations":1,"location":null,"numPassingAsserts":17,"retryReasons":[],"startAt":1756394057435,"status":"passed","title":"should define interface for AI agent operations"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","AuditLogRepository Interface"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage AuditLogRepository Interface should define interface for audit log operations","invocations":1,"location":null,"numPassingAsserts":19,"retryReasons":[],"startAt":1756394057437,"status":"passed","title":"should define interface for audit log operations"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","Repository Interface Consistency"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage Repository Interface Consistency should maintain consistent patterns across all repository interfaces","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057442,"status":"passed","title":"should maintain consistent patterns across all repository interfaces"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","Repository Interface Consistency"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage Repository Interface Consistency should support error handling and validation patterns","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"startAt":1756394057442,"status":"passed","title":"should support error handling and validation patterns"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","Repository Interface Documentation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage Repository Interface Documentation should define all repository interfaces mentioned in domain model","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"startAt":1756394057444,"status":"passed","title":"should define all repository interfaces mentioned in domain model"},{"ancestorTitles":["Repository Interfaces Comprehensive Coverage","Repository Interface Documentation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interfaces Comprehensive Coverage Repository Interface Documentation should support domain-driven design principles in repository interfaces","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"startAt":1756394057446,"status":"passed","title":"should support domain-driven design principles in repository interfaces"}],"endTime":1756394057449,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\interfaces\\repository-interfaces-comprehensive.test.ts","startTime":1756394057192,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["NodeId","creation and validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should create NodeId with valid UUID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057451,"status":"passed","title":"should create NodeId with valid UUID"},{"ancestorTitles":["NodeId","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should create NodeId with UUID v4","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057453,"status":"passed","title":"should create NodeId with UUID v4"},{"ancestorTitles":["NodeId","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should accept uppercase UUID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057453,"status":"passed","title":"should accept uppercase UUID"},{"ancestorTitles":["NodeId","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should accept mixed case UUID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057454,"status":"passed","title":"should accept mixed case UUID"},{"ancestorTitles":["NodeId","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should trim whitespace from UUID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057454,"status":"passed","title":"should trim whitespace from UUID"},{"ancestorTitles":["NodeId","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject empty string","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057455,"status":"passed","title":"should reject empty string"},{"ancestorTitles":["NodeId","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject whitespace-only string","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057456,"status":"passed","title":"should reject whitespace-only string"},{"ancestorTitles":["NodeId","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject null input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057456,"status":"passed","title":"should reject null input"},{"ancestorTitles":["NodeId","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject undefined input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057456,"status":"passed","title":"should reject undefined input"},{"ancestorTitles":["NodeId","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject invalid UUID format - too short","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057457,"status":"passed","title":"should reject invalid UUID format - too short"},{"ancestorTitles":["NodeId","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject invalid UUID format - too long","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057457,"status":"passed","title":"should reject invalid UUID format - too long"},{"ancestorTitles":["NodeId","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject invalid UUID format - missing hyphens","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057458,"status":"passed","title":"should reject invalid UUID format - missing hyphens"},{"ancestorTitles":["NodeId","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject invalid UUID format - wrong hyphen positions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057459,"status":"passed","title":"should reject invalid UUID format - wrong hyphen positions"},{"ancestorTitles":["NodeId","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject invalid UUID format - invalid characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057459,"status":"passed","title":"should reject invalid UUID format - invalid characters"},{"ancestorTitles":["NodeId","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject UUID v1 format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057459,"status":"passed","title":"should reject UUID v1 format"},{"ancestorTitles":["NodeId","creation and validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject UUID v3 format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057460,"status":"passed","title":"should reject UUID v3 format"},{"ancestorTitles":["NodeId","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should accept UUID v4 with valid variant bits","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057460,"status":"passed","title":"should accept UUID v4 with valid variant bits"},{"ancestorTitles":["NodeId","creation and validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId creation and validation should reject UUID v4 with invalid variant bits","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057461,"status":"passed","title":"should reject UUID v4 with invalid variant bits"},{"ancestorTitles":["NodeId","generation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId generation should generate valid NodeId","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057462,"status":"passed","title":"should generate valid NodeId"},{"ancestorTitles":["NodeId","generation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId generation should generate unique NodeIds","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057463,"status":"passed","title":"should generate unique NodeIds"},{"ancestorTitles":["NodeId","generation"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId generation should generate UUID v4 format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057464,"status":"passed","title":"should generate UUID v4 format"},{"ancestorTitles":["NodeId","generation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId generation should generate multiple unique UUIDs in succession","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057468,"status":"passed","title":"should generate multiple unique UUIDs in succession"},{"ancestorTitles":["NodeId","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId equality and comparison should be equal when IDs are identical","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057469,"status":"passed","title":"should be equal when IDs are identical"},{"ancestorTitles":["NodeId","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId equality and comparison should be equal when IDs differ only in case","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057469,"status":"passed","title":"should be equal when IDs differ only in case"},{"ancestorTitles":["NodeId","equality and comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId equality and comparison should not be equal when IDs are different","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057469,"status":"passed","title":"should not be equal when IDs are different"},{"ancestorTitles":["NodeId","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId equality and comparison should handle comparison with mixed case UUIDs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057470,"status":"passed","title":"should handle comparison with mixed case UUIDs"},{"ancestorTitles":["NodeId","string representation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId string representation should return original UUID as string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057470,"status":"passed","title":"should return original UUID as string"},{"ancestorTitles":["NodeId","string representation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId string representation should preserve case in string representation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057471,"status":"passed","title":"should preserve case in string representation"},{"ancestorTitles":["NodeId","string representation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId string representation should return same value from value property and toString","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057471,"status":"passed","title":"should return same value from value property and toString"},{"ancestorTitles":["NodeId","immutability"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId immutability should be immutable after creation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057472,"status":"passed","title":"should be immutable after creation"},{"ancestorTitles":["NodeId","immutability"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId immutability should not allow modification of value property","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057472,"status":"passed","title":"should not allow modification of value property"},{"ancestorTitles":["NodeId","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId edge cases should handle minimum valid UUID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057472,"status":"passed","title":"should handle minimum valid UUID"},{"ancestorTitles":["NodeId","edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId edge cases should handle maximum valid UUID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057473,"status":"passed","title":"should handle maximum valid UUID"},{"ancestorTitles":["NodeId","edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId edge cases should reject UUID with all zeros except version and variant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057473,"status":"passed","title":"should reject UUID with all zeros except version and variant"},{"ancestorTitles":["NodeId","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId edge cases should handle UUID with maximum valid characters in each segment","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057473,"status":"passed","title":"should handle UUID with maximum valid characters in each segment"},{"ancestorTitles":["NodeId","toString behavior"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId toString behavior should be compatible with string operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057474,"status":"passed","title":"should be compatible with string operations"},{"ancestorTitles":["NodeId","toString behavior"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"NodeId toString behavior should work with JSON serialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057474,"status":"passed","title":"should work with JSON serialization"}],"endTime":1756394057476,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\value-objects\\node-id.test.ts","startTime":1756394057244,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ModelName","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName creation should create valid model name successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057554,"status":"passed","title":"should create valid model name successfully"},{"ancestorTitles":["ModelName","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName creation should create model name with minimum length","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057555,"status":"passed","title":"should create model name with minimum length"},{"ancestorTitles":["ModelName","creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName creation should create model name with maximum length","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057556,"status":"passed","title":"should create model name with maximum length"},{"ancestorTitles":["ModelName","creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName creation should trim whitespace from model name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057556,"status":"passed","title":"should trim whitespace from model name"},{"ancestorTitles":["ModelName","validation failures"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName validation failures should reject empty string","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057557,"status":"passed","title":"should reject empty string"},{"ancestorTitles":["ModelName","validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName validation failures should reject whitespace-only string","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057557,"status":"passed","title":"should reject whitespace-only string"},{"ancestorTitles":["ModelName","validation failures"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName validation failures should reject names that are too short","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057558,"status":"passed","title":"should reject names that are too short"},{"ancestorTitles":["ModelName","validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName validation failures should reject names that are too long","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057558,"status":"passed","title":"should reject names that are too long"},{"ancestorTitles":["ModelName","validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName validation failures should reject names with invalid characters","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057559,"status":"passed","title":"should reject names with invalid characters"},{"ancestorTitles":["ModelName","validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName validation failures should allow names starting or ending with hyphens and underscores","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057560,"status":"passed","title":"should allow names starting or ending with hyphens and underscores"},{"ancestorTitles":["ModelName","allowed characters"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName allowed characters should allow alphanumeric characters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057561,"status":"passed","title":"should allow alphanumeric characters"},{"ancestorTitles":["ModelName","allowed characters"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName allowed characters should allow spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057561,"status":"passed","title":"should allow spaces"},{"ancestorTitles":["ModelName","allowed characters"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName allowed characters should allow hyphens and underscores in middle","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057562,"status":"passed","title":"should allow hyphens and underscores in middle"},{"ancestorTitles":["ModelName","allowed characters"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName allowed characters should reject parentheses and brackets","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057562,"status":"passed","title":"should reject parentheses and brackets"},{"ancestorTitles":["ModelName","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName equality and comparison should be equal when names are identical","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057563,"status":"passed","title":"should be equal when names are identical"},{"ancestorTitles":["ModelName","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName equality and comparison should not be equal when names are different","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057563,"status":"passed","title":"should not be equal when names are different"},{"ancestorTitles":["ModelName","equality and comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName equality and comparison should be case sensitive","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057563,"status":"passed","title":"should be case sensitive"},{"ancestorTitles":["ModelName","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName equality and comparison should handle equality with whitespace normalization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057564,"status":"passed","title":"should handle equality with whitespace normalization"},{"ancestorTitles":["ModelName","toString"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName toString should return the normalized string value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057564,"status":"passed","title":"should return the normalized string value"},{"ancestorTitles":["ModelName","business rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName business rules should enforce consistent naming conventions","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057567,"status":"passed","title":"should enforce consistent naming conventions"},{"ancestorTitles":["ModelName","business rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName business rules should allow system names since reserved validation is not implemented","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057568,"status":"passed","title":"should allow system names since reserved validation is not implemented"},{"ancestorTitles":["ModelName","business rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName business rules should reject unicode characters since regex only allows ASCII","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057569,"status":"passed","title":"should reject unicode characters since regex only allows ASCII"},{"ancestorTitles":["ModelName","boundary testing"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ModelName boundary testing should test all boundary conditions systematically","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057570,"status":"passed","title":"should test all boundary conditions systematically"}],"endTime":1756394057571,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\value-objects\\model-name.test.ts","startTime":1756394057309,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Audit Log Creation for Soft Deletion","CreateDeletionAuditLog_WithCompleteContext_ShouldCaptureAllDetails"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Audit Log Creation for Soft Deletion CreateDeletionAuditLog_WithCompleteContext_ShouldCaptureAllDetails should create comprehensive audit log for soft deletion with full context preservation","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"startAt":1756394057574,"status":"passed","title":"should create comprehensive audit log for soft deletion with full context preservation"},{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Audit Log Creation for Soft Deletion","CreateDeletionAuditLog_WithMinimalContext_ShouldCaptureEssentials"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Audit Log Creation for Soft Deletion CreateDeletionAuditLog_WithMinimalContext_ShouldCaptureEssentials should create audit log with minimal required information","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057579,"status":"passed","title":"should create audit log with minimal required information"},{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Audit Trail Completeness and Integrity","ValidateAuditChain_AcrossModelLifecycle_ShouldMaintainContinuity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Audit Trail Completeness and Integrity ValidateAuditChain_AcrossModelLifecycle_ShouldMaintainContinuity should maintain complete audit chain from creation through soft deletion","invocations":1,"location":null,"numPassingAsserts":19,"retryReasons":[],"startAt":1756394057581,"status":"passed","title":"should maintain complete audit chain from creation through soft deletion"},{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Audit Trail Completeness and Integrity","ValidateAuditDataIntegrity_ForSoftDeletion_ShouldPreserveAllCriticalData"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Audit Trail Completeness and Integrity ValidateAuditDataIntegrity_ForSoftDeletion_ShouldPreserveAllCriticalData should preserve all critical model data in soft deletion audit","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"startAt":1756394057584,"status":"passed","title":"should preserve all critical model data in soft deletion audit"},{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Audit Query and Retrieval Capabilities","QueryDeletionAuditTrail_ForDeletedModel_ShouldReturnCompleteHistory"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Audit Query and Retrieval Capabilities QueryDeletionAuditTrail_ForDeletedModel_ShouldReturnCompleteHistory should support querying complete audit trail for soft deleted models","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057593,"status":"passed","title":"should support querying complete audit trail for soft deleted models"},{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Audit Query and Retrieval Capabilities","QueryAuditMetrics_ForDeletionAnalysis_ShouldProvideAnalytics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Audit Query and Retrieval Capabilities QueryAuditMetrics_ForDeletionAnalysis_ShouldProvideAnalytics should support analytical queries on deletion audit data","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394057595,"status":"passed","title":"should support analytical queries on deletion audit data"},{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Compliance and Legal Requirements","ValidateGDPRCompliance_ForSoftDeletion_ShouldMeetRequirements"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Compliance and Legal Requirements ValidateGDPRCompliance_ForSoftDeletion_ShouldMeetRequirements should create GDPR-compliant audit logs for soft deletion","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057596,"status":"passed","title":"should create GDPR-compliant audit logs for soft deletion"},{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Compliance and Legal Requirements","ValidateSOXCompliance_ForSoftDeletion_ShouldMeetAuditRequirements"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Compliance and Legal Requirements ValidateSOXCompliance_ForSoftDeletion_ShouldMeetAuditRequirements should create SOX-compliant audit logs for financial model soft deletion","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394057598,"status":"passed","title":"should create SOX-compliant audit logs for financial model soft deletion"},{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Clean Architecture Audit Entity Compliance","AuditLogEntity_ShouldMaintainDomainIntegrity"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Clean Architecture Audit Entity Compliance AuditLogEntity_ShouldMaintainDomainIntegrity should maintain domain integrity without external dependencies","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394057599,"status":"passed","title":"should maintain domain integrity without external dependencies"},{"ancestorTitles":["AuditLog - Soft Deletion Audit Trail","Clean Architecture Audit Entity Compliance","AuditDataStructure_ShouldSupportEvolutionAndMaintenance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AuditLog - Soft Deletion Audit Trail Clean Architecture Audit Entity Compliance AuditDataStructure_ShouldSupportEvolutionAndMaintenance should support audit data structure evolution while maintaining backward compatibility","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1756394057601,"status":"passed","title":"should support audit data structure evolution while maintaining backward compatibility"}],"endTime":1756394057604,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\audit-log-soft-deletion.test.ts","startTime":1756394057299,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Aggregate Root Access Control"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Aggregate Root Access Control FunctionModelAggregate_OnlyRootCanBeDirectlyModified_ShouldEnforceAggregateRootPattern","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057593,"status":"passed","title":"FunctionModelAggregate_OnlyRootCanBeDirectlyModified_ShouldEnforceAggregateRootPattern"},{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Aggregate Root Access Control"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Aggregate Root Access Control FunctionModelAggregate_CrossAggregateReferences_ShouldUseIdentityOnly","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057595,"status":"passed","title":"FunctionModelAggregate_CrossAggregateReferences_ShouldUseIdentityOnly"},{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Aggregate Root Access Control"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Aggregate Root Access Control FunctionModelAggregate_EntityRelationships_ShouldMaintainReferentialIntegrity","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057597,"status":"passed","title":"FunctionModelAggregate_EntityRelationships_ShouldMaintainReferentialIntegrity"},{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Aggregate Consistency Boundaries"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Aggregate Consistency Boundaries FunctionModelAggregate_StateTransitions_ShouldMaintainInternalConsistency","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057599,"status":"passed","title":"FunctionModelAggregate_StateTransitions_ShouldMaintainInternalConsistency"},{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Aggregate Consistency Boundaries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Aggregate Consistency Boundaries FunctionModelAggregate_BusinessRuleEnforcement_ShouldValidateAcrossEntities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057601,"status":"passed","title":"FunctionModelAggregate_BusinessRuleEnforcement_ShouldValidateAcrossEntities"},{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Aggregate Versioning Boundaries"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Aggregate Versioning Boundaries FunctionModelAggregate_VersionCreation_ShouldCreateIndependentAggregateInstance","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057602,"status":"passed","title":"FunctionModelAggregate_VersionCreation_ShouldCreateIndependentAggregateInstance"},{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Transaction Boundary Patterns"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Transaction Boundary Patterns FunctionModelAggregate_AtomicOperations_ShouldSucceedOrFailAsUnit","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057604,"status":"passed","title":"FunctionModelAggregate_AtomicOperations_ShouldSucceedOrFailAsUnit"},{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Transaction Boundary Patterns"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Transaction Boundary Patterns FunctionModelAggregate_ComplexWorkflowTransaction_ShouldMaintainConsistency","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057608,"status":"passed","title":"FunctionModelAggregate_ComplexWorkflowTransaction_ShouldMaintainConsistency"},{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Boundary Violation Detection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Boundary Violation Detection CrossAggregateDependencies_ShouldPreventDirectObjectReferences","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057610,"status":"passed","title":"CrossAggregateDependencies_ShouldPreventDirectObjectReferences"},{"ancestorTitles":["Aggregate Boundary Validation - Clean Architecture Compliance","Boundary Violation Detection"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Aggregate Boundary Validation - Clean Architecture Compliance Boundary Violation Detection AggregateIntegrity_ShouldPreventOrphanedEntities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057611,"status":"passed","title":"AggregateIntegrity_ShouldPreventOrphanedEntities"}],"endTime":1756394057612,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\aggregates\\aggregate-boundary-validation.test.ts","startTime":1756394057365,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CrossFeatureLinkingService","Cross-Feature Link Creation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Cross-Feature Link Creation should create a cross-feature link successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057619,"status":"passed","title":"should create a cross-feature link successfully"},{"ancestorTitles":["CrossFeatureLinkingService","Cross-Feature Link Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Cross-Feature Link Creation should reject invalid link types for feature combinations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057621,"status":"passed","title":"should reject invalid link types for feature combinations"},{"ancestorTitles":["CrossFeatureLinkingService","Cross-Feature Link Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Cross-Feature Link Creation should prevent duplicate link creation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057622,"status":"passed","title":"should prevent duplicate link creation"},{"ancestorTitles":["CrossFeatureLinkingService","Cross-Feature Link Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Cross-Feature Link Creation should set custom initial strength","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057623,"status":"passed","title":"should set custom initial strength"},{"ancestorTitles":["CrossFeatureLinkingService","Node Link Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Node Link Creation should create a node link successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057624,"status":"passed","title":"should create a node link successfully"},{"ancestorTitles":["CrossFeatureLinkingService","Node Link Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Node Link Creation should set custom initial strength for node links","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057625,"status":"passed","title":"should set custom initial strength for node links"},{"ancestorTitles":["CrossFeatureLinkingService","Link Strength Calculation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Strength Calculation should calculate link strength correctly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057626,"status":"passed","title":"should calculate link strength correctly"},{"ancestorTitles":["CrossFeatureLinkingService","Link Strength Calculation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Strength Calculation should cap frequency bonus at 0.2","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057628,"status":"passed","title":"should cap frequency bonus at 0.2"},{"ancestorTitles":["CrossFeatureLinkingService","Link Strength Calculation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Strength Calculation should cap semantic bonus at 0.3","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057628,"status":"passed","title":"should cap semantic bonus at 0.3"},{"ancestorTitles":["CrossFeatureLinkingService","Link Strength Calculation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Strength Calculation should cap final strength at 1.0","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057629,"status":"passed","title":"should cap final strength at 1.0"},{"ancestorTitles":["CrossFeatureLinkingService","Link Strength Calculation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Strength Calculation should fail for non-existent link","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057630,"status":"passed","title":"should fail for non-existent link"},{"ancestorTitles":["CrossFeatureLinkingService","Relationship Cycle Detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Relationship Cycle Detection should detect relationship cycles","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057631,"status":"passed","title":"should detect relationship cycles"},{"ancestorTitles":["CrossFeatureLinkingService","Relationship Cycle Detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Relationship Cycle Detection should handle networks without cycles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057632,"status":"passed","title":"should handle networks without cycles"},{"ancestorTitles":["CrossFeatureLinkingService","Link Constraint Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Constraint Validation should validate allowed link types between features","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057633,"status":"passed","title":"should validate allowed link types between features"},{"ancestorTitles":["CrossFeatureLinkingService","Link Constraint Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Constraint Validation should reject disallowed link types","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057634,"status":"passed","title":"should reject disallowed link types"},{"ancestorTitles":["CrossFeatureLinkingService","Link Constraint Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Constraint Validation should generate warnings for excessive connections","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057635,"status":"passed","title":"should generate warnings for excessive connections"},{"ancestorTitles":["CrossFeatureLinkingService","Link Constraint Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Constraint Validation should warn about trigger performance issues","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057636,"status":"passed","title":"should warn about trigger performance issues"},{"ancestorTitles":["CrossFeatureLinkingService","Feature Link Queries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Feature Link Queries should get all links for a feature","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057637,"status":"passed","title":"should get all links for a feature"},{"ancestorTitles":["CrossFeatureLinkingService","Feature Link Queries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Feature Link Queries should get links by type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057638,"status":"passed","title":"should get links by type"},{"ancestorTitles":["CrossFeatureLinkingService","Feature Link Queries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Feature Link Queries should return empty array for feature with no links","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057639,"status":"passed","title":"should return empty array for feature with no links"},{"ancestorTitles":["CrossFeatureLinkingService","Network Metrics"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Network Metrics should calculate network metrics correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057640,"status":"passed","title":"should calculate network metrics correctly"},{"ancestorTitles":["CrossFeatureLinkingService","Network Metrics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Network Metrics should handle empty network","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057642,"status":"passed","title":"should handle empty network"},{"ancestorTitles":["CrossFeatureLinkingService","Network Metrics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Network Metrics should calculate feature connectivity","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057643,"status":"passed","title":"should calculate feature connectivity"},{"ancestorTitles":["CrossFeatureLinkingService","Link Removal"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Removal should remove link successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057644,"status":"passed","title":"should remove link successfully"},{"ancestorTitles":["CrossFeatureLinkingService","Link Removal"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Removal should fail to remove non-existent link","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057646,"status":"passed","title":"should fail to remove non-existent link"},{"ancestorTitles":["CrossFeatureLinkingService","Link Removal"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Link Removal should update feature connections after removal","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057649,"status":"passed","title":"should update feature connections after removal"},{"ancestorTitles":["CrossFeatureLinkingService","Edge Cases and Error Handling"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Edge Cases and Error Handling should handle bidirectional feature compatibility","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057651,"status":"passed","title":"should handle bidirectional feature compatibility"},{"ancestorTitles":["CrossFeatureLinkingService","Edge Cases and Error Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Edge Cases and Error Handling should handle unknown feature combinations gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057656,"status":"passed","title":"should handle unknown feature combinations gracefully"},{"ancestorTitles":["CrossFeatureLinkingService","Edge Cases and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Edge Cases and Error Handling should handle strength calculation with zero values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057656,"status":"passed","title":"should handle strength calculation with zero values"},{"ancestorTitles":["CrossFeatureLinkingService","Edge Cases and Error Handling"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLinkingService Edge Cases and Error Handling should handle large networks efficiently","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057657,"status":"passed","title":"should handle large networks efficiently"}],"endTime":1756394057666,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\cross-feature-linking-service.test.ts","startTime":1756394057402,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ManageFractalOrchestrationUseCase","UC-013: Fractal Orchestration Management - Main Success Scenario"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase UC-013: Fractal Orchestration Management - Main Success Scenario should_ExecuteCompleteFractalOrchestration_WhenValidCommandProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057684,"status":"passed","title":"should_ExecuteCompleteFractalOrchestration_WhenValidCommandProvided"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","UC-013: Fractal Orchestration Management - Main Success Scenario"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase UC-013: Fractal Orchestration Management - Main Success Scenario should_FailGracefully_WhenPlanningFails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057686,"status":"passed","title":"should_FailGracefully_WhenPlanningFails"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Multi-Level Nested Function Model Execution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Multi-Level Nested Function Model Execution should_ExecuteDeeplyNestedModels_WhenValidHierarchyProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057687,"status":"passed","title":"should_ExecuteDeeplyNestedModels_WhenValidHierarchyProvided"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Multi-Level Nested Function Model Execution"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Multi-Level Nested Function Model Execution should_HandleExecutionFailure_WhenSpecificLevelFails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057688,"status":"passed","title":"should_HandleExecutionFailure_WhenSpecificLevelFails"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Context Propagation and Consistency Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Context Propagation and Consistency Validation should_PropagateContextThroughLevels_WhenValidContextProvided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057689,"status":"passed","title":"should_PropagateContextThroughLevels_WhenValidContextProvided"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Context Propagation and Consistency Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Context Propagation and Consistency Validation should_ValidateConsistency_WhenConsistencyCheckEnabled","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057690,"status":"passed","title":"should_ValidateConsistency_WhenConsistencyCheckEnabled"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Context Propagation and Consistency Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Context Propagation and Consistency Validation should_FailExecution_WhenConsistencyValidationFails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057691,"status":"passed","title":"should_FailExecution_WhenConsistencyValidationFails"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Vertical Nesting and Horizontal Scaling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Vertical Nesting and Horizontal Scaling should_CoordinateScaling_WhenBothNestingAndScalingEnabled","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057692,"status":"passed","title":"should_CoordinateScaling_WhenBothNestingAndScalingEnabled"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Result Aggregation and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Result Aggregation and Error Handling should_AggregateResults_WhenAllLevelsComplete","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057693,"status":"passed","title":"should_AggregateResults_WhenAllLevelsComplete"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Result Aggregation and Error Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Result Aggregation and Error Handling should_HandleMaxDepthExceeded_WhenDeepNestingDetected","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057694,"status":"passed","title":"should_HandleMaxDepthExceeded_WhenDeepNestingDetected"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Input Validation and Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Input Validation and Edge Cases should_RejectEmptyModel_WhenNoModelProvided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057695,"status":"passed","title":"should_RejectEmptyModel_WhenNoModelProvided"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Input Validation and Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Input Validation and Edge Cases should_RejectInvalidDepth_WhenMaxDepthIsZero","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057697,"status":"passed","title":"should_RejectInvalidDepth_WhenMaxDepthIsZero"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Input Validation and Edge Cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Input Validation and Edge Cases should_RejectExcessiveDepth_WhenMaxDepthExceedsLimit","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057698,"status":"passed","title":"should_RejectExcessiveDepth_WhenMaxDepthExceedsLimit"},{"ancestorTitles":["ManageFractalOrchestrationUseCase","Input Validation and Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageFractalOrchestrationUseCase Input Validation and Edge Cases should_ProvideDefaultContext_WhenNoInitialContextProvided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057698,"status":"passed","title":"should_ProvideDefaultContext_WhenNoInitialContextProvided"}],"endTime":1756394057700,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\manage-fractal-orchestration-use-case.test.ts","startTime":1756394057459,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Context Service Interface Definition","Expected buildContext Method Contract"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Expected buildContext Method Contract should define buildContext method signature and behavior","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057694,"status":"passed","title":"should define buildContext method signature and behavior"},{"ancestorTitles":["Context Service Interface Definition","Expected buildContext Method Contract"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Expected buildContext Method Contract should handle context inheritance when parent context provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057695,"status":"passed","title":"should handle context inheritance when parent context provided"},{"ancestorTitles":["Context Service Interface Definition","Expected clearNodeContext Method Contract"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Expected clearNodeContext Method Contract should define clearNodeContext method signature and behavior","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057696,"status":"passed","title":"should define clearNodeContext method signature and behavior"},{"ancestorTitles":["Context Service Interface Definition","Expected propagateContext Method Contract"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Expected propagateContext Method Contract should define propagateContext method signature and behavior","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057697,"status":"passed","title":"should define propagateContext method signature and behavior"},{"ancestorTitles":["Context Service Interface Definition","Expected getHierarchicalContext Method Contract"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Expected getHierarchicalContext Method Contract should define getHierarchicalContext method signature and behavior","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057698,"status":"passed","title":"should define getHierarchicalContext method signature and behavior"},{"ancestorTitles":["Context Service Interface Definition","Expected validateContextAccess Method Contract"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Expected validateContextAccess Method Contract should define validateContextAccess method signature and behavior","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057699,"status":"passed","title":"should define validateContextAccess method signature and behavior"},{"ancestorTitles":["Context Service Interface Definition","Expected Context Scope Management Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Expected Context Scope Management Methods should define cloneContextScope method signature and behavior","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057700,"status":"passed","title":"should define cloneContextScope method signature and behavior"},{"ancestorTitles":["Context Service Interface Definition","Expected Context Scope Management Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Expected Context Scope Management Methods should define mergeContextScopes method signature and behavior","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057700,"status":"passed","title":"should define mergeContextScopes method signature and behavior"},{"ancestorTitles":["Context Service Interface Definition","Error Handling and Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Error Handling and Edge Cases should define expected error handling patterns","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057701,"status":"passed","title":"should define expected error handling patterns"},{"ancestorTitles":["Context Service Interface Definition","Error Handling and Edge Cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Error Handling and Edge Cases should define expected concurrency handling","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057702,"status":"passed","title":"should define expected concurrency handling"},{"ancestorTitles":["Context Service Interface Definition","Mock Object Templates"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Context Service Interface Definition Mock Object Templates should provide correct mock template for complete context service","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057702,"status":"passed","title":"should provide correct mock template for complete context service"}],"endTime":1756394057705,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\context-service-interface-definition.test.ts","startTime":1756394057464,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Node","Construction and Properties"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Construction and Properties should create node with valid properties","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"startAt":1756394057698,"status":"passed","title":"should create node with valid properties"},{"ancestorTitles":["Node","Construction and Properties"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Construction and Properties should create node with minimal required properties","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057702,"status":"passed","title":"should create node with minimal required properties"},{"ancestorTitles":["Node","Construction and Properties"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Construction and Properties should return correct node type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057703,"status":"passed","title":"should return correct node type"},{"ancestorTitles":["Node","Construction and Properties"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Construction and Properties should provide readonly dependencies access","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057704,"status":"passed","title":"should provide readonly dependencies access"},{"ancestorTitles":["Node","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Name Management should update name successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057704,"status":"passed","title":"should update name successfully"},{"ancestorTitles":["Node","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Name Management should trim whitespace from name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057705,"status":"passed","title":"should trim whitespace from name"},{"ancestorTitles":["Node","Name Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Name Management should reject empty name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057706,"status":"passed","title":"should reject empty name"},{"ancestorTitles":["Node","Name Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Name Management should reject whitespace-only name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057707,"status":"passed","title":"should reject whitespace-only name"},{"ancestorTitles":["Node","Name Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Name Management should reject name exceeding 200 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057707,"status":"passed","title":"should reject name exceeding 200 characters"},{"ancestorTitles":["Node","Name Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Name Management should allow name exactly 200 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057708,"status":"passed","title":"should allow name exactly 200 characters"},{"ancestorTitles":["Node","Description Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Description Management should update description successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057708,"status":"passed","title":"should update description successfully"},{"ancestorTitles":["Node","Description Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Description Management should allow undefined description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057709,"status":"passed","title":"should allow undefined description"},{"ancestorTitles":["Node","Description Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Description Management should trim whitespace from description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057709,"status":"passed","title":"should trim whitespace from description"},{"ancestorTitles":["Node","Description Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Description Management should allow empty string description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057710,"status":"passed","title":"should allow empty string description"},{"ancestorTitles":["Node","Description Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Description Management should reject description exceeding 1000 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057713,"status":"passed","title":"should reject description exceeding 1000 characters"},{"ancestorTitles":["Node","Description Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Description Management should allow description exactly 1000 characters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057713,"status":"passed","title":"should allow description exactly 1000 characters"},{"ancestorTitles":["Node","Position Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Management should update position successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057714,"status":"passed","title":"should update position successfully"},{"ancestorTitles":["Node","Position Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Management should handle edge position values","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057716,"status":"passed","title":"should handle edge position values"},{"ancestorTitles":["Node","Dependency Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Dependency Management should add dependency successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057717,"status":"passed","title":"should add dependency successfully"},{"ancestorTitles":["Node","Dependency Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Dependency Management should add multiple dependencies","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057718,"status":"passed","title":"should add multiple dependencies"},{"ancestorTitles":["Node","Dependency Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Dependency Management should reject duplicate dependency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057720,"status":"passed","title":"should reject duplicate dependency"},{"ancestorTitles":["Node","Dependency Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Dependency Management should reject self-dependency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057720,"status":"passed","title":"should reject self-dependency"},{"ancestorTitles":["Node","Dependency Management"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Dependency Management should remove dependency successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057721,"status":"passed","title":"should remove dependency successfully"},{"ancestorTitles":["Node","Dependency Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Dependency Management should reject removing non-existent dependency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057726,"status":"passed","title":"should reject removing non-existent dependency"},{"ancestorTitles":["Node","Dependency Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Dependency Management should handle removing last dependency","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057727,"status":"passed","title":"should handle removing last dependency"},{"ancestorTitles":["Node","Execution Type Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Execution Type Management should update execution type successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057727,"status":"passed","title":"should update execution type successfully"},{"ancestorTitles":["Node","Execution Type Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Execution Type Management should handle all execution types","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394057728,"status":"passed","title":"should handle all execution types"},{"ancestorTitles":["Node","Status Transitions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions should update status successfully with valid transition","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057729,"status":"passed","title":"should update status successfully with valid transition"},{"ancestorTitles":["Node","Status Transitions","from DRAFT status"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions from DRAFT status should allow transition to ACTIVE","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057730,"status":"passed","title":"should allow transition to ACTIVE"},{"ancestorTitles":["Node","Status Transitions","from DRAFT status"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions from DRAFT status should allow transition to ARCHIVED","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057731,"status":"passed","title":"should allow transition to ARCHIVED"},{"ancestorTitles":["Node","Status Transitions","from DRAFT status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions from DRAFT status should reject invalid transitions","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057731,"status":"passed","title":"should reject invalid transitions"},{"ancestorTitles":["Node","Status Transitions","from ACTIVE status"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions from ACTIVE status should allow valid transitions","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057732,"status":"passed","title":"should allow valid transitions"},{"ancestorTitles":["Node","Status Transitions","from ACTIVE status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions from ACTIVE status should reject invalid transitions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057737,"status":"passed","title":"should reject invalid transitions"},{"ancestorTitles":["Node","Status Transitions","from INACTIVE status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions from INACTIVE status should allow valid transitions","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057738,"status":"passed","title":"should allow valid transitions"},{"ancestorTitles":["Node","Status Transitions","from ARCHIVED status"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions from ARCHIVED status should reject all transitions from archived","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057739,"status":"passed","title":"should reject all transitions from archived"},{"ancestorTitles":["Node","Status Transitions","from ERROR status"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions from ERROR status should allow valid transitions","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057741,"status":"passed","title":"should allow valid transitions"},{"ancestorTitles":["Node","Status Transitions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Status Transitions should test status transition logic directly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057742,"status":"passed","title":"should test status transition logic directly"},{"ancestorTitles":["Node","Metadata Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Metadata Management should update metadata successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057743,"status":"passed","title":"should update metadata successfully"},{"ancestorTitles":["Node","Metadata Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Metadata Management should create defensive copy of metadata","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057744,"status":"passed","title":"should create defensive copy of metadata"},{"ancestorTitles":["Node","Metadata Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Metadata Management should handle empty metadata","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057745,"status":"passed","title":"should handle empty metadata"},{"ancestorTitles":["Node","Metadata Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Metadata Management should handle complex metadata objects","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057745,"status":"passed","title":"should handle complex metadata objects"},{"ancestorTitles":["Node","Visual Properties Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Visual Properties Management should update visual properties successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057746,"status":"passed","title":"should update visual properties successfully"},{"ancestorTitles":["Node","Visual Properties Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Visual Properties Management should create defensive copy of visual properties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057746,"status":"passed","title":"should create defensive copy of visual properties"},{"ancestorTitles":["Node","Visual Properties Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Visual Properties Management should handle empty visual properties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057747,"status":"passed","title":"should handle empty visual properties"},{"ancestorTitles":["Node","Visual Properties Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Visual Properties Management should handle complex visual properties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057747,"status":"passed","title":"should handle complex visual properties"},{"ancestorTitles":["Node","Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Equality and Comparison should be equal when node IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057748,"status":"passed","title":"should be equal when node IDs match"},{"ancestorTitles":["Node","Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Equality and Comparison should not be equal when node IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057748,"status":"passed","title":"should not be equal when node IDs differ"},{"ancestorTitles":["Node","Timestamp Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Timestamp Management should update timestamp on any property change","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1756394057748,"status":"passed","title":"should update timestamp on any property change"},{"ancestorTitles":["Node","Timestamp Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Timestamp Management should preserve creation timestamp","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057749,"status":"passed","title":"should preserve creation timestamp"},{"ancestorTitles":["Node","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Business Logic Integration should maintain consistency during complex operations","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394057749,"status":"passed","title":"should maintain consistency during complex operations"},{"ancestorTitles":["Node","Business Logic Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Business Logic Integration should handle error scenarios gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057751,"status":"passed","title":"should handle error scenarios gracefully"},{"ancestorTitles":["Node","Business Logic Integration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Business Logic Integration should handle dependency cycles prevention","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057751,"status":"passed","title":"should handle dependency cycles prevention"},{"ancestorTitles":["Node","Business Logic Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Node Business Logic Integration should maintain state consistency during status transitions","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057752,"status":"passed","title":"should maintain state consistency during status transitions"}],"endTime":1756394057754,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\node.test.ts","startTime":1756394057490,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CrossFeatureLink","Factory Creation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Factory Creation should create cross-feature link with valid properties","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057659,"status":"passed","title":"should create cross-feature link with valid properties"},{"ancestorTitles":["CrossFeatureLink","Factory Creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Factory Creation should create link without node context","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057661,"status":"passed","title":"should create link without node context"},{"ancestorTitles":["CrossFeatureLink","Factory Creation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Factory Creation should create link with node context","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057662,"status":"passed","title":"should create link with node context"},{"ancestorTitles":["CrossFeatureLink","Factory Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Factory Creation should set creation and update timestamps","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057662,"status":"passed","title":"should set creation and update timestamps"},{"ancestorTitles":["CrossFeatureLink","Property Access"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Property Access should provide access to all properties","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057663,"status":"passed","title":"should provide access to all properties"},{"ancestorTitles":["CrossFeatureLink","Property Access"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Property Access should provide readonly access to node context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057664,"status":"passed","title":"should provide readonly access to node context"},{"ancestorTitles":["CrossFeatureLink","Property Access"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Property Access should return undefined for missing node context","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057665,"status":"passed","title":"should return undefined for missing node context"},{"ancestorTitles":["CrossFeatureLink","Link Strength Management"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Strength Management should update link strength successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057666,"status":"passed","title":"should update link strength successfully"},{"ancestorTitles":["CrossFeatureLink","Link Strength Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Strength Management should allow minimum link strength (0.0)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057681,"status":"passed","title":"should allow minimum link strength (0.0)"},{"ancestorTitles":["CrossFeatureLink","Link Strength Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Strength Management should allow maximum link strength (1.0)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057682,"status":"passed","title":"should allow maximum link strength (1.0)"},{"ancestorTitles":["CrossFeatureLink","Link Strength Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Strength Management should reject negative link strength","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057683,"status":"passed","title":"should reject negative link strength"},{"ancestorTitles":["CrossFeatureLink","Link Strength Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Strength Management should reject link strength greater than 1.0","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057685,"status":"passed","title":"should reject link strength greater than 1.0"},{"ancestorTitles":["CrossFeatureLink","Node Context Management"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Node Context Management should update node context successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057686,"status":"passed","title":"should update node context successfully"},{"ancestorTitles":["CrossFeatureLink","Node Context Management"],"duration":18,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Node Context Management should allow setting context to undefined","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057698,"status":"passed","title":"should allow setting context to undefined"},{"ancestorTitles":["CrossFeatureLink","Node Context Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Node Context Management should create defensive copy of context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057716,"status":"passed","title":"should create defensive copy of context"},{"ancestorTitles":["CrossFeatureLink","Node Context Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Node Context Management should validate required fields in node context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057717,"status":"passed","title":"should validate required fields in node context"},{"ancestorTitles":["CrossFeatureLink","Node Context Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Node Context Management should reject context missing nodeType field","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057718,"status":"passed","title":"should reject context missing nodeType field"},{"ancestorTitles":["CrossFeatureLink","Node Context Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Node Context Management should handle empty object context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057719,"status":"passed","title":"should handle empty object context"},{"ancestorTitles":["CrossFeatureLink","Link Type Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Type Management should update link type successfully with compatible type","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057719,"status":"passed","title":"should update link type successfully with compatible type"},{"ancestorTitles":["CrossFeatureLink","Link Type Management"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Type Management should handle FUNCTION_MODEL to KNOWLEDGE_BASE compatible types","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057721,"status":"passed","title":"should handle FUNCTION_MODEL to KNOWLEDGE_BASE compatible types"},{"ancestorTitles":["CrossFeatureLink","Link Type Management"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Type Management should reject incompatible link types for feature pair","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057726,"status":"passed","title":"should reject incompatible link types for feature pair"},{"ancestorTitles":["CrossFeatureLink","Link Type Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Type Management should handle FUNCTION_MODEL to SPINDLE compatible types","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057726,"status":"passed","title":"should handle FUNCTION_MODEL to SPINDLE compatible types"},{"ancestorTitles":["CrossFeatureLink","Link Type Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Type Management should handle bidirectional compatibility","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057728,"status":"passed","title":"should handle bidirectional compatibility"},{"ancestorTitles":["CrossFeatureLink","Link Classification Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Classification Methods should identify cross-feature link correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057729,"status":"passed","title":"should identify cross-feature link correctly"},{"ancestorTitles":["CrossFeatureLink","Link Classification Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Classification Methods should identify different link types correctly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057730,"status":"passed","title":"should identify different link types correctly"},{"ancestorTitles":["CrossFeatureLink","Link Classification Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Classification Methods should identify strong link correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057731,"status":"passed","title":"should identify strong link correctly"},{"ancestorTitles":["CrossFeatureLink","Link Classification Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Classification Methods should identify weak link correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057732,"status":"passed","title":"should identify weak link correctly"},{"ancestorTitles":["CrossFeatureLink","Link Classification Methods"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Classification Methods should handle boundary values for strong/weak links","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057733,"status":"passed","title":"should handle boundary values for strong/weak links"},{"ancestorTitles":["CrossFeatureLink","Link Classification Methods"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Classification Methods should correctly identify node context presence","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057734,"status":"passed","title":"should correctly identify node context presence"},{"ancestorTitles":["CrossFeatureLink","Equality and Comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Equality and Comparison should be equal when link IDs match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057735,"status":"passed","title":"should be equal when link IDs match"},{"ancestorTitles":["CrossFeatureLink","Equality and Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Equality and Comparison should not be equal when link IDs differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057735,"status":"passed","title":"should not be equal when link IDs differ"},{"ancestorTitles":["CrossFeatureLink","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Validation Rules should allow same feature links between different entities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057736,"status":"passed","title":"should allow same feature links between different entities"},{"ancestorTitles":["CrossFeatureLink","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Validation Rules should reject entity-level self-links","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057737,"status":"passed","title":"should reject entity-level self-links"},{"ancestorTitles":["CrossFeatureLink","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Validation Rules should reject empty source entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057737,"status":"passed","title":"should reject empty source entity ID"},{"ancestorTitles":["CrossFeatureLink","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Validation Rules should reject whitespace-only source entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057737,"status":"passed","title":"should reject whitespace-only source entity ID"},{"ancestorTitles":["CrossFeatureLink","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Validation Rules should reject empty target entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057739,"status":"passed","title":"should reject empty target entity ID"},{"ancestorTitles":["CrossFeatureLink","Validation Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Validation Rules should reject whitespace-only target entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057739,"status":"passed","title":"should reject whitespace-only target entity ID"},{"ancestorTitles":["CrossFeatureLink","Validation Rules"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Validation Rules should reject invalid link strength during creation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057740,"status":"passed","title":"should reject invalid link strength during creation"},{"ancestorTitles":["CrossFeatureLink","Validation Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Validation Rules should reject link strength greater than 1.0 during creation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057743,"status":"passed","title":"should reject link strength greater than 1.0 during creation"},{"ancestorTitles":["CrossFeatureLink","Feature Compatibility Matrix"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Feature Compatibility Matrix should validate FUNCTION_MODEL to EVENT_STORM compatibility","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057744,"status":"passed","title":"should validate FUNCTION_MODEL to EVENT_STORM compatibility"},{"ancestorTitles":["CrossFeatureLink","Feature Compatibility Matrix"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Feature Compatibility Matrix should validate KNOWLEDGE_BASE to SPINDLE compatibility","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057745,"status":"passed","title":"should validate KNOWLEDGE_BASE to SPINDLE compatibility"},{"ancestorTitles":["CrossFeatureLink","Feature Compatibility Matrix"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Feature Compatibility Matrix should allow all link types for undefined feature pairs","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057745,"status":"passed","title":"should allow all link types for undefined feature pairs"},{"ancestorTitles":["CrossFeatureLink","Business Logic Integration"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Business Logic Integration should maintain consistency during complex operations","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057746,"status":"passed","title":"should maintain consistency during complex operations"},{"ancestorTitles":["CrossFeatureLink","Business Logic Integration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Business Logic Integration should handle error scenarios gracefully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057760,"status":"passed","title":"should handle error scenarios gracefully"},{"ancestorTitles":["CrossFeatureLink","Business Logic Integration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Business Logic Integration should support all feature combinations that require cross-feature links","invocations":1,"location":null,"numPassingAsserts":24,"retryReasons":[],"startAt":1756394057760,"status":"passed","title":"should support all feature combinations that require cross-feature links"},{"ancestorTitles":["CrossFeatureLink","Link Strength Categories"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CrossFeatureLink Link Strength Categories should correctly categorize various link strengths","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"startAt":1756394057763,"status":"passed","title":"should correctly categorize various link strengths"}],"endTime":1756394057767,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\entities\\cross-feature-link.test.ts","startTime":1756394057434,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["RetryPolicy","creation with default values"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy creation with default values should create default retry policy","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057809,"status":"passed","title":"should create default retry policy"},{"ancestorTitles":["RetryPolicy","creation with custom values"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy creation with custom values should create retry policy with valid parameters","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057811,"status":"passed","title":"should create retry policy with valid parameters"},{"ancestorTitles":["RetryPolicy","creation with custom values"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy creation with custom values should create disabled retry policy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057813,"status":"passed","title":"should create disabled retry policy"},{"ancestorTitles":["RetryPolicy","validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy validation failures should reject negative max attempts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057813,"status":"passed","title":"should reject negative max attempts"},{"ancestorTitles":["RetryPolicy","validation failures"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy validation failures should reject excessive max attempts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057814,"status":"passed","title":"should reject excessive max attempts"},{"ancestorTitles":["RetryPolicy","validation failures"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy validation failures should reject negative base delay","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057814,"status":"passed","title":"should reject negative base delay"},{"ancestorTitles":["RetryPolicy","validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy validation failures should reject max delay less than base delay","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057814,"status":"passed","title":"should reject max delay less than base delay"},{"ancestorTitles":["RetryPolicy","validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy validation failures should reject invalid multiplier values","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057815,"status":"passed","title":"should reject invalid multiplier values"},{"ancestorTitles":["RetryPolicy","validation failures"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy validation failures should reject invalid strategy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057816,"status":"passed","title":"should reject invalid strategy"},{"ancestorTitles":["RetryPolicy","backoff calculation - exponential strategy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy backoff calculation - exponential strategy should calculate exponential backoff correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057816,"status":"passed","title":"should calculate exponential backoff correctly"},{"ancestorTitles":["RetryPolicy","backoff calculation - exponential strategy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy backoff calculation - exponential strategy should cap delay at maxDelayMs","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057817,"status":"passed","title":"should cap delay at maxDelayMs"},{"ancestorTitles":["RetryPolicy","backoff calculation - exponential strategy"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy backoff calculation - exponential strategy should handle custom multiplier","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057818,"status":"passed","title":"should handle custom multiplier"},{"ancestorTitles":["RetryPolicy","backoff calculation - linear strategy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy backoff calculation - linear strategy should calculate linear backoff correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057818,"status":"passed","title":"should calculate linear backoff correctly"},{"ancestorTitles":["RetryPolicy","backoff calculation - linear strategy"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy backoff calculation - linear strategy should cap linear backoff at maxDelayMs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057819,"status":"passed","title":"should cap linear backoff at maxDelayMs"},{"ancestorTitles":["RetryPolicy","backoff calculation - immediate strategy"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy backoff calculation - immediate strategy should return zero delay for immediate strategy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057820,"status":"passed","title":"should return zero delay for immediate strategy"},{"ancestorTitles":["RetryPolicy","jitter calculation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy jitter calculation should add jitter to calculated delay","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057821,"status":"passed","title":"should add jitter to calculated delay"},{"ancestorTitles":["RetryPolicy","jitter calculation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy jitter calculation should not exceed maxDelayMs even with jitter","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394057823,"status":"passed","title":"should not exceed maxDelayMs even with jitter"},{"ancestorTitles":["RetryPolicy","retry attempt validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy retry attempt validation should validate attempt number is within limits","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057825,"status":"passed","title":"should validate attempt number is within limits"},{"ancestorTitles":["RetryPolicy","retry attempt validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy retry attempt validation should not retry when disabled","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057826,"status":"passed","title":"should not retry when disabled"},{"ancestorTitles":["RetryPolicy","equality and comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy equality and comparison should be equal when all properties match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057826,"status":"passed","title":"should be equal when all properties match"},{"ancestorTitles":["RetryPolicy","equality and comparison"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy equality and comparison should not be equal when properties differ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057827,"status":"passed","title":"should not be equal when properties differ"},{"ancestorTitles":["RetryPolicy","serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy serialization should convert to object representation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057827,"status":"passed","title":"should convert to object representation"},{"ancestorTitles":["RetryPolicy","serialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy serialization should create from object representation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057828,"status":"passed","title":"should create from object representation"},{"ancestorTitles":["RetryPolicy","boundary testing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy boundary testing should test numeric boundary conditions","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057829,"status":"passed","title":"should test numeric boundary conditions"},{"ancestorTitles":["RetryPolicy","boundary testing"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RetryPolicy boundary testing should handle edge cases gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057830,"status":"passed","title":"should handle edge cases gracefully"}],"endTime":1756394057832,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\value-objects\\retry-policy.test.ts","startTime":1756394057585,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModelVersioningService","Version Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Version Creation should create new versions from draft models","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057835,"status":"passed","title":"should create new versions from draft models"},{"ancestorTitles":["FunctionModelVersioningService","Version Creation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Version Creation should prevent version creation from non-draft models","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057836,"status":"passed","title":"should prevent version creation from non-draft models"},{"ancestorTitles":["FunctionModelVersioningService","Semantic Version Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Semantic Version Validation should validate semantic version numbering","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394057837,"status":"passed","title":"should validate semantic version numbering"},{"ancestorTitles":["FunctionModelVersioningService","Semantic Version Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Semantic Version Validation should enforce version increment rules","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057839,"status":"passed","title":"should enforce version increment rules"},{"ancestorTitles":["FunctionModelVersioningService","Publication State Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Publication State Management should manage publication state transitions","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057839,"status":"passed","title":"should manage publication state transitions"},{"ancestorTitles":["FunctionModelVersioningService","Publication State Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Publication State Management should enforce single published version per model","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057840,"status":"passed","title":"should enforce single published version per model"},{"ancestorTitles":["FunctionModelVersioningService","Version Immutability"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Version Immutability should ensure version immutability once created","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057841,"status":"passed","title":"should ensure version immutability once created"},{"ancestorTitles":["FunctionModelVersioningService","Version Immutability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Version Immutability should preserve complete model state in version data","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057852,"status":"passed","title":"should preserve complete model state in version data"},{"ancestorTitles":["FunctionModelVersioningService","Version Comparison and History"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Version Comparison and History should support version comparison operations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057853,"status":"passed","title":"should support version comparison operations"},{"ancestorTitles":["FunctionModelVersioningService","Version Comparison and History"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Version Comparison and History should maintain version history chain","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057854,"status":"passed","title":"should maintain version history chain"},{"ancestorTitles":["FunctionModelVersioningService","Error Handling and Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Error Handling and Edge Cases should handle duplicate version creation attempts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057854,"status":"passed","title":"should handle duplicate version creation attempts"},{"ancestorTitles":["FunctionModelVersioningService","Error Handling and Edge Cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Error Handling and Edge Cases should handle version rollback scenarios","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057855,"status":"passed","title":"should handle version rollback scenarios"},{"ancestorTitles":["FunctionModelVersioningService","Error Handling and Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Error Handling and Edge Cases should validate author information","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057855,"status":"passed","title":"should validate author information"},{"ancestorTitles":["FunctionModelVersioningService","Integration with Domain Events"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Integration with Domain Events should trigger version creation events","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057856,"status":"passed","title":"should trigger version creation events"},{"ancestorTitles":["FunctionModelVersioningService","Integration with Domain Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModelVersioningService Integration with Domain Events should include relevant data in version events","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057856,"status":"passed","title":"should include relevant data in version events"}],"endTime":1756394057858,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\function-model-versioning-service.test.ts","startTime":1756394057624,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","FunctionModelRepository Contract Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance FunctionModelRepository Contract Validation Save_ValidModel_ShouldReturnSuccessResult","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057851,"status":"passed","title":"Save_ValidModel_ShouldReturnSuccessResult"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","FunctionModelRepository Contract Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance FunctionModelRepository Contract Validation FindById_ExistingModel_ShouldReturnModelWithinResult","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057854,"status":"passed","title":"FindById_ExistingModel_ShouldReturnModelWithinResult"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","FunctionModelRepository Contract Validation"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance FunctionModelRepository Contract Validation FindById_NonExistentModel_ShouldReturnNullResult","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057855,"status":"passed","title":"FindById_NonExistentModel_ShouldReturnNullResult"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","FunctionModelRepository Contract Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance FunctionModelRepository Contract Validation FindByStatus_ValidStatus_ShouldReturnFilteredModels","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057855,"status":"passed","title":"FindByStatus_ValidStatus_ShouldReturnFilteredModels"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","FunctionModelRepository Contract Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance FunctionModelRepository Contract Validation Delete_ExistingModel_ShouldReturnSuccessResult","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057857,"status":"passed","title":"Delete_ExistingModel_ShouldReturnSuccessResult"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","FunctionModelRepository Contract Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance FunctionModelRepository Contract Validation Exists_ExistingModel_ShouldReturnTrue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057858,"status":"passed","title":"Exists_ExistingModel_ShouldReturnTrue"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","NodeRepository Contract Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance NodeRepository Contract Validation Save_ValidNode_ShouldReturnSuccessResult","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057859,"status":"passed","title":"Save_ValidNode_ShouldReturnSuccessResult"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","NodeRepository Contract Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance NodeRepository Contract Validation FindByModelId_ValidModelId_ShouldReturnModelNodes","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057861,"status":"passed","title":"FindByModelId_ValidModelId_ShouldReturnModelNodes"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","NodeRepository Contract Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance NodeRepository Contract Validation FindByType_ValidNodeType_ShouldReturnTypedNodes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057862,"status":"passed","title":"FindByType_ValidNodeType_ShouldReturnTypedNodes"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","Repository Error Handling Contracts"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance Repository Error Handling Contracts RepositoryOperations_WithInvalidData_ShouldReturnFailureResults","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057863,"status":"passed","title":"RepositoryOperations_WithInvalidData_ShouldReturnFailureResults"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","Repository Error Handling Contracts"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance Repository Error Handling Contracts RepositoryOperations_WithConcurrencyConflicts_ShouldHandleGracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057863,"status":"passed","title":"RepositoryOperations_WithConcurrencyConflicts_ShouldHandleGracefully"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","Repository Abstraction Stability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance Repository Abstraction Stability RepositoryInterfaces_ShouldRemainTechnologyAgnostic","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057863,"status":"passed","title":"RepositoryInterfaces_ShouldRemainTechnologyAgnostic"},{"ancestorTitles":["Repository Interface Contract Validation - Clean Architecture Compliance","Repository Abstraction Stability"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Repository Interface Contract Validation - Clean Architecture Compliance Repository Abstraction Stability RepositoryContracts_ShouldEnforceDomainBoundaries","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057864,"status":"passed","title":"RepositoryContracts_ShouldEnforceDomainBoundaries"}],"endTime":1756394057866,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\interfaces\\repository-interface-contracts.test.ts","startTime":1756394057620,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["FunctionModel Aggregate","Aggregate Root - FunctionModel"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Aggregate Root - FunctionModel should serve as the aggregate root for all contained entities","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057911,"status":"passed","title":"should serve as the aggregate root for all contained entities"},{"ancestorTitles":["FunctionModel Aggregate","Aggregate Root - FunctionModel"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Aggregate Root - FunctionModel should maintain referential integrity within aggregate","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057913,"status":"passed","title":"should maintain referential integrity within aggregate"},{"ancestorTitles":["FunctionModel Aggregate","Aggregate Boundary Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Aggregate Boundary Rules should enforce that container nodes cannot exist without parent model","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057914,"status":"passed","title":"should enforce that container nodes cannot exist without parent model"},{"ancestorTitles":["FunctionModel Aggregate","Aggregate Boundary Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Aggregate Boundary Rules should enforce that action nodes cannot exist without parent container","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057915,"status":"passed","title":"should enforce that action nodes cannot exist without parent container"},{"ancestorTitles":["FunctionModel Aggregate","Aggregate Boundary Rules"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Aggregate Boundary Rules should preserve complete model state in versions","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057915,"status":"passed","title":"should preserve complete model state in versions"},{"ancestorTitles":["FunctionModel Aggregate","Consistency Rules Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Consistency Rules Enforcement should validate container node dependencies are acyclic","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057916,"status":"passed","title":"should validate container node dependencies are acyclic"},{"ancestorTitles":["FunctionModel Aggregate","Consistency Rules Enforcement"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Consistency Rules Enforcement should validate action execution order within containers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057917,"status":"passed","title":"should validate action execution order within containers"},{"ancestorTitles":["FunctionModel Aggregate","Consistency Rules Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Consistency Rules Enforcement should enforce status propagation to contained entities","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057917,"status":"passed","title":"should enforce status propagation to contained entities"},{"ancestorTitles":["FunctionModel Aggregate","Consistency Rules Enforcement"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Consistency Rules Enforcement should maintain context access hierarchical rules","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057918,"status":"passed","title":"should maintain context access hierarchical rules"},{"ancestorTitles":["FunctionModel Aggregate","Execution Orchestration Consistency"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Execution Orchestration Consistency should validate execution modes and priorities within containers","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394057919,"status":"passed","title":"should validate execution modes and priorities within containers"},{"ancestorTitles":["FunctionModel Aggregate","Execution Orchestration Consistency"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Execution Orchestration Consistency should enforce retry policies validation for action types","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057920,"status":"passed","title":"should enforce retry policies validation for action types"},{"ancestorTitles":["FunctionModel Aggregate","Fractal Orchestration Pattern Consistency"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Fractal Orchestration Pattern Consistency should maintain orchestration patterns across nesting levels","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057921,"status":"passed","title":"should maintain orchestration patterns across nesting levels"},{"ancestorTitles":["FunctionModel Aggregate","Fractal Orchestration Pattern Consistency"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Fractal Orchestration Pattern Consistency should support deep nesting with parent privileges","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057921,"status":"passed","title":"should support deep nesting with parent privileges"},{"ancestorTitles":["FunctionModel Aggregate","Aggregate Transaction Boundaries"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Aggregate Transaction Boundaries should ensure atomic operations within aggregate","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057925,"status":"passed","title":"should ensure atomic operations within aggregate"},{"ancestorTitles":["FunctionModel Aggregate","Aggregate Transaction Boundaries"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"FunctionModel Aggregate Aggregate Transaction Boundaries should maintain consistency across aggregate modifications","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057925,"status":"passed","title":"should maintain consistency across aggregate modifications"}],"endTime":1756394057927,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\aggregates\\function-model-aggregate.test.ts","startTime":1756394057722,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_FollowCleanArchitecturePatterns_WhenImplementingUseCases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057933,"status":"passed","title":"should_FollowCleanArchitecturePatterns_WhenImplementingUseCases"},{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_FollowDependencyInversion_WhenInjectingDependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057934,"status":"passed","title":"should_FollowDependencyInversion_WhenInjectingDependencies"},{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_CoordinateDomainEntities_WithoutContainingBusinessLogic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057935,"status":"passed","title":"should_CoordinateDomainEntities_WithoutContainingBusinessLogic"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_MockAllDependencies_InUnitTests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057935,"status":"passed","title":"should_MockAllDependencies_InUnitTests"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_TestBothSuccessAndFailureScenarios_ForEachUseCase","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057935,"status":"passed","title":"should_TestBothSuccessAndFailureScenarios_ForEachUseCase"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_VerifyArchitecturalBoundaries_InEachTest","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057936,"status":"passed","title":"should_VerifyArchitecturalBoundaries_InEachTest"},{"ancestorTitles":["ApplicationLayerBasePattern","Naming Conventions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Naming Conventions should_UseDescriptiveTestNames_FollowingPattern","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057936,"status":"passed","title":"should_UseDescriptiveTestNames_FollowingPattern"},{"ancestorTitles":["ApplicationLayerBasePattern","Naming Conventions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Naming Conventions should_OrganizeTestsByBehavior_NotByImplementation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057936,"status":"passed","title":"should_OrganizeTestsByBehavior_NotByImplementation"}],"endTime":1756394057937,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\__tests__\\base-use-case.test.ts","startTime":1756394057768,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Function Model Lifecycle Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Function Model Lifecycle Events ModelCreation_ShouldRaiseModelCreatedEvent","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057937,"status":"passed","title":"ModelCreation_ShouldRaiseModelCreatedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Function Model Lifecycle Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Function Model Lifecycle Events ModelPublication_ShouldRaiseModelPublishedEvent","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057939,"status":"passed","title":"ModelPublication_ShouldRaiseModelPublishedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Function Model Lifecycle Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Function Model Lifecycle Events ModelArchival_ShouldRaiseModelArchivedEvent","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057940,"status":"passed","title":"ModelArchival_ShouldRaiseModelArchivedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Node Management Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Node Management Events ContainerNodeAddition_ShouldRaiseContainerNodeAddedEvent","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057941,"status":"passed","title":"ContainerNodeAddition_ShouldRaiseContainerNodeAddedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Node Management Events"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Node Management Events ActionNodeAddition_ShouldRaiseActionNodeAddedEvent","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057942,"status":"passed","title":"ActionNodeAddition_ShouldRaiseActionNodeAddedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Node Management Events"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Node Management Events NodeRemoval_ShouldRaiseContainerNodeRemovedEvent","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057946,"status":"passed","title":"NodeRemoval_ShouldRaiseContainerNodeRemovedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Action Node Execution Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Action Node Execution Events ActionExecutionStart_ShouldRaiseActionNodeExecutionStartedEvent","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057948,"status":"passed","title":"ActionExecutionStart_ShouldRaiseActionNodeExecutionStartedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Action Node Execution Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Action Node Execution Events ActionExecutionSuccess_ShouldRaiseActionNodeExecutionCompletedEvent","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057949,"status":"passed","title":"ActionExecutionSuccess_ShouldRaiseActionNodeExecutionCompletedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Action Node Execution Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Action Node Execution Events ActionExecutionFailure_ShouldRaiseActionNodeExecutionFailedEvent","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057950,"status":"passed","title":"ActionExecutionFailure_ShouldRaiseActionNodeExecutionFailedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Cross-Feature Relationship Events"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Cross-Feature Relationship Events NodeLinkCreation_ShouldRaiseNodeLinkCreatedEvent","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057951,"status":"passed","title":"NodeLinkCreation_ShouldRaiseNodeLinkCreatedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","AI Agent Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance AI Agent Events AIAgentConfiguration_ShouldRaiseAIAgentConfiguredEvent","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394057953,"status":"passed","title":"AIAgentConfiguration_ShouldRaiseAIAgentConfiguredEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","AI Agent Events"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance AI Agent Events AIAgentExecution_ShouldRaiseAIAgentExecutionStartedEvent","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057954,"status":"passed","title":"AIAgentExecution_ShouldRaiseAIAgentExecutionStartedEvent"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Event Integration and Consistency"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Event Integration and Consistency MultipleEvents_ShouldMaintainEventOrdering","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057955,"status":"passed","title":"MultipleEvents_ShouldMaintainEventOrdering"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Event Integration and Consistency"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Event Integration and Consistency EventHandlers_ShouldProcessEventsWithoutCouplingDomain","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057956,"status":"passed","title":"EventHandlers_ShouldProcessEventsWithoutCouplingDomain"},{"ancestorTitles":["Domain Event Behavior and Integration - Clean Architecture Compliance","Event Integration and Consistency"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Domain Event Behavior and Integration - Clean Architecture Compliance Event Integration and Consistency EventSourcing_ShouldProvideCompleteAuditTrail","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394057956,"status":"passed","title":"EventSourcing_ShouldProvideCompleteAuditTrail"}],"endTime":1756394057958,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\events\\domain-event-integration.test.ts","startTime":1756394057716,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_FollowCleanArchitecturePatterns_WhenImplementingUseCases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057907,"status":"passed","title":"should_FollowCleanArchitecturePatterns_WhenImplementingUseCases"},{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_FollowDependencyInversion_WhenInjectingDependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057911,"status":"passed","title":"should_FollowDependencyInversion_WhenInjectingDependencies"},{"ancestorTitles":["ApplicationLayerBasePattern","Clean Architecture Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Clean Architecture Compliance should_CoordinateDomainEntities_WithoutContainingBusinessLogic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057911,"status":"passed","title":"should_CoordinateDomainEntities_WithoutContainingBusinessLogic"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_MockAllDependencies_InUnitTests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057912,"status":"passed","title":"should_MockAllDependencies_InUnitTests"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_TestBothSuccessAndFailureScenarios_ForEachUseCase","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057912,"status":"passed","title":"should_TestBothSuccessAndFailureScenarios_ForEachUseCase"},{"ancestorTitles":["ApplicationLayerBasePattern","Test Pattern Requirements"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Test Pattern Requirements should_VerifyArchitecturalBoundaries_InEachTest","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057912,"status":"passed","title":"should_VerifyArchitecturalBoundaries_InEachTest"},{"ancestorTitles":["ApplicationLayerBasePattern","Naming Conventions"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Naming Conventions should_UseDescriptiveTestNames_FollowingPattern","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057912,"status":"passed","title":"should_UseDescriptiveTestNames_FollowingPattern"},{"ancestorTitles":["ApplicationLayerBasePattern","Naming Conventions"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ApplicationLayerBasePattern Naming Conventions should_OrganizeTestsByBehavior_NotByImplementation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057913,"status":"passed","title":"should_OrganizeTestsByBehavior_NotByImplementation"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","success scenarios - TetherNode"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute success scenarios - TetherNode should_AddTetherNodeToStageContainer_WhenValidCommandProvided","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057913,"status":"passed","title":"should_AddTetherNodeToStageContainer_WhenValidCommandProvided"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","success scenarios - TetherNode"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute success scenarios - TetherNode should_RejectAddingActionNodeToIONode_WhenIONodeUsedAsParent","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057917,"status":"passed","title":"should_RejectAddingActionNodeToIONode_WhenIONodeUsedAsParent"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","success scenarios - TetherNode"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute success scenarios - TetherNode should_ConfigureTetherNodeWithResourceRequirements_WhenSpecified","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057919,"status":"passed","title":"should_ConfigureTetherNodeWithResourceRequirements_WhenSpecified"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","success scenarios - KBNode"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute success scenarios - KBNode should_AddKBNodeToStageContainer_WhenValidCommandProvided","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057920,"status":"passed","title":"should_AddKBNodeToStageContainer_WhenValidCommandProvided"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","success scenarios - KBNode"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute success scenarios - KBNode should_AddKBNodeWithDocumentationContext_WhenProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057921,"status":"passed","title":"should_AddKBNodeWithDocumentationContext_WhenProvided"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","success scenarios - FunctionModelContainer"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute success scenarios - FunctionModelContainer should_AddFunctionModelContainerToStageNode_WhenValidCommandProvided","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057922,"status":"passed","title":"should_AddFunctionModelContainerToStageNode_WhenValidCommandProvided"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","success scenarios - FunctionModelContainer"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute success scenarios - FunctionModelContainer should_AddFunctionModelContainerWithContextInheritance_WhenProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057924,"status":"passed","title":"should_AddFunctionModelContainerWithContextInheritance_WhenProvided"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","execution order and priority management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute execution order and priority management should_AssignCorrectExecutionOrder_WhenMultipleActionsAdded","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"startAt":1756394057925,"status":"passed","title":"should_AssignCorrectExecutionOrder_WhenMultipleActionsAdded"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","execution order and priority management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute execution order and priority management should_HandleCustomRetryPolicyConfiguration_WhenProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057926,"status":"passed","title":"should_HandleCustomRetryPolicyConfiguration_WhenProvided"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","execution order and priority management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute execution order and priority management should_HandleCustomRACIAssignments_WhenProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057927,"status":"passed","title":"should_HandleCustomRACIAssignments_WhenProvided"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","container node relationship and persistence"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute container node relationship and persistence should_AddActionNodeToContainerAndPersistModel_WhenSuccessful","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057929,"status":"passed","title":"should_AddActionNodeToContainerAndPersistModel_WhenSuccessful"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","container node relationship and persistence"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute container node relationship and persistence should_PublishActionNodeAddedEvent_WhenActionAdditionSucceeds","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057930,"status":"passed","title":"should_PublishActionNodeAddedEvent_WhenActionAdditionSucceeds"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute validation failure scenarios should_ReturnValidationError_WhenModelIdIsEmpty","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057931,"status":"passed","title":"should_ReturnValidationError_WhenModelIdIsEmpty"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute validation failure scenarios should_ReturnValidationError_WhenParentNodeIdIsEmpty","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057932,"status":"passed","title":"should_ReturnValidationError_WhenParentNodeIdIsEmpty"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","validation failure scenarios"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute validation failure scenarios should_ReturnValidationError_WhenActionNameIsEmpty","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057933,"status":"passed","title":"should_ReturnValidationError_WhenActionNameIsEmpty"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","validation failure scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute validation failure scenarios should_ReturnValidationError_WhenActionTypeIsInvalid","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057937,"status":"passed","title":"should_ReturnValidationError_WhenActionTypeIsInvalid"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute validation failure scenarios should_ReturnValidationError_WhenExecutionOrderIsInvalid","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057937,"status":"passed","title":"should_ReturnValidationError_WhenExecutionOrderIsInvalid"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute validation failure scenarios should_ReturnValidationError_WhenPriorityIsOutOfRange","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057938,"status":"passed","title":"should_ReturnValidationError_WhenPriorityIsOutOfRange"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","validation failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute validation failure scenarios should_ReturnValidationError_WhenUserIdIsEmpty","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057939,"status":"passed","title":"should_ReturnValidationError_WhenUserIdIsEmpty"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","action-specific validation failures"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute action-specific validation failures should_ReturnValidationError_WhenTetherNodeMissingReferenceId","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057940,"status":"passed","title":"should_ReturnValidationError_WhenTetherNodeMissingReferenceId"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","action-specific validation failures"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute action-specific validation failures should_ReturnValidationError_WhenKBNodeMissingRequiredFields","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057941,"status":"passed","title":"should_ReturnValidationError_WhenKBNodeMissingRequiredFields"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","action-specific validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute action-specific validation failures should_ReturnValidationError_WhenFunctionModelContainerMissingNestedModelId","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057942,"status":"passed","title":"should_ReturnValidationError_WhenFunctionModelContainerMissingNestedModelId"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","action-specific validation failures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute action-specific validation failures should_ReturnValidationError_WhenKBNodeAccessPermissionsInvalid","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394057943,"status":"passed","title":"should_ReturnValidationError_WhenKBNodeAccessPermissionsInvalid"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","domain failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute domain failure scenarios should_ReturnNotFoundError_WhenModelDoesNotExist","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057944,"status":"passed","title":"should_ReturnNotFoundError_WhenModelDoesNotExist"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","domain failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute domain failure scenarios should_ReturnNotFoundError_WhenParentContainerNodeDoesNotExist","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057945,"status":"passed","title":"should_ReturnNotFoundError_WhenParentContainerNodeDoesNotExist"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","domain failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute domain failure scenarios should_ReturnBusinessRuleError_WhenParentNodeIsNotContainerType","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057946,"status":"passed","title":"should_ReturnBusinessRuleError_WhenParentNodeIsNotContainerType"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","domain failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute domain failure scenarios should_ReturnBusinessRuleError_WhenContainerRejectsActionNode","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057947,"status":"passed","title":"should_ReturnBusinessRuleError_WhenContainerRejectsActionNode"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","domain failure scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute domain failure scenarios should_ReturnDomainError_WhenActionNodeCreationFails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057948,"status":"passed","title":"should_ReturnDomainError_WhenActionNodeCreationFails"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","infrastructure failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute infrastructure failure scenarios should_ReturnRepositoryError_WhenModelRetrievalFails","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057948,"status":"passed","title":"should_ReturnRepositoryError_WhenModelRetrievalFails"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","infrastructure failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute infrastructure failure scenarios should_ReturnRepositoryError_WhenSaveFails","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394057949,"status":"passed","title":"should_ReturnRepositoryError_WhenSaveFails"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","infrastructure failure scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute infrastructure failure scenarios should_CompleteSuccessfully_WhenEventPublishingFails","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057950,"status":"passed","title":"should_CompleteSuccessfully_WhenEventPublishingFails"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","infrastructure failure scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute infrastructure failure scenarios should_HandleRepositoryExceptions_Gracefully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394057951,"status":"passed","title":"should_HandleRepositoryExceptions_Gracefully"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","architectural compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute architectural compliance should_OnlyDependOnDomainInterfaces_NeverConcreteImplementations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057951,"status":"passed","title":"should_OnlyDependOnDomainInterfaces_NeverConcreteImplementations"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","architectural compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute architectural compliance should_CoordinateDomainEntities_WithoutContainingBusinessLogic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394057952,"status":"passed","title":"should_CoordinateDomainEntities_WithoutContainingBusinessLogic"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","architectural compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute architectural compliance should_ReturnResultPattern_ConsistentlyForAllOperations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394057952,"status":"passed","title":"should_ReturnResultPattern_ConsistentlyForAllOperations"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","architectural compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute architectural compliance should_NotLeakDomainEntities_InResponseObjects","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394057953,"status":"passed","title":"should_NotLeakDomainEntities_InResponseObjects"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute edge cases should_HandleNullDescription_Gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057954,"status":"passed","title":"should_HandleNullDescription_Gracefully"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute edge cases should_TrimWhitespaceFromName_WhenProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057955,"status":"passed","title":"should_TrimWhitespaceFromName_WhenProvided"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","edge cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute edge cases should_GenerateUniqueActionIds_ForConcurrentRequests","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394057957,"status":"passed","title":"should_GenerateUniqueActionIds_ForConcurrentRequests"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute edge cases should_HandleDefaultRetryPolicyCreation_WhenNotProvided","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057957,"status":"passed","title":"should_HandleDefaultRetryPolicyCreation_WhenNotProvided"},{"ancestorTitles":["AddActionNodeToContainerUseCase","execute","edge cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AddActionNodeToContainerUseCase execute edge cases should_HandleComplexActionSpecificDataValidation_Correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394057958,"status":"passed","title":"should_HandleComplexActionSpecificDataValidation_Correctly"}],"endTime":1756394057960,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\add-action-node-to-container-use-case.test.ts","startTime":1756394057679,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Service Method Signature Compliance","NodeContextAccessService Contract Compliance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance NodeContextAccessService Contract Compliance should have registerNode method with correct signature","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054243,"status":"passed","title":"should have registerNode method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","NodeContextAccessService Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance NodeContextAccessService Contract Compliance should have getAccessibleContexts method with correct signature","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054245,"status":"passed","title":"should have getAccessibleContexts method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","NodeContextAccessService Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance NodeContextAccessService Contract Compliance should have getNodeContext method with correct signature","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054246,"status":"passed","title":"should have getNodeContext method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","NodeContextAccessService Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance NodeContextAccessService Contract Compliance should have updateNodeContext method with correct signature","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054247,"status":"passed","title":"should have updateNodeContext method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","NodeContextAccessService Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance NodeContextAccessService Contract Compliance should have extractActionNodeContext method with correct signature","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394054248,"status":"passed","title":"should have extractActionNodeContext method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","NodeContextAccessService Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance NodeContextAccessService Contract Compliance should have buildContext method with correct signature","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054249,"status":"passed","title":"should have buildContext method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","NodeContextAccessService Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance NodeContextAccessService Contract Compliance should have clearNodeContext method with correct signature","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054250,"status":"passed","title":"should have clearNodeContext method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","NodeContextAccessService Contract Compliance"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance NodeContextAccessService Contract Compliance should have propagateContext method with correct signature","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054251,"status":"passed","title":"should have propagateContext method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","NodeContextAccessService Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance NodeContextAccessService Contract Compliance should have getHierarchicalContext method with correct signature","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054251,"status":"passed","title":"should have getHierarchicalContext method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","ManageErrorHandlingAndRecoveryUseCase Contract Compliance"],"duration":1070,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance ManageErrorHandlingAndRecoveryUseCase Contract Compliance should have handleActionNodeFailure method with correct signature","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394054252,"status":"passed","title":"should have handleActionNodeFailure method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","ManageErrorHandlingAndRecoveryUseCase Contract Compliance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance ManageErrorHandlingAndRecoveryUseCase Contract Compliance should have handleAgentExecutionFailure method with correct signature","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055322,"status":"passed","title":"should have handleAgentExecutionFailure method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","ManageErrorHandlingAndRecoveryUseCase Contract Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance ManageErrorHandlingAndRecoveryUseCase Contract Compliance should have validateBusinessRules method with correct signature","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055324,"status":"passed","title":"should have validateBusinessRules method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","ManageErrorHandlingAndRecoveryUseCase Contract Compliance"],"duration":1071,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance ManageErrorHandlingAndRecoveryUseCase Contract Compliance should have executeErrorHandlingAndRecovery method with correct signature","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394055325,"status":"passed","title":"should have executeErrorHandlingAndRecovery method with correct signature"},{"ancestorTitles":["Service Method Signature Compliance","ManageErrorHandlingAndRecoveryUseCase Contract Compliance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance ManageErrorHandlingAndRecoveryUseCase Contract Compliance should NOT have execute method (commonly expected but non-existent)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056396,"status":"passed","title":"should NOT have execute method (commonly expected but non-existent)"},{"ancestorTitles":["Service Method Signature Compliance","Mock Object Structure Compliance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance Mock Object Structure Compliance should define proper mock structure for NodeContextAccessService","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056398,"status":"passed","title":"should define proper mock structure for NodeContextAccessService"},{"ancestorTitles":["Service Method Signature Compliance","Mock Object Structure Compliance"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance Mock Object Structure Compliance should define proper mock structure for ManageErrorHandlingAndRecoveryUseCase","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056400,"status":"passed","title":"should define proper mock structure for ManageErrorHandlingAndRecoveryUseCase"},{"ancestorTitles":["Service Method Signature Compliance","Service Method Call Pattern Documentation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance Service Method Call Pattern Documentation should document correct way to call NodeContextAccessService methods","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394056401,"status":"passed","title":"should document correct way to call NodeContextAccessService methods"},{"ancestorTitles":["Service Method Signature Compliance","Service Method Call Pattern Documentation"],"duration":2087,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Service Method Signature Compliance Service Method Call Pattern Documentation should document correct way to call ManageErrorHandlingAndRecoveryUseCase methods","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394056402,"status":"passed","title":"should document correct way to call ManageErrorHandlingAndRecoveryUseCase methods"}],"endTime":1756394058490,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\service-method-signature-compliance.test.ts","startTime":1756394053939,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-022: Handle Action Node Execution Failure"],"duration":2011,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-022: Handle Action Node Execution Failure HandleActionNodeFailure_WithRetryableFailure_ShouldRetryWithExponentialBackoff","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"startAt":1756394054199,"status":"passed","title":"HandleActionNodeFailure_WithRetryableFailure_ShouldRetryWithExponentialBackoff"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-022: Handle Action Node Execution Failure"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-022: Handle Action Node Execution Failure HandleActionNodeFailure_WhenMaxRetriesExceeded_ShouldFailFast","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056210,"status":"passed","title":"HandleActionNodeFailure_WhenMaxRetriesExceeded_ShouldFailFast"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-022: Handle Action Node Execution Failure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-022: Handle Action Node Execution Failure HandleActionNodeFailure_WhenRetryPolicyEvaluationFails_ShouldReturnFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056212,"status":"passed","title":"HandleActionNodeFailure_WhenRetryPolicyEvaluationFails_ShouldReturnFailure"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-023: Handle Agent Execution Failure"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-023: Handle Agent Execution Failure HandleAgentExecutionFailure_WithTimeoutFailure_ShouldRetryAgent","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056213,"status":"passed","title":"HandleAgentExecutionFailure_WithTimeoutFailure_ShouldRetryAgent"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-023: Handle Agent Execution Failure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-023: Handle Agent Execution Failure HandleAgentExecutionFailure_WithConfigurationFailure_ShouldRestartAgent","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056216,"status":"passed","title":"HandleAgentExecutionFailure_WithConfigurationFailure_ShouldRestartAgent"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-023: Handle Agent Execution Failure"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-023: Handle Agent Execution Failure HandleAgentExecutionFailure_WithCriticalFailure_ShouldDisableAgent","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1756394056217,"status":"passed","title":"HandleAgentExecutionFailure_WithCriticalFailure_ShouldDisableAgent"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-023: Handle Agent Execution Failure"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-023: Handle Agent Execution Failure HandleAgentExecutionFailure_WhenRecoveryFails_ShouldReturnFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056218,"status":"passed","title":"HandleAgentExecutionFailure_WhenRecoveryFails_ShouldReturnFailure"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-024: Validate Business Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-024: Validate Business Rules ValidateBusinessRules_WithCompliantModel_ShouldPassValidation","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394056221,"status":"passed","title":"ValidateBusinessRules_WithCompliantModel_ShouldPassValidation"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-024: Validate Business Rules"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-024: Validate Business Rules ValidateBusinessRules_WithViolations_ShouldBlockOperation","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1756394056223,"status":"passed","title":"ValidateBusinessRules_WithViolations_ShouldBlockOperation"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","UC-024: Validate Business Rules"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase UC-024: Validate Business Rules ValidateBusinessRules_WhenValidationServiceFails_ShouldReturnFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056226,"status":"passed","title":"ValidateBusinessRules_WhenValidationServiceFails_ShouldReturnFailure"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Comprehensive Error Handling Orchestration"],"duration":2061,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Comprehensive Error Handling Orchestration ExecuteErrorHandlingAndRecovery_WithActionExecutionRequest_ShouldHandleSuccessfully","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394056227,"status":"passed","title":"ExecuteErrorHandlingAndRecovery_WithActionExecutionRequest_ShouldHandleSuccessfully"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Comprehensive Error Handling Orchestration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Comprehensive Error Handling Orchestration ExecuteErrorHandlingAndRecovery_WithAgentExecutionRequest_ShouldDisableAndAssessImpacts","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1756394058288,"status":"passed","title":"ExecuteErrorHandlingAndRecovery_WithAgentExecutionRequest_ShouldDisableAndAssessImpacts"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Comprehensive Error Handling Orchestration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Comprehensive Error Handling Orchestration ExecuteErrorHandlingAndRecovery_WithBusinessValidationRequest_ShouldValidateAndBlockOperations","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394058289,"status":"passed","title":"ExecuteErrorHandlingAndRecovery_WithBusinessValidationRequest_ShouldValidateAndBlockOperations"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Comprehensive Error Handling Orchestration"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Comprehensive Error Handling Orchestration ExecuteErrorHandlingAndRecovery_WithMissingRequiredParameters_ShouldReturnFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394058290,"status":"passed","title":"ExecuteErrorHandlingAndRecovery_WithMissingRequiredParameters_ShouldReturnFailure"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Comprehensive Error Handling Orchestration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Comprehensive Error Handling Orchestration ExecuteErrorHandlingAndRecovery_WithComplexCascadingFailures_ShouldHandleAllLayers","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1756394058290,"status":"passed","title":"ExecuteErrorHandlingAndRecovery_WithComplexCascadingFailures_ShouldHandleAllLayers"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Edge Cases and Error Scenarios"],"duration":1070,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Edge Cases and Error Scenarios HandleActionNodeFailure_WithInvalidRetryPolicy_ShouldUseDefault","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394058291,"status":"passed","title":"HandleActionNodeFailure_WithInvalidRetryPolicy_ShouldUseDefault"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Edge Cases and Error Scenarios"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Edge Cases and Error Scenarios HandleAgentExecutionFailure_WithInvalidRecoveryAction_ShouldReturnFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394059361,"status":"passed","title":"HandleAgentExecutionFailure_WithInvalidRecoveryAction_ShouldReturnFailure"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Edge Cases and Error Scenarios"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Edge Cases and Error Scenarios ExecuteErrorHandlingAndRecovery_WithInvalidOperationType_ShouldReturnFailure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394059362,"status":"passed","title":"ExecuteErrorHandlingAndRecovery_WithInvalidOperationType_ShouldReturnFailure"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Performance and Metrics Validation"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Performance and Metrics Validation AllErrorHandlingOperations_ShouldTrackExecutionMetrics","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1756394059362,"status":"passed","title":"AllErrorHandlingOperations_ShouldTrackExecutionMetrics"},{"ancestorTitles":["ManageErrorHandlingAndRecoveryUseCase","Performance and Metrics Validation"],"duration":201,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ManageErrorHandlingAndRecoveryUseCase Performance and Metrics Validation HandleActionNodeFailure_WithRetryBackoff_ShouldRespectBackoffTiming","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394059376,"status":"passed","title":"HandleActionNodeFailure_WithRetryBackoff_ShouldRespectBackoffTiming"}],"endTime":1756394059578,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\use-cases\\function-model\\manage-error-handling-and-recovery-use-case.test.ts","startTime":1756394053920,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AIAgentOrchestrationService","Agent Registration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Registration should register an agent successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394054164,"status":"passed","title":"should register an agent successfully"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Registration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Registration should initialize performance metrics when registering agent","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394054167,"status":"passed","title":"should initialize performance metrics when registering agent"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Registration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Registration should register node metadata successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394054168,"status":"passed","title":"should register node metadata successfully"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Discovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Discovery should discover agents based on required capabilities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394054170,"status":"passed","title":"should discover agents based on required capabilities"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Discovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Discovery should filter agents by feature type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054171,"status":"passed","title":"should filter agents by feature type"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Discovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Discovery should filter agents by entity ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054172,"status":"passed","title":"should filter agents by entity ID"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Discovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Discovery should exclude disabled agents","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054173,"status":"passed","title":"should exclude disabled agents"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Discovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Discovery should sort matches by score in descending order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054174,"status":"passed","title":"should sort matches by score in descending order"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Discovery"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Discovery should calculate capability match scores correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054175,"status":"passed","title":"should calculate capability match scores correctly"},{"ancestorTitles":["AIAgentOrchestrationService","Task Execution"],"duration":2189,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Task Execution should execute task with suitable agent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394054176,"status":"passed","title":"should execute task with suitable agent"},{"ancestorTitles":["AIAgentOrchestrationService","Task Execution"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Task Execution should fail when no suitable agents found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394056365,"status":"passed","title":"should fail when no suitable agents found"},{"ancestorTitles":["AIAgentOrchestrationService","Task Execution"],"duration":4184,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Task Execution should queue tasks when at capacity","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394056371,"status":"passed","title":"should queue tasks when at capacity"},{"ancestorTitles":["AIAgentOrchestrationService","Task Execution"],"duration":2765,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Task Execution should update agent performance metrics after execution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394060555,"status":"passed","title":"should update agent performance metrics after execution"},{"ancestorTitles":["AIAgentOrchestrationService","Execution Results"],"duration":4757,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Execution Results should retrieve execution result by request ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394063320,"status":"passed","title":"should retrieve execution result by request ID"},{"ancestorTitles":["AIAgentOrchestrationService","Execution Results"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Execution Results should return error for non-existent request ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394068077,"status":"passed","title":"should return error for non-existent request ID"},{"ancestorTitles":["AIAgentOrchestrationService","Execution Results"],"duration":2731,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Execution Results should return completed result for finished request","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394068078,"status":"passed","title":"should return completed result for finished request"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Metrics"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Metrics should return agent metrics for registered agent","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1756394070809,"status":"passed","title":"should return agent metrics for registered agent"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Metrics"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Metrics should return error for unregistered agent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394070811,"status":"passed","title":"should return error for unregistered agent"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Failure Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Failure Handling should handle agent failure with disable action","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394070811,"status":"passed","title":"should handle agent failure with disable action"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Failure Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Failure Handling should handle agent failure with restart action","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394070812,"status":"passed","title":"should handle agent failure with restart action"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Failure Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Failure Handling should handle agent failure with retry action","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1756394070812,"status":"passed","title":"should handle agent failure with retry action"},{"ancestorTitles":["AIAgentOrchestrationService","Agent Failure Handling"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Agent Failure Handling should return error for non-existent agent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394070812,"status":"passed","title":"should return error for non-existent agent"},{"ancestorTitles":["AIAgentOrchestrationService","Semantic Agent Search"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Semantic Agent Search should find agents through semantic search","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394070813,"status":"passed","title":"should find agents through semantic search"},{"ancestorTitles":["AIAgentOrchestrationService","Semantic Agent Search"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Semantic Agent Search should filter semantic search by feature type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394070814,"status":"passed","title":"should filter semantic search by feature type"},{"ancestorTitles":["AIAgentOrchestrationService","Semantic Agent Search"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Semantic Agent Search should limit semantic search results","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394070815,"status":"passed","title":"should limit semantic search results"},{"ancestorTitles":["AIAgentOrchestrationService","Semantic Agent Search"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Semantic Agent Search should exclude disabled agents from semantic search","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394070815,"status":"passed","title":"should exclude disabled agents from semantic search"},{"ancestorTitles":["AIAgentOrchestrationService","Workflow Coordination"],"duration":4432,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Workflow Coordination should coordinate sequential workflow execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394070816,"status":"passed","title":"should coordinate sequential workflow execution"},{"ancestorTitles":["AIAgentOrchestrationService","Workflow Coordination"],"duration":2351,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Workflow Coordination should coordinate parallel workflow execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394075248,"status":"passed","title":"should coordinate parallel workflow execution"},{"ancestorTitles":["AIAgentOrchestrationService","Workflow Coordination"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Workflow Coordination should handle workflow execution failure gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394077599,"status":"passed","title":"should handle workflow execution failure gracefully"},{"ancestorTitles":["AIAgentOrchestrationService","Edge Cases and Error Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Edge Cases and Error Handling should handle empty required capabilities gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394077600,"status":"passed","title":"should handle empty required capabilities gracefully"},{"ancestorTitles":["AIAgentOrchestrationService","Edge Cases and Error Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Edge Cases and Error Handling should handle agents with no capabilities","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1756394077601,"status":"passed","title":"should handle agents with no capabilities"},{"ancestorTitles":["AIAgentOrchestrationService","Edge Cases and Error Handling"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"AIAgentOrchestrationService Edge Cases and Error Handling should handle context keywords in capability matching","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1756394077601,"status":"passed","title":"should handle context keywords in capability matching"}],"endTime":1756394077603,"message":"","name":"C:\\Users\\alant\\OneDrive\\Desktop\\Projects\\silver-ai-automation\\tests\\unit\\domain\\services\\ai-agent-orchestration-service.test.ts","startTime":1756394053867,"status":"passed","summary":""}],"wasInterrupted":false}
